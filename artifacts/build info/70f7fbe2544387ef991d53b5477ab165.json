{
	"id": "70f7fbe2544387ef991d53b5477ab165",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"Kagi Crypto.sol": {
				"content": "/**\r\n\r\n$$\\   $$\\                 $$\\        $$$$$$\\                             $$\\              \r\n$$ | $$  |                \\__|      $$  __$$\\                            $$ |            \r\n$$ |$$  /$$$$$$\\  $$$$$$\\ $$\\       $$ /  \\__|$$$$$$\\ $$\\   $$\\ $$$$$$\\$$$$$$\\   $$$$$$\\  \r\n$$$$$  / \\____$$\\$$  __$$\\$$ |      $$ |     $$  __$$\\$$ |  $$ $$  __$$\\_$$  _| $$  __$$\\\r\n$$  $$<  $$$$$$$ $$ /  $$ $$ |      $$ |     $$ |  \\__$$ |  $$ $$ /  $$ |$$ |   $$ /  $$ |\r\n$$ |\\$$\\$$  __$$ $$ |  $$ $$ |      $$ |  $$\\$$ |     $$ |  $$ $$ |  $$ |$$ |$$\\$$ |  $$ |\r\n$$ | \\$$\\$$$$$$$ \\$$$$$$$ $$ |      \\$$$$$$  $$ |     \\$$$$$$$ $$$$$$$  |\\$$$$  \\$$$$$$  |\r\n\\__|  \\__\\_______|\\____$$ \\__|       \\______/\\__|      \\____$$ $$  ____/  \\____/ \\______/\r\n                 $$\\   $$ |                           $$\\   $$ $$ |                      \r\n                 \\$$$$$$  |                           \\$$$$$$  $$ |                      \r\n                  \\______/                             \\______/\\__|                      \r\n*/\r\n\r\n\r\n// Symbol      : KGC\r\n// Name        : Kagi Crypto\r\n// Total supply: 100 billion\r\n// Decimals    : 18\r\n// ---------------------------------------------------------------------------- >>>>\r\n\r\n\r\n// Just Send 0 GLMR to this contract address\r\n// You will get free KGC automatically\r\n// Each wallet address can only claim once\r\n// The Top 250 Holders will be rewarded monthly for 5 years\r\n// Reward claims will continue to decrease if more and more people make claims\r\n// Keep Watching https://twitter.com/kagicoins\r\n\r\n// Distribution\r\n\r\n/** Tokenomics 100 billion supply\r\n\r\n- 70 billion for community claims\r\n- 10 billion for the top 250 holders\r\n- 5 billion for the campaign\r\n- 5 billion for the exchange fee\r\n- 5 billion for the team\r\n- 5 billion for development\r\n\r\n/**\r\n\r\n\r\n $$$$$$\\ $$\\         $$\\                                            $$\\       $$\\   $$\\         $$\\      $$\\\r\n$$  __$$\\$$ |        \\__|                                           $$ |      $$ |  $$ |        $$ |     $$ |\r\n$$ /  \\__$$ |$$$$$$\\ $$\\$$$$$$\\$$$$\\         $$$$$$\\ $$$$$$$\\  $$$$$$$ |      $$ |  $$ |$$$$$$\\ $$ |$$$$$$$ |\r\n$$ |     $$ |\\____$$\\$$ $$  _$$  _$$\\        \\____$$\\$$  __$$\\$$  __$$ |      $$$$$$$$ $$  __$$\\$$ $$  __$$ |\r\n$$ |     $$ |$$$$$$$ $$ $$ / $$ / $$ |       $$$$$$$ $$ |  $$ $$ /  $$ |      $$  __$$ $$ /  $$ $$ $$ /  $$ |\r\n$$ |  $$\\$$ $$  __$$ $$ $$ | $$ | $$ |      $$  __$$ $$ |  $$ $$ |  $$ |      $$ |  $$ $$ |  $$ $$ $$ |  $$ |\r\n\\$$$$$$  $$ \\$$$$$$$ $$ $$ | $$ | $$ |      \\$$$$$$$ $$ |  $$ \\$$$$$$$ |      $$ |  $$ \\$$$$$$  $$ \\$$$$$$$ |\r\n \\______/\\__|\\_______\\__\\__| \\__| \\__|       \\_______\\__|  \\__|\\_______|      \\__|  \\__|\\______/\\__|\\_______|\r\n                                                                                                             \r\n                                                                                                             \r\n                                                                                                           \r\n*/\r\n\r\n\r\npragma solidity ^0.4.22;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n}\r\n   \r\ncontract ForeignToken {\r\n    function balanceOf(address _owner) constant public returns (uint256);\r\n    function transfer(address _to, uint256 _value) public returns (bool);\r\n}\r\n\r\ncontract ERC20Basic {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address who) public constant returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender) public constant returns (uint256);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface Token {\r\n    function distr(address _to, uint256 _value) external returns (bool);\r\n    function totalSupply() constant external returns (uint256 supply);\r\n    function balanceOf(address _owner) constant external returns (uint256 balance);\r\n}\r\n\r\ncontract KagiCrypto is ERC20 {\r\n\r\n \r\n   \r\n    using SafeMath for uint256;\r\n    address owner = msg.sender;\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n    mapping (address => bool) public blacklist;\r\n\r\n    string public constant name = \"Kagi Crypto\";\r\n    string public constant symbol = \"KGC\";\r\n    uint public constant decimals = 18;\r\n   \r\nuint256 public totalSupply = 100000000000e18;\r\n   \r\nuint256 public totalDistributed = 30000000000e18;\r\n   \r\nuint256 public totalRemaining = totalSupply.sub(totalDistributed);\r\n   \r\nuint256 public value = 500000e18;\r\n\r\n\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n   \r\n    event Distr(address indexed to, uint256 amount);\r\n    event DistrFinished();\r\n   \r\n    event Burn(address indexed burner, uint256 value);\r\n\r\n    bool public distributionFinished = false;\r\n   \r\n    modifier canDistr() {\r\n        require(!distributionFinished);\r\n        _;\r\n    }\r\n   \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n   \r\n    modifier onlyWhitelist() {\r\n        require(blacklist[msg.sender] == false);\r\n        _;\r\n    }\r\n\r\n    function KGC() onlyOwner public {\r\n        owner = msg.sender;\r\n        balances[owner] = totalDistributed;\r\n    }\r\n   \r\n    function finishDistribution() onlyOwner canDistr public returns (bool) {\r\n        distributionFinished = true;\r\n        emit DistrFinished();\r\n        return true;\r\n    }\r\n   \r\n    function distr(address _to, uint256 _amount) canDistr private returns (bool) {\r\n        totalDistributed = totalDistributed.add(_amount);\r\n        totalRemaining = totalRemaining.sub(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        emit Distr(_to, _amount);\r\n        emit Transfer(address(0), _to, _amount);\r\n        return true;\r\n       \r\n        if (totalDistributed >= totalSupply) {\r\n            distributionFinished = true;\r\n        }\r\n    }\r\n   \r\n    function () external payable {\r\n        getTokens();\r\n     }\r\n   \r\n    function getTokens() payable canDistr onlyWhitelist public {\r\n        if (value > totalRemaining) {\r\n            value = totalRemaining;\r\n        }\r\n       \r\n        require(value <= totalRemaining);\r\n       \r\n        address investor = msg.sender;\r\n        uint256 toGive = value;\r\n       \r\n        distr(investor, toGive);\r\n       \r\n        if (toGive > 0) {\r\n            blacklist[investor] = true;\r\n        }\r\n\r\n        if (totalDistributed >= totalSupply) {\r\n            distributionFinished = true;\r\n        }\r\n       \r\n        value = value.div(500000).mul(499999);\r\n    }\r\n\r\n    function balanceOf(address _owner) constant public returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    modifier onlyPayloadSize(uint size) {\r\n        assert(msg.data.length >= size + 4);\r\n        _;\r\n    }\r\n   \r\n    function transfer(address _to, uint256 _amount) onlyPayloadSize(2 * 32) public returns (bool success) {\r\n        require(_to != address(0));\r\n        require(_amount <= balances[msg.sender]);\r\n       \r\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        emit Transfer(msg.sender, _to, _amount);\r\n        return true;\r\n    }\r\n   \r\n    function transferFrom(address _from, address _to, uint256 _amount) onlyPayloadSize(3 * 32) public returns (bool success) {\r\n        require(_to != address(0));\r\n        require(_amount <= balances[_from]);\r\n        require(_amount <= allowed[_from][msg.sender]);\r\n       \r\n        balances[_from] = balances[_from].sub(_amount);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        emit Transfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n   \r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; }\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n   \r\n    function allowance(address _owner, address _spender) constant public returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n   \r\n    function getTokenBalance(address tokenAddress, address who) constant public returns (uint){\r\n        ForeignToken t = ForeignToken(tokenAddress);\r\n        uint bal = t.balanceOf(who);\r\n        return bal;\r\n    }\r\n   \r\n    function withdraw() onlyOwner public {\r\n        uint256 GLMRBalance = address(this).balance;\r\n        owner.transfer(GLMRBalance);\r\n    }\r\n   \r\n    function burn(uint256 _value) onlyOwner public {\r\n        require(_value <= balances[msg.sender]);\r\n\r\n        address burner = msg.sender;\r\n        balances[burner] = balances[burner].sub(_value);\r\n        totalSupply = totalSupply.sub(_value);\r\n        totalDistributed = totalDistributed.sub(_value);\r\n        emit Burn(burner, _value);\r\n    }\r\n   \r\n    function withdrawForeignTokens(address _tokenContract) onlyOwner public returns (bool) {\r\n        ForeignToken token = ForeignToken(_tokenContract);\r\n        uint256 amount = token.balanceOf(address(this));\r\n        return token.transfer(owner, amount);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Kagi Crypto.sol": {
				"ERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"ERC20Basic": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"ForeignToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"KagiCrypto": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "value",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "finishDistribution",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getTokens",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "distributionFinished",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "getTokenBalance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "KGC",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalRemaining",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_tokenContract",
									"type": "address"
								}
							],
							"name": "withdrawForeignTokens",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalDistributed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "blacklist",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Distr",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "DistrFinished",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "burner",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Kagi Crypto.sol\":4784:10151  contract KagiCrypto is ERC20 {\r... */\n  mstore(0x40, 0x80)\n    /* \"Kagi Crypto.sol\":4879:4889  msg.sender */\n  caller\n    /* \"Kagi Crypto.sol\":4863:4889  address owner = msg.sender */\n  0x1\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Kagi Crypto.sol\":5222:5237  100000000000e18 */\n  0x1431e0fae6d7217caa0000000\n    /* \"Kagi Crypto.sol\":5193:5237  uint256 public totalSupply = 100000000000e18 */\n  0x5\n  sstore\n    /* \"Kagi Crypto.sol\":5279:5293  30000000000e18 */\n  0x60ef6b1aba6f072330000000\n    /* \"Kagi Crypto.sol\":5245:5293  uint256 public totalDistributed = 30000000000e18 */\n  0x6\n  sstore\n    /* \"Kagi Crypto.sol\":5333:5366  totalSupply.sub(totalDistributed) */\n  tag_1\n    /* \"Kagi Crypto.sol\":5349:5365  totalDistributed */\n  sload(0x6)\n    /* \"Kagi Crypto.sol\":5333:5344  totalSupply */\n  sload(0x5)\n    /* \"Kagi Crypto.sol\":5333:5348  totalSupply.sub */\n  or(tag_0_121, mul(0x100000000, tag_2))\n  swap1\n    /* \"Kagi Crypto.sol\":5333:5366  totalSupply.sub(totalDistributed) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_1:\n    /* \"Kagi Crypto.sol\":5301:5366  uint256 public totalRemaining = totalSupply.sub(totalDistributed) */\n  0x7\n  sstore\n    /* \"Kagi Crypto.sol\":5397:5406  500000e18 */\n  0x69e10de76676d0800000\n    /* \"Kagi Crypto.sol\":5374:5406  uint256 public value = 500000e18 */\n  0x8\n  sstore\n    /* \"Kagi Crypto.sol\":5772:5777  false */\n  0x0\n    /* \"Kagi Crypto.sol\":5737:5777  bool public distributionFinished = false */\n  0x9\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Kagi Crypto.sol\":4784:10151  contract KagiCrypto is ERC20 {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_3:\n    /* \"Kagi Crypto.sol\":4784:10151  contract KagiCrypto is ERC20 {\r... */\n  pop\n  jump(tag_4)\n    /* \"Kagi Crypto.sol\":3341:3454  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\ntag_2:\n    /* \"Kagi Crypto.sol\":3399:3406  uint256 */\n  0x0\n    /* \"Kagi Crypto.sol\":3427:3428  a */\n  dup3\n    /* \"Kagi Crypto.sol\":3422:3423  b */\n  dup3\n    /* \"Kagi Crypto.sol\":3422:3428  b <= a */\n  gt\n  iszero\n    /* \"Kagi Crypto.sol\":3415:3429  assert(b <= a) */\n  iszero\n  iszero\n  tag_6\n  jumpi\n  invalid\ntag_6:\n    /* \"Kagi Crypto.sol\":3447:3448  b */\n  dup2\n    /* \"Kagi Crypto.sol\":3443:3444  a */\n  dup4\n    /* \"Kagi Crypto.sol\":3443:3448  a - b */\n  sub\n    /* \"Kagi Crypto.sol\":3436:3448  return a - b */\n  swap1\n  pop\n    /* \"Kagi Crypto.sol\":3341:3454  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Kagi Crypto.sol\":4784:10151  contract KagiCrypto is ERC20 {\r... */\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Kagi Crypto.sol\":4784:10151  contract KagiCrypto is ERC20 {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3fa4f245\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9b1cbccc\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xaa6ca808\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc108d542\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc489744b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc63e6171\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd8a54360\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe58fc54c\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xefca2eed\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf9f92be4\n      eq\n      tag_22\n      jumpi\n    tag_1:\n        /* \"Kagi Crypto.sol\":6901:6912  getTokens() */\n      tag_25\n        /* \"Kagi Crypto.sol\":6901:6910  getTokens */\n      tag_26\n        /* \"Kagi Crypto.sol\":6901:6912  getTokens() */\n      jump\t// in\n    tag_25:\n        /* \"Kagi Crypto.sol\":4784:10151  contract KagiCrypto is ERC20 {\r... */\n      stop\n        /* \"Kagi Crypto.sol\":5057:5100  string public constant name = \"Kagi Crypto\" */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"Kagi Crypto.sol\":5057:5100  string public constant name = \"Kagi Crypto\" */\n      pop\n      tag_28\n      jump(tag_29)\n    tag_28:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_30:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_30)\n    tag_31:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Kagi Crypto.sol\":5057:5100  string public constant name = \"Kagi Crypto\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_33:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":8706:9002  function approve(address _spender, uint256 _value) public returns (bool success) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"Kagi Crypto.sol\":8706:9002  function approve(address _spender, uint256 _value) public returns (bool success) {\r... */\n      pop\n      tag_35\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_36)\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":5193:5237  uint256 public totalSupply = 100000000000e18 */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"Kagi Crypto.sol\":5193:5237  uint256 public totalSupply = 100000000000e18 */\n      pop\n      tag_38\n      jump(tag_39)\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":8161:8695  function transferFrom(address _from, address _to, uint256 _amount) onlyPayloadSize(3 * 32) public returns (bool success) {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"Kagi Crypto.sol\":8161:8695  function transferFrom(address _from, address _to, uint256 _amount) onlyPayloadSize(3 * 32) public returns (bool success) {\r... */\n      pop\n      tag_41\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_42)\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":5151:5185  uint public constant decimals = 18 */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n        /* \"Kagi Crypto.sol\":5151:5185  uint public constant decimals = 18 */\n      pop\n      tag_44\n      jump(tag_45)\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":9384:9521  function withdraw() onlyOwner public {\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"Kagi Crypto.sol\":9384:9521  function withdraw() onlyOwner public {\r... */\n      pop\n      tag_47\n      jump(tag_48)\n    tag_47:\n      stop\n        /* \"Kagi Crypto.sol\":5374:5406  uint256 public value = 500000e18 */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"Kagi Crypto.sol\":5374:5406  uint256 public value = 500000e18 */\n      pop\n      tag_50\n      jump(tag_51)\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":9532:9877  function burn(uint256 _value) onlyOwner public {\r... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_52:\n        /* \"Kagi Crypto.sol\":9532:9877  function burn(uint256 _value) onlyOwner public {\r... */\n      pop\n      tag_53\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_54)\n    tag_53:\n      stop\n        /* \"Kagi Crypto.sol\":7519:7630  function balanceOf(address _owner) constant public returns (uint256) {\r... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_55:\n        /* \"Kagi Crypto.sol\":7519:7630  function balanceOf(address _owner) constant public returns (uint256) {\r... */\n      pop\n      tag_56\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_57)\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":5107:5144  string public constant symbol = \"KGC\" */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_58:\n        /* \"Kagi Crypto.sol\":5107:5144  string public constant symbol = \"KGC\" */\n      pop\n      tag_59\n      jump(tag_60)\n    tag_59:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_61:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_61)\n    tag_62:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Kagi Crypto.sol\":5107:5144  string public constant symbol = \"KGC\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_64\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_64:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":6200:6370  function finishDistribution() onlyOwner canDistr public returns (bool) {\r... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_65:\n        /* \"Kagi Crypto.sol\":6200:6370  function finishDistribution() onlyOwner canDistr public returns (bool) {\r... */\n      pop\n      tag_66\n      jump(tag_67)\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":7751:8150  function transfer(address _to, uint256 _amount) onlyPayloadSize(2 * 32) public returns (bool success) {\r... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_68:\n        /* \"Kagi Crypto.sol\":7751:8150  function transfer(address _to, uint256 _amount) onlyPayloadSize(2 * 32) public returns (bool success) {\r... */\n      pop\n      tag_69\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_70)\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":6932:7511  function getTokens() payable canDistr onlyWhitelist public {\r... */\n    tag_14:\n      tag_71\n      jump(tag_26)\n    tag_71:\n      stop\n        /* \"Kagi Crypto.sol\":5737:5777  bool public distributionFinished = false */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n        /* \"Kagi Crypto.sol\":5737:5777  bool public distributionFinished = false */\n      pop\n      tag_73\n      jump(tag_74)\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":9162:9373  function getTokenBalance(address tokenAddress, address who) constant public returns (uint){\r... */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_75\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_75:\n        /* \"Kagi Crypto.sol\":9162:9373  function getTokenBalance(address tokenAddress, address who) constant public returns (uint){\r... */\n      pop\n      tag_76\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_77)\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":6075:6189  function KGC() onlyOwner public {\r... */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_78:\n        /* \"Kagi Crypto.sol\":6075:6189  function KGC() onlyOwner public {\r... */\n      pop\n      tag_79\n      jump(tag_80)\n    tag_79:\n      stop\n        /* \"Kagi Crypto.sol\":5301:5366  uint256 public totalRemaining = totalSupply.sub(totalDistributed) */\n    tag_18:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_81:\n        /* \"Kagi Crypto.sol\":5301:5366  uint256 public totalRemaining = totalSupply.sub(totalDistributed) */\n      pop\n      tag_82\n      jump(tag_83)\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":9013:9151  function allowance(address _owner, address _spender) constant public returns (uint256) {\r... */\n    tag_19:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_84:\n        /* \"Kagi Crypto.sol\":9013:9151  function allowance(address _owner, address _spender) constant public returns (uint256) {\r... */\n      pop\n      tag_85\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_86)\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":9888:10148  function withdrawForeignTokens(address _tokenContract) onlyOwner public returns (bool) {\r... */\n    tag_20:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_87:\n        /* \"Kagi Crypto.sol\":9888:10148  function withdrawForeignTokens(address _tokenContract) onlyOwner public returns (bool) {\r... */\n      pop\n      tag_88\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_89)\n    tag_88:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":5245:5293  uint256 public totalDistributed = 30000000000e18 */\n    tag_21:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_90:\n        /* \"Kagi Crypto.sol\":5245:5293  uint256 public totalDistributed = 30000000000e18 */\n      pop\n      tag_91\n      jump(tag_92)\n    tag_91:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":5006:5048  mapping (address => bool) public blacklist */\n    tag_22:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_93\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_93:\n        /* \"Kagi Crypto.sol\":5006:5048  mapping (address => bool) public blacklist */\n      pop\n      tag_94\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_95)\n    tag_94:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":6932:7511  function getTokens() payable canDistr onlyWhitelist public {\r... */\n    tag_26:\n        /* \"Kagi Crypto.sol\":7150:7166  address investor */\n      0x0\n        /* \"Kagi Crypto.sol\":7190:7204  uint256 toGive */\n      dup1\n        /* \"Kagi Crypto.sol\":5829:5849  distributionFinished */\n      0x9\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Kagi Crypto.sol\":5828:5849  !distributionFinished */\n      iszero\n        /* \"Kagi Crypto.sol\":5820:5850  require(!distributionFinished) */\n      iszero\n      iszero\n      tag_97\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_97:\n        /* \"Kagi Crypto.sol\":6041:6046  false */\n      0x0\n        /* \"Kagi Crypto.sol\":6016:6046  blacklist[msg.sender] == false */\n      iszero\n      iszero\n        /* \"Kagi Crypto.sol\":6016:6025  blacklist */\n      0x4\n        /* \"Kagi Crypto.sol\":6016:6037  blacklist[msg.sender] */\n      0x0\n        /* \"Kagi Crypto.sol\":6026:6036  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":6016:6037  blacklist[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Kagi Crypto.sol\":6016:6046  blacklist[msg.sender] == false */\n      iszero\n      iszero\n      eq\n        /* \"Kagi Crypto.sol\":6008:6047  require(blacklist[msg.sender] == false) */\n      iszero\n      iszero\n      tag_99\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_99:\n        /* \"Kagi Crypto.sol\":7014:7028  totalRemaining */\n      sload(0x7)\n        /* \"Kagi Crypto.sol\":7006:7011  value */\n      sload(0x8)\n        /* \"Kagi Crypto.sol\":7006:7028  value > totalRemaining */\n      gt\n        /* \"Kagi Crypto.sol\":7002:7079  if (value > totalRemaining) {\r... */\n      iszero\n      tag_101\n      jumpi\n        /* \"Kagi Crypto.sol\":7053:7067  totalRemaining */\n      sload(0x7)\n        /* \"Kagi Crypto.sol\":7045:7050  value */\n      0x8\n        /* \"Kagi Crypto.sol\":7045:7067  value = totalRemaining */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":7002:7079  if (value > totalRemaining) {\r... */\n    tag_101:\n        /* \"Kagi Crypto.sol\":7115:7129  totalRemaining */\n      sload(0x7)\n        /* \"Kagi Crypto.sol\":7106:7111  value */\n      sload(0x8)\n        /* \"Kagi Crypto.sol\":7106:7129  value <= totalRemaining */\n      gt\n      iszero\n        /* \"Kagi Crypto.sol\":7098:7130  require(value <= totalRemaining) */\n      iszero\n      iszero\n      tag_102\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_102:\n        /* \"Kagi Crypto.sol\":7169:7179  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":7150:7179  address investor = msg.sender */\n      swap2\n      pop\n        /* \"Kagi Crypto.sol\":7207:7212  value */\n      sload(0x8)\n        /* \"Kagi Crypto.sol\":7190:7212  uint256 toGive = value */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":7232:7255  distr(investor, toGive) */\n      tag_103\n        /* \"Kagi Crypto.sol\":7238:7246  investor */\n      dup3\n        /* \"Kagi Crypto.sol\":7248:7254  toGive */\n      dup3\n        /* \"Kagi Crypto.sol\":7232:7237  distr */\n      tag_104\n        /* \"Kagi Crypto.sol\":7232:7255  distr(investor, toGive) */\n      jump\t// in\n    tag_103:\n      pop\n        /* \"Kagi Crypto.sol\":7288:7289  0 */\n      0x0\n        /* \"Kagi Crypto.sol\":7279:7285  toGive */\n      dup2\n        /* \"Kagi Crypto.sol\":7279:7289  toGive > 0 */\n      gt\n        /* \"Kagi Crypto.sol\":7275:7344  if (toGive > 0) {\r... */\n      iszero\n      tag_105\n      jumpi\n        /* \"Kagi Crypto.sol\":7328:7332  true */\n      0x1\n        /* \"Kagi Crypto.sol\":7306:7315  blacklist */\n      0x4\n        /* \"Kagi Crypto.sol\":7306:7325  blacklist[investor] */\n      0x0\n        /* \"Kagi Crypto.sol\":7316:7324  investor */\n      dup5\n        /* \"Kagi Crypto.sol\":7306:7325  blacklist[investor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"Kagi Crypto.sol\":7306:7332  blacklist[investor] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":7275:7344  if (toGive > 0) {\r... */\n    tag_105:\n        /* \"Kagi Crypto.sol\":7380:7391  totalSupply */\n      sload(0x5)\n        /* \"Kagi Crypto.sol\":7360:7376  totalDistributed */\n      sload(0x6)\n        /* \"Kagi Crypto.sol\":7360:7391  totalDistributed >= totalSupply */\n      lt\n      iszero\n        /* \"Kagi Crypto.sol\":7356:7447  if (totalDistributed >= totalSupply) {\r... */\n      iszero\n      tag_106\n      jumpi\n        /* \"Kagi Crypto.sol\":7431:7435  true */\n      0x1\n        /* \"Kagi Crypto.sol\":7408:7428  distributionFinished */\n      0x9\n      0x0\n        /* \"Kagi Crypto.sol\":7408:7435  distributionFinished = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":7356:7447  if (totalDistributed >= totalSupply) {\r... */\n    tag_106:\n        /* \"Kagi Crypto.sol\":7474:7503  value.div(500000).mul(499999) */\n      tag_107\n        /* \"Kagi Crypto.sol\":7496:7502  499999 */\n      0x7a11f\n        /* \"Kagi Crypto.sol\":7474:7491  value.div(500000) */\n      tag_108\n        /* \"Kagi Crypto.sol\":7484:7490  500000 */\n      0x7a120\n        /* \"Kagi Crypto.sol\":7474:7479  value */\n      sload(0x8)\n        /* \"Kagi Crypto.sol\":7474:7483  value.div */\n      tag_109\n      swap1\n        /* \"Kagi Crypto.sol\":7474:7491  value.div(500000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"Kagi Crypto.sol\":7474:7495  value.div(500000).mul */\n      tag_110\n      swap1\n        /* \"Kagi Crypto.sol\":7474:7503  value.div(500000).mul(499999) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"Kagi Crypto.sol\":7466:7471  value */\n      0x8\n        /* \"Kagi Crypto.sol\":7466:7503  value = value.div(500000).mul(499999) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":6932:7511  function getTokens() payable canDistr onlyWhitelist public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Kagi Crypto.sol\":5057:5100  string public constant name = \"Kagi Crypto\" */\n    tag_29:\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0xb\n      dup2\n      mstore\n      0x20\n      add\n      0x4b6167692043727970746f000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"Kagi Crypto.sol\":8706:9002  function approve(address _spender, uint256 _value) public returns (bool success) {\r... */\n    tag_36:\n        /* \"Kagi Crypto.sol\":8773:8785  bool success */\n      0x0\n        /* \"Kagi Crypto.sol\":8812:8813  0 */\n      dup1\n        /* \"Kagi Crypto.sol\":8802:8808  _value */\n      dup3\n        /* \"Kagi Crypto.sol\":8802:8813  _value != 0 */\n      eq\n      iszero\n        /* \"Kagi Crypto.sol\":8802:8851  _value != 0 && allowed[msg.sender][_spender] != 0 */\n      dup1\n      iszero\n      tag_112\n      jumpi\n      pop\n        /* \"Kagi Crypto.sol\":8850:8851  0 */\n      0x0\n        /* \"Kagi Crypto.sol\":8817:8824  allowed */\n      0x3\n        /* \"Kagi Crypto.sol\":8817:8836  allowed[msg.sender] */\n      0x0\n        /* \"Kagi Crypto.sol\":8825:8835  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":8817:8836  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":8817:8846  allowed[msg.sender][_spender] */\n      0x0\n        /* \"Kagi Crypto.sol\":8837:8845  _spender */\n      dup6\n        /* \"Kagi Crypto.sol\":8817:8846  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Kagi Crypto.sol\":8817:8851  allowed[msg.sender][_spender] != 0 */\n      eq\n      iszero\n        /* \"Kagi Crypto.sol\":8802:8851  _value != 0 && allowed[msg.sender][_spender] != 0 */\n    tag_112:\n        /* \"Kagi Crypto.sol\":8798:8870  if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; } */\n      iszero\n      tag_113\n      jumpi\n        /* \"Kagi Crypto.sol\":8862:8867  false */\n      0x0\n        /* \"Kagi Crypto.sol\":8855:8867  return false */\n      swap1\n      pop\n      jump(tag_111)\n        /* \"Kagi Crypto.sol\":8798:8870  if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; } */\n    tag_113:\n        /* \"Kagi Crypto.sol\":8912:8918  _value */\n      dup2\n        /* \"Kagi Crypto.sol\":8880:8887  allowed */\n      0x3\n        /* \"Kagi Crypto.sol\":8880:8899  allowed[msg.sender] */\n      0x0\n        /* \"Kagi Crypto.sol\":8888:8898  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":8880:8899  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":8880:8909  allowed[msg.sender][_spender] */\n      0x0\n        /* \"Kagi Crypto.sol\":8900:8908  _spender */\n      dup6\n        /* \"Kagi Crypto.sol\":8880:8909  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":8880:8918  allowed[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":8955:8963  _spender */\n      dup3\n        /* \"Kagi Crypto.sol\":8934:8972  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":8943:8953  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":8934:8972  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"Kagi Crypto.sol\":8965:8971  _value */\n      dup5\n        /* \"Kagi Crypto.sol\":8934:8972  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Kagi Crypto.sol\":8990:8994  true */\n      0x1\n        /* \"Kagi Crypto.sol\":8983:8994  return true */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":8706:9002  function approve(address _spender, uint256 _value) public returns (bool success) {\r... */\n    tag_111:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Kagi Crypto.sol\":5193:5237  uint256 public totalSupply = 100000000000e18 */\n    tag_39:\n      sload(0x5)\n      dup2\n      jump\t// out\n        /* \"Kagi Crypto.sol\":8161:8695  function transferFrom(address _from, address _to, uint256 _amount) onlyPayloadSize(3 * 32) public returns (bool success) {\r... */\n    tag_42:\n        /* \"Kagi Crypto.sol\":8268:8280  bool success */\n      0x0\n        /* \"Kagi Crypto.sol\":8244:8250  3 * 32 */\n      0x60\n        /* \"Kagi Crypto.sol\":7718:7719  4 */\n      0x4\n        /* \"Kagi Crypto.sol\":7711:7715  size */\n      dup2\n        /* \"Kagi Crypto.sol\":7711:7719  size + 4 */\n      add\n        /* \"Kagi Crypto.sol\":7692:7700  msg.data */\n      0x0\n      calldatasize\n        /* \"Kagi Crypto.sol\":7692:7707  msg.data.length */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":7692:7719  msg.data.length >= size + 4 */\n      lt\n      iszero\n        /* \"Kagi Crypto.sol\":7685:7720  assert(msg.data.length >= size + 4) */\n      iszero\n      iszero\n      tag_115\n      jumpi\n      invalid\n    tag_115:\n        /* \"Kagi Crypto.sol\":8316:8317  0 */\n      0x0\n        /* \"Kagi Crypto.sol\":8301:8318  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":8301:8304  _to */\n      dup5\n        /* \"Kagi Crypto.sol\":8301:8318  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Kagi Crypto.sol\":8293:8319  require(_to != address(0)) */\n      iszero\n      iszero\n      tag_117\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_117:\n        /* \"Kagi Crypto.sol\":8349:8357  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":8349:8364  balances[_from] */\n      0x0\n        /* \"Kagi Crypto.sol\":8358:8363  _from */\n      dup7\n        /* \"Kagi Crypto.sol\":8349:8364  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Kagi Crypto.sol\":8338:8345  _amount */\n      dup4\n        /* \"Kagi Crypto.sol\":8338:8364  _amount <= balances[_from] */\n      gt\n      iszero\n        /* \"Kagi Crypto.sol\":8330:8365  require(_amount <= balances[_from]) */\n      iszero\n      iszero\n      tag_118\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_118:\n        /* \"Kagi Crypto.sol\":8395:8402  allowed */\n      0x3\n        /* \"Kagi Crypto.sol\":8395:8409  allowed[_from] */\n      0x0\n        /* \"Kagi Crypto.sol\":8403:8408  _from */\n      dup7\n        /* \"Kagi Crypto.sol\":8395:8409  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":8395:8421  allowed[_from][msg.sender] */\n      0x0\n        /* \"Kagi Crypto.sol\":8410:8420  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":8395:8421  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Kagi Crypto.sol\":8384:8391  _amount */\n      dup4\n        /* \"Kagi Crypto.sol\":8384:8421  _amount <= allowed[_from][msg.sender] */\n      gt\n      iszero\n        /* \"Kagi Crypto.sol\":8376:8422  require(_amount <= allowed[_from][msg.sender]) */\n      iszero\n      iszero\n      tag_119\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_119:\n        /* \"Kagi Crypto.sol\":8460:8488  balances[_from].sub(_amount) */\n      tag_120\n        /* \"Kagi Crypto.sol\":8480:8487  _amount */\n      dup4\n        /* \"Kagi Crypto.sol\":8460:8468  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":8460:8475  balances[_from] */\n      0x0\n        /* \"Kagi Crypto.sol\":8469:8474  _from */\n      dup9\n        /* \"Kagi Crypto.sol\":8460:8475  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Kagi Crypto.sol\":8460:8479  balances[_from].sub */\n      tag_121\n      swap1\n        /* \"Kagi Crypto.sol\":8460:8488  balances[_from].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_120:\n        /* \"Kagi Crypto.sol\":8442:8450  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":8442:8457  balances[_from] */\n      0x0\n        /* \"Kagi Crypto.sol\":8451:8456  _from */\n      dup8\n        /* \"Kagi Crypto.sol\":8442:8457  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":8442:8488  balances[_from] = balances[_from].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":8528:8567  allowed[_from][msg.sender].sub(_amount) */\n      tag_122\n        /* \"Kagi Crypto.sol\":8559:8566  _amount */\n      dup4\n        /* \"Kagi Crypto.sol\":8528:8535  allowed */\n      0x3\n        /* \"Kagi Crypto.sol\":8528:8542  allowed[_from] */\n      0x0\n        /* \"Kagi Crypto.sol\":8536:8541  _from */\n      dup9\n        /* \"Kagi Crypto.sol\":8528:8542  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":8528:8554  allowed[_from][msg.sender] */\n      0x0\n        /* \"Kagi Crypto.sol\":8543:8553  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":8528:8554  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Kagi Crypto.sol\":8528:8558  allowed[_from][msg.sender].sub */\n      tag_121\n      swap1\n        /* \"Kagi Crypto.sol\":8528:8567  allowed[_from][msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"Kagi Crypto.sol\":8499:8506  allowed */\n      0x3\n        /* \"Kagi Crypto.sol\":8499:8513  allowed[_from] */\n      0x0\n        /* \"Kagi Crypto.sol\":8507:8512  _from */\n      dup8\n        /* \"Kagi Crypto.sol\":8499:8513  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":8499:8525  allowed[_from][msg.sender] */\n      0x0\n        /* \"Kagi Crypto.sol\":8514:8524  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":8499:8525  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":8499:8567  allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":8594:8620  balances[_to].add(_amount) */\n      tag_123\n        /* \"Kagi Crypto.sol\":8612:8619  _amount */\n      dup4\n        /* \"Kagi Crypto.sol\":8594:8602  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":8594:8607  balances[_to] */\n      0x0\n        /* \"Kagi Crypto.sol\":8603:8606  _to */\n      dup8\n        /* \"Kagi Crypto.sol\":8594:8607  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Kagi Crypto.sol\":8594:8611  balances[_to].add */\n      tag_124\n      swap1\n        /* \"Kagi Crypto.sol\":8594:8620  balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_123:\n        /* \"Kagi Crypto.sol\":8578:8586  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":8578:8591  balances[_to] */\n      0x0\n        /* \"Kagi Crypto.sol\":8587:8590  _to */\n      dup7\n        /* \"Kagi Crypto.sol\":8578:8591  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":8578:8620  balances[_to] = balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":8652:8655  _to */\n      dup4\n        /* \"Kagi Crypto.sol\":8636:8665  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":8645:8650  _from */\n      dup6\n        /* \"Kagi Crypto.sol\":8636:8665  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Kagi Crypto.sol\":8657:8664  _amount */\n      dup6\n        /* \"Kagi Crypto.sol\":8636:8665  Transfer(_from, _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Kagi Crypto.sol\":8683:8687  true */\n      0x1\n        /* \"Kagi Crypto.sol\":8676:8687  return true */\n      swap2\n      pop\n        /* \"Kagi Crypto.sol\":8161:8695  function transferFrom(address _from, address _to, uint256 _amount) onlyPayloadSize(3 * 32) public returns (bool success) {\r... */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Kagi Crypto.sol\":5151:5185  uint public constant decimals = 18 */\n    tag_45:\n        /* \"Kagi Crypto.sol\":5183:5185  18 */\n      0x12\n        /* \"Kagi Crypto.sol\":5151:5185  uint public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"Kagi Crypto.sol\":9384:9521  function withdraw() onlyOwner public {\r... */\n    tag_48:\n        /* \"Kagi Crypto.sol\":9432:9451  uint256 GLMRBalance */\n      0x0\n        /* \"Kagi Crypto.sol\":5935:5940  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":5921:5940  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":5921:5931  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":5921:5940  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Kagi Crypto.sol\":5913:5941  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_126\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_126:\n        /* \"Kagi Crypto.sol\":9462:9466  this */\n      address\n        /* \"Kagi Crypto.sol\":9454:9475  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"Kagi Crypto.sol\":9432:9475  uint256 GLMRBalance = address(this).balance */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":9486:9491  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":9486:9500  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":9486:9513  owner.transfer(GLMRBalance) */\n      0x8fc\n        /* \"Kagi Crypto.sol\":9501:9512  GLMRBalance */\n      dup3\n        /* \"Kagi Crypto.sol\":9486:9513  owner.transfer(GLMRBalance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_128\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_128:\n        /* \"Kagi Crypto.sol\":9486:9513  owner.transfer(GLMRBalance) */\n      pop\n        /* \"Kagi Crypto.sol\":9384:9521  function withdraw() onlyOwner public {\r... */\n      pop\n      jump\t// out\n        /* \"Kagi Crypto.sol\":5374:5406  uint256 public value = 500000e18 */\n    tag_51:\n      sload(0x8)\n      dup2\n      jump\t// out\n        /* \"Kagi Crypto.sol\":9532:9877  function burn(uint256 _value) onlyOwner public {\r... */\n    tag_54:\n        /* \"Kagi Crypto.sol\":9642:9656  address burner */\n      0x0\n        /* \"Kagi Crypto.sol\":5935:5940  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":5921:5940  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":5921:5931  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":5921:5940  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Kagi Crypto.sol\":5913:5941  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_130\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_130:\n        /* \"Kagi Crypto.sol\":9608:9616  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":9608:9628  balances[msg.sender] */\n      0x0\n        /* \"Kagi Crypto.sol\":9617:9627  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":9608:9628  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Kagi Crypto.sol\":9598:9604  _value */\n      dup3\n        /* \"Kagi Crypto.sol\":9598:9628  _value <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"Kagi Crypto.sol\":9590:9629  require(_value <= balances[msg.sender]) */\n      iszero\n      iszero\n      tag_132\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_132:\n        /* \"Kagi Crypto.sol\":9659:9669  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":9642:9669  address burner = msg.sender */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":9699:9727  balances[burner].sub(_value) */\n      tag_133\n        /* \"Kagi Crypto.sol\":9720:9726  _value */\n      dup3\n        /* \"Kagi Crypto.sol\":9699:9707  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":9699:9715  balances[burner] */\n      0x0\n        /* \"Kagi Crypto.sol\":9708:9714  burner */\n      dup5\n        /* \"Kagi Crypto.sol\":9699:9715  balances[burner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Kagi Crypto.sol\":9699:9719  balances[burner].sub */\n      tag_121\n      swap1\n        /* \"Kagi Crypto.sol\":9699:9727  balances[burner].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"Kagi Crypto.sol\":9680:9688  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":9680:9696  balances[burner] */\n      0x0\n        /* \"Kagi Crypto.sol\":9689:9695  burner */\n      dup4\n        /* \"Kagi Crypto.sol\":9680:9696  balances[burner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":9680:9727  balances[burner] = balances[burner].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":9752:9775  totalSupply.sub(_value) */\n      tag_134\n        /* \"Kagi Crypto.sol\":9768:9774  _value */\n      dup3\n        /* \"Kagi Crypto.sol\":9752:9763  totalSupply */\n      sload(0x5)\n        /* \"Kagi Crypto.sol\":9752:9767  totalSupply.sub */\n      tag_121\n      swap1\n        /* \"Kagi Crypto.sol\":9752:9775  totalSupply.sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"Kagi Crypto.sol\":9738:9749  totalSupply */\n      0x5\n        /* \"Kagi Crypto.sol\":9738:9775  totalSupply = totalSupply.sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":9805:9833  totalDistributed.sub(_value) */\n      tag_135\n        /* \"Kagi Crypto.sol\":9826:9832  _value */\n      dup3\n        /* \"Kagi Crypto.sol\":9805:9821  totalDistributed */\n      sload(0x6)\n        /* \"Kagi Crypto.sol\":9805:9825  totalDistributed.sub */\n      tag_121\n      swap1\n        /* \"Kagi Crypto.sol\":9805:9833  totalDistributed.sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"Kagi Crypto.sol\":9786:9802  totalDistributed */\n      0x6\n        /* \"Kagi Crypto.sol\":9786:9833  totalDistributed = totalDistributed.sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":9854:9860  burner */\n      dup1\n        /* \"Kagi Crypto.sol\":9849:9869  Burn(burner, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5\n        /* \"Kagi Crypto.sol\":9862:9868  _value */\n      dup4\n        /* \"Kagi Crypto.sol\":9849:9869  Burn(burner, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Kagi Crypto.sol\":9532:9877  function burn(uint256 _value) onlyOwner public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Kagi Crypto.sol\":7519:7630  function balanceOf(address _owner) constant public returns (uint256) {\r... */\n    tag_57:\n        /* \"Kagi Crypto.sol\":7579:7586  uint256 */\n      0x0\n        /* \"Kagi Crypto.sol\":7606:7614  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":7606:7622  balances[_owner] */\n      0x0\n        /* \"Kagi Crypto.sol\":7615:7621  _owner */\n      dup4\n        /* \"Kagi Crypto.sol\":7606:7622  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Kagi Crypto.sol\":7599:7622  return balances[_owner] */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":7519:7630  function balanceOf(address _owner) constant public returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Kagi Crypto.sol\":5107:5144  string public constant symbol = \"KGC\" */\n    tag_60:\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x3\n      dup2\n      mstore\n      0x20\n      add\n      0x4b47430000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"Kagi Crypto.sol\":6200:6370  function finishDistribution() onlyOwner canDistr public returns (bool) {\r... */\n    tag_67:\n        /* \"Kagi Crypto.sol\":6265:6269  bool */\n      0x0\n        /* \"Kagi Crypto.sol\":5935:5940  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":5921:5940  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":5921:5931  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":5921:5940  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Kagi Crypto.sol\":5913:5941  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_138\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_138:\n        /* \"Kagi Crypto.sol\":5829:5849  distributionFinished */\n      0x9\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Kagi Crypto.sol\":5828:5849  !distributionFinished */\n      iszero\n        /* \"Kagi Crypto.sol\":5820:5850  require(!distributionFinished) */\n      iszero\n      iszero\n      tag_140\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_140:\n        /* \"Kagi Crypto.sol\":6305:6309  true */\n      0x1\n        /* \"Kagi Crypto.sol\":6282:6302  distributionFinished */\n      0x9\n      0x0\n        /* \"Kagi Crypto.sol\":6282:6309  distributionFinished = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":6325:6340  DistrFinished() */\n      0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Kagi Crypto.sol\":6358:6362  true */\n      0x1\n        /* \"Kagi Crypto.sol\":6351:6362  return true */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":6200:6370  function finishDistribution() onlyOwner canDistr public returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"Kagi Crypto.sol\":7751:8150  function transfer(address _to, uint256 _amount) onlyPayloadSize(2 * 32) public returns (bool success) {\r... */\n    tag_70:\n        /* \"Kagi Crypto.sol\":7839:7851  bool success */\n      0x0\n        /* \"Kagi Crypto.sol\":7815:7821  2 * 32 */\n      0x40\n        /* \"Kagi Crypto.sol\":7718:7719  4 */\n      0x4\n        /* \"Kagi Crypto.sol\":7711:7715  size */\n      dup2\n        /* \"Kagi Crypto.sol\":7711:7719  size + 4 */\n      add\n        /* \"Kagi Crypto.sol\":7692:7700  msg.data */\n      0x0\n      calldatasize\n        /* \"Kagi Crypto.sol\":7692:7707  msg.data.length */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":7692:7719  msg.data.length >= size + 4 */\n      lt\n      iszero\n        /* \"Kagi Crypto.sol\":7685:7720  assert(msg.data.length >= size + 4) */\n      iszero\n      iszero\n      tag_143\n      jumpi\n      invalid\n    tag_143:\n        /* \"Kagi Crypto.sol\":7887:7888  0 */\n      0x0\n        /* \"Kagi Crypto.sol\":7872:7889  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":7872:7875  _to */\n      dup5\n        /* \"Kagi Crypto.sol\":7872:7889  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Kagi Crypto.sol\":7864:7890  require(_to != address(0)) */\n      iszero\n      iszero\n      tag_145\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_145:\n        /* \"Kagi Crypto.sol\":7920:7928  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":7920:7940  balances[msg.sender] */\n      0x0\n        /* \"Kagi Crypto.sol\":7929:7939  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":7920:7940  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Kagi Crypto.sol\":7909:7916  _amount */\n      dup4\n        /* \"Kagi Crypto.sol\":7909:7940  _amount <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"Kagi Crypto.sol\":7901:7941  require(_amount <= balances[msg.sender]) */\n      iszero\n      iszero\n      tag_146\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_146:\n        /* \"Kagi Crypto.sol\":7984:8017  balances[msg.sender].sub(_amount) */\n      tag_147\n        /* \"Kagi Crypto.sol\":8009:8016  _amount */\n      dup4\n        /* \"Kagi Crypto.sol\":7984:7992  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":7984:8004  balances[msg.sender] */\n      0x0\n        /* \"Kagi Crypto.sol\":7993:8003  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":7984:8004  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Kagi Crypto.sol\":7984:8008  balances[msg.sender].sub */\n      tag_121\n      swap1\n        /* \"Kagi Crypto.sol\":7984:8017  balances[msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_147:\n        /* \"Kagi Crypto.sol\":7961:7969  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":7961:7981  balances[msg.sender] */\n      0x0\n        /* \"Kagi Crypto.sol\":7970:7980  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":7961:7981  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":7961:8017  balances[msg.sender] = balances[msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":8044:8070  balances[_to].add(_amount) */\n      tag_148\n        /* \"Kagi Crypto.sol\":8062:8069  _amount */\n      dup4\n        /* \"Kagi Crypto.sol\":8044:8052  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":8044:8057  balances[_to] */\n      0x0\n        /* \"Kagi Crypto.sol\":8053:8056  _to */\n      dup8\n        /* \"Kagi Crypto.sol\":8044:8057  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Kagi Crypto.sol\":8044:8061  balances[_to].add */\n      tag_124\n      swap1\n        /* \"Kagi Crypto.sol\":8044:8070  balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"Kagi Crypto.sol\":8028:8036  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":8028:8041  balances[_to] */\n      0x0\n        /* \"Kagi Crypto.sol\":8037:8040  _to */\n      dup7\n        /* \"Kagi Crypto.sol\":8028:8041  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":8028:8070  balances[_to] = balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":8107:8110  _to */\n      dup4\n        /* \"Kagi Crypto.sol\":8086:8120  Transfer(msg.sender, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":8095:8105  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":8086:8120  Transfer(msg.sender, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Kagi Crypto.sol\":8112:8119  _amount */\n      dup6\n        /* \"Kagi Crypto.sol\":8086:8120  Transfer(msg.sender, _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Kagi Crypto.sol\":8138:8142  true */\n      0x1\n        /* \"Kagi Crypto.sol\":8131:8142  return true */\n      swap2\n      pop\n        /* \"Kagi Crypto.sol\":7751:8150  function transfer(address _to, uint256 _amount) onlyPayloadSize(2 * 32) public returns (bool success) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Kagi Crypto.sol\":5737:5777  bool public distributionFinished = false */\n    tag_74:\n      0x9\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Kagi Crypto.sol\":9162:9373  function getTokenBalance(address tokenAddress, address who) constant public returns (uint){\r... */\n    tag_77:\n        /* \"Kagi Crypto.sol\":9247:9251  uint */\n      0x0\n        /* \"Kagi Crypto.sol\":9263:9277  ForeignToken t */\n      dup1\n        /* \"Kagi Crypto.sol\":9317:9325  uint bal */\n      0x0\n        /* \"Kagi Crypto.sol\":9293:9305  tokenAddress */\n      dup5\n        /* \"Kagi Crypto.sol\":9263:9306  ForeignToken t = ForeignToken(tokenAddress) */\n      swap2\n      pop\n        /* \"Kagi Crypto.sol\":9328:9329  t */\n      dup2\n        /* \"Kagi Crypto.sol\":9328:9339  t.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Kagi Crypto.sol\":9340:9343  who */\n      dup6\n        /* \"Kagi Crypto.sol\":9328:9344  t.balanceOf(who) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_150\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_150:\n        /* \"Kagi Crypto.sol\":9328:9344  t.balanceOf(who) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_151\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_151:\n        /* \"Kagi Crypto.sol\":9328:9344  t.balanceOf(who) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_152\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_152:\n        /* \"Kagi Crypto.sol\":9328:9344  t.balanceOf(who) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Kagi Crypto.sol\":9317:9344  uint bal = t.balanceOf(who) */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":9362:9365  bal */\n      dup1\n        /* \"Kagi Crypto.sol\":9355:9365  return bal */\n      swap3\n      pop\n        /* \"Kagi Crypto.sol\":9162:9373  function getTokenBalance(address tokenAddress, address who) constant public returns (uint){\r... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Kagi Crypto.sol\":6075:6189  function KGC() onlyOwner public {\r... */\n    tag_80:\n        /* \"Kagi Crypto.sol\":5935:5940  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":5921:5940  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":5921:5931  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":5921:5940  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Kagi Crypto.sol\":5913:5941  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_154\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_154:\n        /* \"Kagi Crypto.sol\":6126:6136  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":6118:6123  owner */\n      0x1\n      0x0\n        /* \"Kagi Crypto.sol\":6118:6136  owner = msg.sender */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":6165:6181  totalDistributed */\n      sload(0x6)\n        /* \"Kagi Crypto.sol\":6147:6155  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":6147:6162  balances[owner] */\n      0x0\n        /* \"Kagi Crypto.sol\":6156:6161  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":6147:6162  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":6147:6181  balances[owner] = totalDistributed */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":6075:6189  function KGC() onlyOwner public {\r... */\n      jump\t// out\n        /* \"Kagi Crypto.sol\":5301:5366  uint256 public totalRemaining = totalSupply.sub(totalDistributed) */\n    tag_83:\n      sload(0x7)\n      dup2\n      jump\t// out\n        /* \"Kagi Crypto.sol\":9013:9151  function allowance(address _owner, address _spender) constant public returns (uint256) {\r... */\n    tag_86:\n        /* \"Kagi Crypto.sol\":9091:9098  uint256 */\n      0x0\n        /* \"Kagi Crypto.sol\":9118:9125  allowed */\n      0x3\n        /* \"Kagi Crypto.sol\":9118:9133  allowed[_owner] */\n      0x0\n        /* \"Kagi Crypto.sol\":9126:9132  _owner */\n      dup5\n        /* \"Kagi Crypto.sol\":9118:9133  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":9118:9143  allowed[_owner][_spender] */\n      0x0\n        /* \"Kagi Crypto.sol\":9134:9142  _spender */\n      dup4\n        /* \"Kagi Crypto.sol\":9118:9143  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Kagi Crypto.sol\":9111:9143  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":9013:9151  function allowance(address _owner, address _spender) constant public returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Kagi Crypto.sol\":9888:10148  function withdrawForeignTokens(address _tokenContract) onlyOwner public returns (bool) {\r... */\n    tag_89:\n        /* \"Kagi Crypto.sol\":9969:9973  bool */\n      0x0\n        /* \"Kagi Crypto.sol\":9986:10004  ForeignToken token */\n      dup1\n        /* \"Kagi Crypto.sol\":10046:10060  uint256 amount */\n      0x0\n        /* \"Kagi Crypto.sol\":5935:5940  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":5921:5940  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":5921:5931  msg.sender */\n      caller\n        /* \"Kagi Crypto.sol\":5921:5940  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Kagi Crypto.sol\":5913:5941  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_158\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_158:\n        /* \"Kagi Crypto.sol\":10020:10034  _tokenContract */\n      dup4\n        /* \"Kagi Crypto.sol\":9986:10035  ForeignToken token = ForeignToken(_tokenContract) */\n      swap2\n      pop\n        /* \"Kagi Crypto.sol\":10063:10068  token */\n      dup2\n        /* \"Kagi Crypto.sol\":10063:10078  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Kagi Crypto.sol\":10087:10091  this */\n      address\n        /* \"Kagi Crypto.sol\":10063:10093  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_160\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_160:\n        /* \"Kagi Crypto.sol\":10063:10093  token.balanceOf(address(this)) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_161\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_161:\n        /* \"Kagi Crypto.sol\":10063:10093  token.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_162\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_162:\n        /* \"Kagi Crypto.sol\":10063:10093  token.balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Kagi Crypto.sol\":10046:10093  uint256 amount = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":10111:10116  token */\n      dup2\n        /* \"Kagi Crypto.sol\":10111:10125  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Kagi Crypto.sol\":10126:10131  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":10133:10139  amount */\n      dup4\n        /* \"Kagi Crypto.sol\":10111:10140  token.transfer(owner, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_163\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_163:\n        /* \"Kagi Crypto.sol\":10111:10140  token.transfer(owner, amount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_164\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_164:\n        /* \"Kagi Crypto.sol\":10111:10140  token.transfer(owner, amount) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_165\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_165:\n        /* \"Kagi Crypto.sol\":10111:10140  token.transfer(owner, amount) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Kagi Crypto.sol\":10104:10140  return token.transfer(owner, amount) */\n      swap3\n      pop\n        /* \"Kagi Crypto.sol\":9888:10148  function withdrawForeignTokens(address _tokenContract) onlyOwner public returns (bool) {\r... */\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Kagi Crypto.sol\":5245:5293  uint256 public totalDistributed = 30000000000e18 */\n    tag_92:\n      sload(0x6)\n      dup2\n      jump\t// out\n        /* \"Kagi Crypto.sol\":5006:5048  mapping (address => bool) public blacklist */\n    tag_95:\n      mstore(0x20, 0x4)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Kagi Crypto.sol\":6381:6850  function distr(address _to, uint256 _amount) canDistr private returns (bool) {\r... */\n    tag_104:\n        /* \"Kagi Crypto.sol\":6452:6456  bool */\n      0x0\n        /* \"Kagi Crypto.sol\":5829:5849  distributionFinished */\n      0x9\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Kagi Crypto.sol\":5828:5849  !distributionFinished */\n      iszero\n        /* \"Kagi Crypto.sol\":5820:5850  require(!distributionFinished) */\n      iszero\n      iszero\n      tag_167\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_167:\n        /* \"Kagi Crypto.sol\":6488:6517  totalDistributed.add(_amount) */\n      tag_169\n        /* \"Kagi Crypto.sol\":6509:6516  _amount */\n      dup3\n        /* \"Kagi Crypto.sol\":6488:6504  totalDistributed */\n      sload(0x6)\n        /* \"Kagi Crypto.sol\":6488:6508  totalDistributed.add */\n      tag_124\n      swap1\n        /* \"Kagi Crypto.sol\":6488:6517  totalDistributed.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"Kagi Crypto.sol\":6469:6485  totalDistributed */\n      0x6\n        /* \"Kagi Crypto.sol\":6469:6517  totalDistributed = totalDistributed.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":6545:6572  totalRemaining.sub(_amount) */\n      tag_170\n        /* \"Kagi Crypto.sol\":6564:6571  _amount */\n      dup3\n        /* \"Kagi Crypto.sol\":6545:6559  totalRemaining */\n      sload(0x7)\n        /* \"Kagi Crypto.sol\":6545:6563  totalRemaining.sub */\n      tag_121\n      swap1\n        /* \"Kagi Crypto.sol\":6545:6572  totalRemaining.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"Kagi Crypto.sol\":6528:6542  totalRemaining */\n      0x7\n        /* \"Kagi Crypto.sol\":6528:6572  totalRemaining = totalRemaining.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":6599:6625  balances[_to].add(_amount) */\n      tag_171\n        /* \"Kagi Crypto.sol\":6617:6624  _amount */\n      dup3\n        /* \"Kagi Crypto.sol\":6599:6607  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":6599:6612  balances[_to] */\n      0x0\n        /* \"Kagi Crypto.sol\":6608:6611  _to */\n      dup7\n        /* \"Kagi Crypto.sol\":6599:6612  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Kagi Crypto.sol\":6599:6616  balances[_to].add */\n      tag_124\n      swap1\n        /* \"Kagi Crypto.sol\":6599:6625  balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"Kagi Crypto.sol\":6583:6591  balances */\n      0x2\n        /* \"Kagi Crypto.sol\":6583:6596  balances[_to] */\n      0x0\n        /* \"Kagi Crypto.sol\":6592:6595  _to */\n      dup6\n        /* \"Kagi Crypto.sol\":6583:6596  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Kagi Crypto.sol\":6583:6625  balances[_to] = balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Kagi Crypto.sol\":6647:6650  _to */\n      dup3\n        /* \"Kagi Crypto.sol\":6641:6660  Distr(_to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a77\n        /* \"Kagi Crypto.sol\":6652:6659  _amount */\n      dup4\n        /* \"Kagi Crypto.sol\":6641:6660  Distr(_to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Kagi Crypto.sol\":6697:6700  _to */\n      dup3\n        /* \"Kagi Crypto.sol\":6676:6710  Transfer(address(0), _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Kagi Crypto.sol\":6693:6694  0 */\n      0x0\n        /* \"Kagi Crypto.sol\":6676:6710  Transfer(address(0), _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Kagi Crypto.sol\":6702:6709  _amount */\n      dup5\n        /* \"Kagi Crypto.sol\":6676:6710  Transfer(address(0), _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Kagi Crypto.sol\":6728:6732  true */\n      0x1\n        /* \"Kagi Crypto.sol\":6721:6732  return true */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":6381:6850  function distr(address _to, uint256 _amount) canDistr private returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Kagi Crypto.sol\":3223:3335  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_109:\n        /* \"Kagi Crypto.sol\":3281:3288  uint256 */\n      0x0\n        /* \"Kagi Crypto.sol\":3297:3306  uint256 c */\n      dup1\n        /* \"Kagi Crypto.sol\":3313:3314  b */\n      dup3\n        /* \"Kagi Crypto.sol\":3309:3310  a */\n      dup5\n        /* \"Kagi Crypto.sol\":3309:3314  a / b */\n      dup2\n      iszero\n      iszero\n      tag_174\n      jumpi\n      invalid\n    tag_174:\n      div\n        /* \"Kagi Crypto.sol\":3297:3314  uint256 c = a / b */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":3328:3329  c */\n      dup1\n        /* \"Kagi Crypto.sol\":3321:3329  return c */\n      swap2\n      pop\n        /* \"Kagi Crypto.sol\":3223:3335  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Kagi Crypto.sol\":3070:3217  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_110:\n        /* \"Kagi Crypto.sol\":3128:3135  uint256 */\n      0x0\n        /* \"Kagi Crypto.sol\":3144:3153  uint256 c */\n      dup1\n        /* \"Kagi Crypto.sol\":3160:3161  b */\n      dup3\n        /* \"Kagi Crypto.sol\":3156:3157  a */\n      dup5\n        /* \"Kagi Crypto.sol\":3156:3161  a * b */\n      mul\n        /* \"Kagi Crypto.sol\":3144:3161  uint256 c = a * b */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":3180:3181  0 */\n      0x0\n        /* \"Kagi Crypto.sol\":3175:3176  a */\n      dup5\n        /* \"Kagi Crypto.sol\":3175:3181  a == 0 */\n      eq\n        /* \"Kagi Crypto.sol\":3175:3195  a == 0 || c / a == b */\n      dup1\n      tag_176\n      jumpi\n      pop\n        /* \"Kagi Crypto.sol\":3194:3195  b */\n      dup3\n        /* \"Kagi Crypto.sol\":3189:3190  a */\n      dup5\n        /* \"Kagi Crypto.sol\":3185:3186  c */\n      dup3\n        /* \"Kagi Crypto.sol\":3185:3190  c / a */\n      dup2\n      iszero\n      iszero\n      tag_177\n      jumpi\n      invalid\n    tag_177:\n      div\n        /* \"Kagi Crypto.sol\":3185:3195  c / a == b */\n      eq\n        /* \"Kagi Crypto.sol\":3175:3195  a == 0 || c / a == b */\n    tag_176:\n        /* \"Kagi Crypto.sol\":3168:3196  assert(a == 0 || c / a == b) */\n      iszero\n      iszero\n      tag_178\n      jumpi\n      invalid\n    tag_178:\n        /* \"Kagi Crypto.sol\":3210:3211  c */\n      dup1\n        /* \"Kagi Crypto.sol\":3203:3211  return c */\n      swap2\n      pop\n        /* \"Kagi Crypto.sol\":3070:3217  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Kagi Crypto.sol\":3341:3454  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_121:\n        /* \"Kagi Crypto.sol\":3399:3406  uint256 */\n      0x0\n        /* \"Kagi Crypto.sol\":3427:3428  a */\n      dup3\n        /* \"Kagi Crypto.sol\":3422:3423  b */\n      dup3\n        /* \"Kagi Crypto.sol\":3422:3428  b <= a */\n      gt\n      iszero\n        /* \"Kagi Crypto.sol\":3415:3429  assert(b <= a) */\n      iszero\n      iszero\n      tag_180\n      jumpi\n      invalid\n    tag_180:\n        /* \"Kagi Crypto.sol\":3447:3448  b */\n      dup2\n        /* \"Kagi Crypto.sol\":3443:3444  a */\n      dup4\n        /* \"Kagi Crypto.sol\":3443:3448  a - b */\n      sub\n        /* \"Kagi Crypto.sol\":3436:3448  return a - b */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":3341:3454  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Kagi Crypto.sol\":3460:3593  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_124:\n        /* \"Kagi Crypto.sol\":3518:3525  uint256 */\n      0x0\n        /* \"Kagi Crypto.sol\":3534:3543  uint256 c */\n      dup1\n        /* \"Kagi Crypto.sol\":3550:3551  b */\n      dup3\n        /* \"Kagi Crypto.sol\":3546:3547  a */\n      dup5\n        /* \"Kagi Crypto.sol\":3546:3551  a + b */\n      add\n        /* \"Kagi Crypto.sol\":3534:3551  uint256 c = a + b */\n      swap1\n      pop\n        /* \"Kagi Crypto.sol\":3570:3571  a */\n      dup4\n        /* \"Kagi Crypto.sol\":3565:3566  c */\n      dup2\n        /* \"Kagi Crypto.sol\":3565:3571  c >= a */\n      lt\n      iszero\n        /* \"Kagi Crypto.sol\":3558:3572  assert(c >= a) */\n      iszero\n      iszero\n      tag_182\n      jumpi\n      invalid\n    tag_182:\n        /* \"Kagi Crypto.sol\":3586:3587  c */\n      dup1\n        /* \"Kagi Crypto.sol\":3579:3587  return c */\n      swap2\n      pop\n        /* \"Kagi Crypto.sol\":3460:3593  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820eac5e272da459875b76bdf98458ca0ac256f17e09f0e8ff96d6359f4d05af10f0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506c01431e0fae6d7217caa00000006005556b60ef6b1aba6f07233000000060065561008a6006546005546100c864010000000002611b7c179091906401000000009004565b6007556969e10de76676d08000006008556000600960006101000a81548160ff0219169083151502179055503480156100c257600080fd5b506100e1565b60008282111515156100d657fe5b818303905092915050565b611bdf806100f06000396000f30060806040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610127578063095ea7b3146101b757806318160ddd1461021c57806323b872dd14610247578063313ce567146102cc5780633ccfd60b146102f75780633fa4f2451461030e57806342966c681461033957806370a082311461036657806395d89b41146103bd5780639b1cbccc1461044d578063a9059cbb1461047c578063aa6ca808146104e1578063c108d542146104eb578063c489744b1461051a578063c63e617114610591578063d8a54360146105a8578063dd62ed3e146105d3578063e58fc54c1461064a578063efca2eed146106a5578063f9f92be4146106d0575b61012561072b565b005b34801561013357600080fd5b5061013c6108a7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017c578082015181840152602081019050610161565b50505050905090810190601f1680156101a95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101c357600080fd5b50610202600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108e0565b604051808215151515815260200191505060405180910390f35b34801561022857600080fd5b50610231610a6e565b6040518082815260200191505060405180910390f35b34801561025357600080fd5b506102b2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a74565b604051808215151515815260200191505060405180910390f35b3480156102d857600080fd5b506102e1610e4a565b6040518082815260200191505060405180910390f35b34801561030357600080fd5b5061030c610e4f565b005b34801561031a57600080fd5b50610323610f33565b6040518082815260200191505060405180910390f35b34801561034557600080fd5b5061036460048036038101908080359060200190929190505050610f39565b005b34801561037257600080fd5b506103a7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611105565b6040518082815260200191505060405180910390f35b3480156103c957600080fd5b506103d261114e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104125780820151818401526020810190506103f7565b50505050905090810190601f16801561043f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045957600080fd5b50610462611187565b604051808215151515815260200191505060405180910390f35b34801561048857600080fd5b506104c7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061124f565b604051808215151515815260200191505060405180910390f35b6104e961072b565b005b3480156104f757600080fd5b5061050061148a565b604051808215151515815260200191505060405180910390f35b34801561052657600080fd5b5061057b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061149d565b6040518082815260200191505060405180910390f35b34801561059d57600080fd5b506105a6611588565b005b3480156105b457600080fd5b506105bd61168f565b6040518082815260200191505060405180910390f35b3480156105df57600080fd5b50610634600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611695565b6040518082815260200191505060405180910390f35b34801561065657600080fd5b5061068b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061171c565b604051808215151515815260200191505060405180910390f35b3480156106b157600080fd5b506106ba611961565b6040518082815260200191505060405180910390f35b3480156106dc57600080fd5b50610711600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611967565b604051808215151515815260200191505060405180910390f35b600080600960009054906101000a900460ff1615151561074a57600080fd5b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156107a957600080fd5b60075460085411156107bf576007546008819055505b600754600854111515156107d257600080fd5b33915060085490506107e48282611987565b506000811115610847576001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600554600654101515610870576001600960006101000a81548160ff0219169083151502179055505b61089d6207a11f61088f6207a120600854611b2e90919063ffffffff16565b611b4990919063ffffffff16565b6008819055505050565b6040805190810160405280600b81526020017f4b6167692043727970746f00000000000000000000000000000000000000000081525081565b600080821415801561096f57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1561097d5760009050610a68565b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3600190505b92915050565b60055481565b6000606060048101600036905010151515610a8b57fe5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610ac757600080fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548311151515610b1557600080fd5b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548311151515610ba057600080fd5b610bf283600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b7c90919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610cc483600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b7c90919063ffffffff16565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d9683600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9590919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b601281565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ead57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16319050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610f2f573d6000803e3d6000fd5b5050565b60085481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f9757600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610fe557600080fd5b33905061103a82600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b7c90919063ffffffff16565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061109282600554611b7c90919063ffffffff16565b6005819055506110ad82600654611b7c90919063ffffffff16565b6006819055508073ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040518082815260200191505060405180910390a25050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040805190810160405280600381526020017f4b4743000000000000000000000000000000000000000000000000000000000081525081565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111e557600080fd5b600960009054906101000a900460ff1615151561120157600080fd5b6001600960006101000a81548160ff0219169083151502179055507f7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc60405160405180910390a16001905090565b600060406004810160003690501015151561126657fe5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515156112a257600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483111515156112f057600080fd5b61134283600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b7c90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113d783600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9590919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b600960009054906101000a900460ff1681565b60008060008491508173ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561154057600080fd5b505af1158015611554573d6000803e3d6000fd5b505050506040513d602081101561156a57600080fd5b81019080805190602001909291905050509050809250505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115e457600080fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060065460026000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60075481565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561177d57600080fd5b8391508173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561181b57600080fd5b505af115801561182f573d6000803e3d6000fd5b505050506040513d602081101561184557600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561191d57600080fd5b505af1158015611931573d6000803e3d6000fd5b505050506040513d602081101561194757600080fd5b810190808051906020019092919050505092505050919050565b60065481565b60046020528060005260406000206000915054906101000a900460ff1681565b6000600960009054906101000a900460ff161515156119a557600080fd5b6119ba82600654611b9590919063ffffffff16565b6006819055506119d582600754611b7c90919063ffffffff16565b600781905550611a2d82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9590919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a77836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000808284811515611b3c57fe5b0490508091505092915050565b60008082840290506000841480611b6a5750828482811515611b6757fe5b04145b1515611b7257fe5b8091505092915050565b6000828211151515611b8a57fe5b818303905092915050565b6000808284019050838110151515611ba957fe5b80915050929150505600a165627a7a72305820eac5e272da459875b76bdf98458ca0ac256f17e09f0e8ff96d6359f4d05af10f0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH1 0x5 SSTORE PUSH12 0x60EF6B1ABA6F072330000000 PUSH1 0x6 SSTORE PUSH2 0x8A PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xC8 PUSH5 0x100000000 MUL PUSH2 0x1B7C OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH10 0x69E10DE76676D0800000 PUSH1 0x8 SSTORE PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0xD6 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BDF DUP1 PUSH2 0xF0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x9B1CBCCC EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0xC108D542 EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0xC489744B EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xC63E6171 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xD8A54360 EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5D3 JUMPI DUP1 PUSH4 0xE58FC54C EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xEFCA2EED EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x6D0 JUMPI JUMPDEST PUSH2 0x125 PUSH2 0x72B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x161 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0xE4F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF39 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH2 0x114E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x412 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x43F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x462 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E9 PUSH2 0x72B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x500 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A6 PUSH2 0x1588 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BD PUSH2 0x168F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x634 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x171C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BA PUSH2 0x1961 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x711 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD GT ISZERO PUSH2 0x7BF JUMPI PUSH1 0x7 SLOAD PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD GT ISZERO ISZERO ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER SWAP2 POP PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0x7E4 DUP3 DUP3 PUSH2 0x1987 JUMP JUMPDEST POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x847 JUMPI PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD LT ISZERO ISZERO PUSH2 0x870 JUMPI PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x89D PUSH3 0x7A11F PUSH2 0x88F PUSH3 0x7A120 PUSH1 0x8 SLOAD PUSH2 0x1B2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B6167692043727970746F000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x97D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xA68 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0xA8B JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO ISZERO ISZERO PUSH2 0xB15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO ISZERO ISZERO PUSH2 0xBA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF2 DUP4 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCC4 DUP4 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD96 DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xEAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0xFE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER SWAP1 POP PUSH2 0x103A DUP3 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1092 DUP3 PUSH1 0x5 SLOAD PUSH2 0x1B7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x10AD DUP3 PUSH1 0x6 SLOAD PUSH2 0x1B7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B47430000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F95D919E78BDEBE8A285E6E33357C2FCB65CCF66E72D7573F9F8F6CAAD0C4CC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x1266 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x12A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO ISZERO ISZERO PUSH2 0x12F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1342 DUP4 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x13D7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1554 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x156A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x15E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x177D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x181B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x182F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x191D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1931 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19BA DUP3 PUSH1 0x6 SLOAD PUSH2 0x1B95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x19D5 DUP3 PUSH1 0x7 SLOAD PUSH2 0x1B7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x1A2D DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8940C4B8E215F8822C5C8F0056C12652C746CBC57EEDBD2A440B175971D47A77 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x1B3C JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 MUL SWAP1 POP PUSH1 0x0 DUP5 EQ DUP1 PUSH2 0x1B6A JUMPI POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x1B67 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x1B72 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x1B8A JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1BA9 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xea 0xc5 0xe2 PUSH19 0xDA459875B76BDF98458CA0AC256F17E09F0E8F 0xf9 PUSH14 0x6359F4D05AF10F00290000000000 ",
							"sourceMap": "4784:5367:0:-;;;4879:10;4863:26;;;;;;;;;;;;;;;;;;;;5222:15;5193:44;;5279:14;5245:48;;5333:33;5349:16;;5333:11;;:15;;;;;;:33;;;;;:::i;:::-;5301:65;;5397:9;5374:32;;5772:5;5737:40;;;;;;;;;;;;;;;;;;;;4784:5367;8:9:-1;5:2;;;30:1;27;20:12;5:2;4784:5367:0;;;3341:113;3399:7;3427:1;3422;:6;;3415:14;;;;;;3447:1;3443;:5;3436:12;;3341:113;;;;:::o;4784:5367::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610127578063095ea7b3146101b757806318160ddd1461021c57806323b872dd14610247578063313ce567146102cc5780633ccfd60b146102f75780633fa4f2451461030e57806342966c681461033957806370a082311461036657806395d89b41146103bd5780639b1cbccc1461044d578063a9059cbb1461047c578063aa6ca808146104e1578063c108d542146104eb578063c489744b1461051a578063c63e617114610591578063d8a54360146105a8578063dd62ed3e146105d3578063e58fc54c1461064a578063efca2eed146106a5578063f9f92be4146106d0575b61012561072b565b005b34801561013357600080fd5b5061013c6108a7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017c578082015181840152602081019050610161565b50505050905090810190601f1680156101a95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101c357600080fd5b50610202600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108e0565b604051808215151515815260200191505060405180910390f35b34801561022857600080fd5b50610231610a6e565b6040518082815260200191505060405180910390f35b34801561025357600080fd5b506102b2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a74565b604051808215151515815260200191505060405180910390f35b3480156102d857600080fd5b506102e1610e4a565b6040518082815260200191505060405180910390f35b34801561030357600080fd5b5061030c610e4f565b005b34801561031a57600080fd5b50610323610f33565b6040518082815260200191505060405180910390f35b34801561034557600080fd5b5061036460048036038101908080359060200190929190505050610f39565b005b34801561037257600080fd5b506103a7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611105565b6040518082815260200191505060405180910390f35b3480156103c957600080fd5b506103d261114e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104125780820151818401526020810190506103f7565b50505050905090810190601f16801561043f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045957600080fd5b50610462611187565b604051808215151515815260200191505060405180910390f35b34801561048857600080fd5b506104c7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061124f565b604051808215151515815260200191505060405180910390f35b6104e961072b565b005b3480156104f757600080fd5b5061050061148a565b604051808215151515815260200191505060405180910390f35b34801561052657600080fd5b5061057b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061149d565b6040518082815260200191505060405180910390f35b34801561059d57600080fd5b506105a6611588565b005b3480156105b457600080fd5b506105bd61168f565b6040518082815260200191505060405180910390f35b3480156105df57600080fd5b50610634600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611695565b6040518082815260200191505060405180910390f35b34801561065657600080fd5b5061068b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061171c565b604051808215151515815260200191505060405180910390f35b3480156106b157600080fd5b506106ba611961565b6040518082815260200191505060405180910390f35b3480156106dc57600080fd5b50610711600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611967565b604051808215151515815260200191505060405180910390f35b600080600960009054906101000a900460ff1615151561074a57600080fd5b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156107a957600080fd5b60075460085411156107bf576007546008819055505b600754600854111515156107d257600080fd5b33915060085490506107e48282611987565b506000811115610847576001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600554600654101515610870576001600960006101000a81548160ff0219169083151502179055505b61089d6207a11f61088f6207a120600854611b2e90919063ffffffff16565b611b4990919063ffffffff16565b6008819055505050565b6040805190810160405280600b81526020017f4b6167692043727970746f00000000000000000000000000000000000000000081525081565b600080821415801561096f57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1561097d5760009050610a68565b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3600190505b92915050565b60055481565b6000606060048101600036905010151515610a8b57fe5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610ac757600080fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548311151515610b1557600080fd5b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548311151515610ba057600080fd5b610bf283600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b7c90919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610cc483600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b7c90919063ffffffff16565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d9683600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9590919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b601281565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ead57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16319050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610f2f573d6000803e3d6000fd5b5050565b60085481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f9757600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610fe557600080fd5b33905061103a82600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b7c90919063ffffffff16565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061109282600554611b7c90919063ffffffff16565b6005819055506110ad82600654611b7c90919063ffffffff16565b6006819055508073ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040518082815260200191505060405180910390a25050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040805190810160405280600381526020017f4b4743000000000000000000000000000000000000000000000000000000000081525081565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111e557600080fd5b600960009054906101000a900460ff1615151561120157600080fd5b6001600960006101000a81548160ff0219169083151502179055507f7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc60405160405180910390a16001905090565b600060406004810160003690501015151561126657fe5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515156112a257600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483111515156112f057600080fd5b61134283600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b7c90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113d783600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9590919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b600960009054906101000a900460ff1681565b60008060008491508173ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561154057600080fd5b505af1158015611554573d6000803e3d6000fd5b505050506040513d602081101561156a57600080fd5b81019080805190602001909291905050509050809250505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115e457600080fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060065460026000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60075481565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561177d57600080fd5b8391508173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561181b57600080fd5b505af115801561182f573d6000803e3d6000fd5b505050506040513d602081101561184557600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561191d57600080fd5b505af1158015611931573d6000803e3d6000fd5b505050506040513d602081101561194757600080fd5b810190808051906020019092919050505092505050919050565b60065481565b60046020528060005260406000206000915054906101000a900460ff1681565b6000600960009054906101000a900460ff161515156119a557600080fd5b6119ba82600654611b9590919063ffffffff16565b6006819055506119d582600754611b7c90919063ffffffff16565b600781905550611a2d82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9590919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a77836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000808284811515611b3c57fe5b0490508091505092915050565b60008082840290506000841480611b6a5750828482811515611b6757fe5b04145b1515611b7257fe5b8091505092915050565b6000828211151515611b8a57fe5b818303905092915050565b6000808284019050838110151515611ba957fe5b80915050929150505600a165627a7a72305820eac5e272da459875b76bdf98458ca0ac256f17e09f0e8ff96d6359f4d05af10f0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x9B1CBCCC EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0xC108D542 EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0xC489744B EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xC63E6171 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xD8A54360 EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5D3 JUMPI DUP1 PUSH4 0xE58FC54C EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xEFCA2EED EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x6D0 JUMPI JUMPDEST PUSH2 0x125 PUSH2 0x72B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x161 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0xE4F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF39 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH2 0x114E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x412 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x43F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x462 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E9 PUSH2 0x72B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x500 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A6 PUSH2 0x1588 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BD PUSH2 0x168F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x634 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x171C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BA PUSH2 0x1961 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x711 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD GT ISZERO PUSH2 0x7BF JUMPI PUSH1 0x7 SLOAD PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD GT ISZERO ISZERO ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER SWAP2 POP PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0x7E4 DUP3 DUP3 PUSH2 0x1987 JUMP JUMPDEST POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x847 JUMPI PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD LT ISZERO ISZERO PUSH2 0x870 JUMPI PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x89D PUSH3 0x7A11F PUSH2 0x88F PUSH3 0x7A120 PUSH1 0x8 SLOAD PUSH2 0x1B2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B6167692043727970746F000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x97D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xA68 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0xA8B JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO ISZERO ISZERO PUSH2 0xB15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO ISZERO ISZERO PUSH2 0xBA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF2 DUP4 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCC4 DUP4 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD96 DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xEAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0xFE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER SWAP1 POP PUSH2 0x103A DUP3 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1092 DUP3 PUSH1 0x5 SLOAD PUSH2 0x1B7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x10AD DUP3 PUSH1 0x6 SLOAD PUSH2 0x1B7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B47430000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F95D919E78BDEBE8A285E6E33357C2FCB65CCF66E72D7573F9F8F6CAAD0C4CC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x1266 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x12A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO ISZERO ISZERO PUSH2 0x12F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1342 DUP4 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x13D7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1554 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x156A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x15E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x177D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x181B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x182F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x191D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1931 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19BA DUP3 PUSH1 0x6 SLOAD PUSH2 0x1B95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x19D5 DUP3 PUSH1 0x7 SLOAD PUSH2 0x1B7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x1A2D DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8940C4B8E215F8822C5C8F0056C12652C746CBC57EEDBD2A440B175971D47A77 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x1B3C JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 MUL SWAP1 POP PUSH1 0x0 DUP5 EQ DUP1 PUSH2 0x1B6A JUMPI POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x1B67 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x1B72 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x1B8A JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1BA9 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xea 0xc5 0xe2 PUSH19 0xDA459875B76BDF98458CA0AC256F17E09F0E8F 0xf9 PUSH14 0x6359F4D05AF10F00290000000000 ",
							"sourceMap": "4784:5367:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6901:11;:9;:11::i;:::-;4784:5367;5057:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5057:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5057:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8706:296;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8706:296:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5193:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5193:44:0;;;;;;;;;;;;;;;;;;;;;;;8161:534;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8161:534:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5151:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5151:34:0;;;;;;;;;;;;;;;;;;;;;;;9384:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9384:137:0;;;;;;5374:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5374:32:0;;;;;;;;;;;;;;;;;;;;;;;9532:345;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9532:345:0;;;;;;;;;;;;;;;;;;;;;;;;;;7519:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7519:111:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5107:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5107:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5107:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6200:170;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6200:170:0;;;;;;;;;;;;;;;;;;;;;;;;;;;7751:399;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7751:399:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6932:579;;;;;;5737:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5737:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;9162:211;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9162:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6075:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6075:114:0;;;;;;5301:65;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5301:65:0;;;;;;;;;;;;;;;;;;;;;;;9013:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9013:138:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9888:260;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9888:260:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5245:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5245:48:0;;;;;;;;;;;;;;;;;;;;;;;5006:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5006:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6932:579;7150:16;7190:14;5829:20;;;;;;;;;;;5828:21;5820:30;;;;;;;;6041:5;6016:30;;:9;:21;6026:10;6016:21;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;6008:39;;;;;;;;7014:14;;7006:5;;:22;7002:77;;;7053:14;;7045:5;:22;;;;7002:77;7115:14;;7106:5;;:23;;7098:32;;;;;;;;7169:10;7150:29;;7207:5;;7190:22;;7232:23;7238:8;7248:6;7232:5;:23::i;:::-;;7288:1;7279:6;:10;7275:69;;;7328:4;7306:9;:19;7316:8;7306:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;7275:69;7380:11;;7360:16;;:31;;7356:91;;;7431:4;7408:20;;:27;;;;;;;;;;;;;;;;;;7356:91;7474:29;7496:6;7474:17;7484:6;7474:5;;:9;;:17;;;;:::i;:::-;:21;;:29;;;;:::i;:::-;7466:5;:37;;;;6932:579;;:::o;5057:43::-;;;;;;;;;;;;;;;;;;;;:::o;8706:296::-;8773:12;8812:1;8802:6;:11;;:49;;;;;8850:1;8817:7;:19;8825:10;8817:19;;;;;;;;;;;;;;;:29;8837:8;8817:29;;;;;;;;;;;;;;;;:34;;8802:49;8798:72;;;8862:5;8855:12;;;;8798:72;8912:6;8880:7;:19;8888:10;8880:19;;;;;;;;;;;;;;;:29;8900:8;8880:29;;;;;;;;;;;;;;;:38;;;;8955:8;8934:38;;8943:10;8934:38;;;8965:6;8934:38;;;;;;;;;;;;;;;;;;8990:4;8983:11;;8706:296;;;;;:::o;5193:44::-;;;;:::o;8161:534::-;8268:12;8244:6;7718:1;7711:4;:8;7692;;:15;;:27;;7685:35;;;;;;8316:1;8301:17;;:3;:17;;;;8293:26;;;;;;;;8349:8;:15;8358:5;8349:15;;;;;;;;;;;;;;;;8338:7;:26;;8330:35;;;;;;;;8395:7;:14;8403:5;8395:14;;;;;;;;;;;;;;;:26;8410:10;8395:26;;;;;;;;;;;;;;;;8384:7;:37;;8376:46;;;;;;;;8460:28;8480:7;8460:8;:15;8469:5;8460:15;;;;;;;;;;;;;;;;:19;;:28;;;;:::i;:::-;8442:8;:15;8451:5;8442:15;;;;;;;;;;;;;;;:46;;;;8528:39;8559:7;8528;:14;8536:5;8528:14;;;;;;;;;;;;;;;:26;8543:10;8528:26;;;;;;;;;;;;;;;;:30;;:39;;;;:::i;:::-;8499:7;:14;8507:5;8499:14;;;;;;;;;;;;;;;:26;8514:10;8499:26;;;;;;;;;;;;;;;:68;;;;8594:26;8612:7;8594:8;:13;8603:3;8594:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;8578:8;:13;8587:3;8578:13;;;;;;;;;;;;;;;:42;;;;8652:3;8636:29;;8645:5;8636:29;;;8657:7;8636:29;;;;;;;;;;;;;;;;;;8683:4;8676:11;;8161:534;;;;;;:::o;5151:34::-;5183:2;5151:34;:::o;9384:137::-;9432:19;5935:5;;;;;;;;;;;5921:19;;:10;:19;;;5913:28;;;;;;;;9462:4;9454:21;;;9432:43;;9486:5;;;;;;;;;;;:14;;:27;9501:11;9486:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9486:27:0;9384:137;:::o;5374:32::-;;;;:::o;9532:345::-;9642:14;5935:5;;;;;;;;;;;5921:19;;:10;:19;;;5913:28;;;;;;;;9608:8;:20;9617:10;9608:20;;;;;;;;;;;;;;;;9598:6;:30;;9590:39;;;;;;;;9659:10;9642:27;;9699:28;9720:6;9699:8;:16;9708:6;9699:16;;;;;;;;;;;;;;;;:20;;:28;;;;:::i;:::-;9680:8;:16;9689:6;9680:16;;;;;;;;;;;;;;;:47;;;;9752:23;9768:6;9752:11;;:15;;:23;;;;:::i;:::-;9738:11;:37;;;;9805:28;9826:6;9805:16;;:20;;:28;;;;:::i;:::-;9786:16;:47;;;;9854:6;9849:20;;;9862:6;9849:20;;;;;;;;;;;;;;;;;;9532:345;;:::o;7519:111::-;7579:7;7606:8;:16;7615:6;7606:16;;;;;;;;;;;;;;;;7599:23;;7519:111;;;:::o;5107:37::-;;;;;;;;;;;;;;;;;;;;:::o;6200:170::-;6265:4;5935:5;;;;;;;;;;;5921:19;;:10;:19;;;5913:28;;;;;;;;5829:20;;;;;;;;;;;5828:21;5820:30;;;;;;;;6305:4;6282:20;;:27;;;;;;;;;;;;;;;;;;6325:15;;;;;;;;;;6358:4;6351:11;;6200:170;:::o;7751:399::-;7839:12;7815:6;7718:1;7711:4;:8;7692;;:15;;:27;;7685:35;;;;;;7887:1;7872:17;;:3;:17;;;;7864:26;;;;;;;;7920:8;:20;7929:10;7920:20;;;;;;;;;;;;;;;;7909:7;:31;;7901:40;;;;;;;;7984:33;8009:7;7984:8;:20;7993:10;7984:20;;;;;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;7961:8;:20;7970:10;7961:20;;;;;;;;;;;;;;;:56;;;;8044:26;8062:7;8044:8;:13;8053:3;8044:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;8028:8;:13;8037:3;8028:13;;;;;;;;;;;;;;;:42;;;;8107:3;8086:34;;8095:10;8086:34;;;8112:7;8086:34;;;;;;;;;;;;;;;;;;8138:4;8131:11;;7751:399;;;;;:::o;5737:40::-;;;;;;;;;;;;;:::o;9162:211::-;9247:4;9263:14;9317:8;9293:12;9263:43;;9328:1;:11;;;9340:3;9328:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9328:16:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9328:16:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9328:16:0;;;;;;;;;;;;;;;;9317:27;;9362:3;9355:10;;9162:211;;;;;;:::o;6075:114::-;5935:5;;;;;;;;;;;5921:19;;:10;:19;;;5913:28;;;;;;;;6126:10;6118:5;;:18;;;;;;;;;;;;;;;;;;6165:16;;6147:8;:15;6156:5;;;;;;;;;;;6147:15;;;;;;;;;;;;;;;:34;;;;6075:114::o;5301:65::-;;;;:::o;9013:138::-;9091:7;9118;:15;9126:6;9118:15;;;;;;;;;;;;;;;:25;9134:8;9118:25;;;;;;;;;;;;;;;;9111:32;;9013:138;;;;:::o;9888:260::-;9969:4;9986:18;10046:14;5935:5;;;;;;;;;;;5921:19;;:10;:19;;;5913:28;;;;;;;;10020:14;9986:49;;10063:5;:15;;;10087:4;10063:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10063:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10063:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10063:30:0;;;;;;;;;;;;;;;;10046:47;;10111:5;:14;;;10126:5;;;;;;;;;;;10133:6;10111:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10111:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10111:29:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10111:29:0;;;;;;;;;;;;;;;;10104:36;;9888:260;;;;;:::o;5245:48::-;;;;:::o;5006:42::-;;;;;;;;;;;;;;;;;;;;;;:::o;6381:469::-;6452:4;5829:20;;;;;;;;;;;5828:21;5820:30;;;;;;;;6488:29;6509:7;6488:16;;:20;;:29;;;;:::i;:::-;6469:16;:48;;;;6545:27;6564:7;6545:14;;:18;;:27;;;;:::i;:::-;6528:14;:44;;;;6599:26;6617:7;6599:8;:13;6608:3;6599:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;6583:8;:13;6592:3;6583:13;;;;;;;;;;;;;;;:42;;;;6647:3;6641:19;;;6652:7;6641:19;;;;;;;;;;;;;;;;;;6697:3;6676:34;;6693:1;6676:34;;;6702:7;6676:34;;;;;;;;;;;;;;;;;;6728:4;6721:11;;6381:469;;;;:::o;3223:112::-;3281:7;3297:9;3313:1;3309;:5;;;;;;;;3297:17;;3328:1;3321:8;;3223:112;;;;;:::o;3070:147::-;3128:7;3144:9;3160:1;3156;:5;3144:17;;3180:1;3175;:6;:20;;;;3194:1;3189;3185;:5;;;;;;;;:10;3175:20;3168:28;;;;;;3210:1;3203:8;;3070:147;;;;;:::o;3341:113::-;3399:7;3427:1;3422;:6;;3415:14;;;;;;3447:1;3443;:5;3436:12;;3341:113;;;;:::o;3460:133::-;3518:7;3534:9;3550:1;3546;:5;3534:17;;3570:1;3565;:6;;3558:14;;;;;;3586:1;3579:8;;3460:133;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1427000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"KGC()": "41545",
								"allowance(address,address)": "1058",
								"approve(address,uint256)": "22796",
								"balanceOf(address)": "735",
								"blacklist(address)": "1009",
								"burn(uint256)": "infinite",
								"decimals()": "282",
								"distributionFinished()": "728",
								"finishDistribution()": "22016",
								"getTokenBalance(address,address)": "infinite",
								"getTokens()": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalDistributed()": "812",
								"totalRemaining()": "746",
								"totalSupply()": "438",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"value()": "526",
								"withdraw()": "infinite",
								"withdrawForeignTokens(address)": "infinite"
							},
							"internal": {
								"distr(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4784,
									"end": 10151,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "MSTORE"
								},
								{
									"begin": 4879,
									"end": 4889,
									"name": "CALLER"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "EXP"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "DUP2"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "SLOAD"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "DUP2"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "MUL"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "NOT"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "AND"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "SWAP1"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "DUP4"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "AND"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "MUL"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "OR"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "SWAP1"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "SSTORE"
								},
								{
									"begin": 4863,
									"end": 4889,
									"name": "POP"
								},
								{
									"begin": 5222,
									"end": 5237,
									"name": "PUSH",
									"value": "1431E0FAE6D7217CAA0000000"
								},
								{
									"begin": 5193,
									"end": 5237,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 5193,
									"end": 5237,
									"name": "SSTORE"
								},
								{
									"begin": 5279,
									"end": 5293,
									"name": "PUSH",
									"value": "60EF6B1ABA6F072330000000"
								},
								{
									"begin": 5245,
									"end": 5293,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 5245,
									"end": 5293,
									"name": "SSTORE"
								},
								{
									"begin": 5333,
									"end": 5366,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5349,
									"end": 5365,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 5349,
									"end": 5365,
									"name": "SLOAD"
								},
								{
									"begin": 5333,
									"end": 5344,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 5333,
									"end": 5344,
									"name": "SLOAD"
								},
								{
									"begin": 5333,
									"end": 5348,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5333,
									"end": 5348,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 5333,
									"end": 5348,
									"name": "MUL"
								},
								{
									"begin": 5333,
									"end": 5348,
									"name": "PUSH [tag]",
									"value": "18446744073709551737"
								},
								{
									"begin": 5333,
									"end": 5348,
									"name": "OR"
								},
								{
									"begin": 5333,
									"end": 5348,
									"name": "SWAP1"
								},
								{
									"begin": 5333,
									"end": 5366,
									"name": "SWAP2"
								},
								{
									"begin": 5333,
									"end": 5366,
									"name": "SWAP1"
								},
								{
									"begin": 5333,
									"end": 5366,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 5333,
									"end": 5366,
									"name": "SWAP1"
								},
								{
									"begin": 5333,
									"end": 5366,
									"name": "DIV"
								},
								{
									"begin": 5333,
									"end": 5366,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 5333,
									"end": 5366,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5333,
									"end": 5366,
									"name": "JUMPDEST"
								},
								{
									"begin": 5301,
									"end": 5366,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 5301,
									"end": 5366,
									"name": "SSTORE"
								},
								{
									"begin": 5397,
									"end": 5406,
									"name": "PUSH",
									"value": "69E10DE76676D0800000"
								},
								{
									"begin": 5374,
									"end": 5406,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 5374,
									"end": 5406,
									"name": "SSTORE"
								},
								{
									"begin": 5772,
									"end": 5777,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "EXP"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "DUP2"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "SLOAD"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "DUP2"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "MUL"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "NOT"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "AND"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "SWAP1"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "DUP4"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "ISZERO"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "ISZERO"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "MUL"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "OR"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "SWAP1"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "SSTORE"
								},
								{
									"begin": 5737,
									"end": 5777,
									"name": "POP"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "POP"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "JUMP"
								},
								{
									"begin": 3341,
									"end": 3454,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 3341,
									"end": 3454,
									"name": "JUMPDEST"
								},
								{
									"begin": 3399,
									"end": 3406,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3427,
									"end": 3428,
									"name": "DUP3"
								},
								{
									"begin": 3422,
									"end": 3423,
									"name": "DUP3"
								},
								{
									"begin": 3422,
									"end": 3428,
									"name": "GT"
								},
								{
									"begin": 3422,
									"end": 3428,
									"name": "ISZERO"
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "ISZERO"
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "ISZERO"
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "JUMPI"
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "INVALID"
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "JUMPDEST"
								},
								{
									"begin": 3447,
									"end": 3448,
									"name": "DUP2"
								},
								{
									"begin": 3443,
									"end": 3444,
									"name": "DUP4"
								},
								{
									"begin": 3443,
									"end": 3448,
									"name": "SUB"
								},
								{
									"begin": 3436,
									"end": 3448,
									"name": "SWAP1"
								},
								{
									"begin": 3436,
									"end": 3448,
									"name": "POP"
								},
								{
									"begin": 3341,
									"end": 3454,
									"name": "SWAP3"
								},
								{
									"begin": 3341,
									"end": 3454,
									"name": "SWAP2"
								},
								{
									"begin": 3341,
									"end": 3454,
									"name": "POP"
								},
								{
									"begin": 3341,
									"end": 3454,
									"name": "POP"
								},
								{
									"begin": 3341,
									"end": 3454,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "JUMPDEST"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "DUP1"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "CODECOPY"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4784,
									"end": 10151,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820eac5e272da459875b76bdf98458ca0ac256f17e09f0e8ff96d6359f4d05af10f0029",
									".code": [
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "MSTORE"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "LT"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "SWAP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DIV"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "AND"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "3FA4F245"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "9B1CBCCC"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "AA6CA808"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "C108D542"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "C489744B"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "C63E6171"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "D8A54360"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "E58FC54C"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "EFCA2EED"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "DUP1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH",
											"value": "F9F92BE4"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "EQ"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPI"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "JUMPDEST"
										},
										{
											"begin": 6901,
											"end": 6912,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 6901,
											"end": 6910,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 6901,
											"end": 6912,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6901,
											"end": 6912,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 6901,
											"end": 6912,
											"name": "JUMPDEST"
										},
										{
											"begin": 4784,
											"end": 10151,
											"name": "STOP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "JUMPDEST"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "POP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "JUMP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "JUMPDEST"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "MLOAD"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "ADD"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP3"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP2"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SUB"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP3"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "MSTORE"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP4"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP2"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP2"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "MLOAD"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP2"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "MSTORE"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "ADD"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SWAP2"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "POP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "MLOAD"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SWAP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "ADD"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SWAP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP4"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "POP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "POP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "POP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SWAP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "POP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SWAP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP2"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "ADD"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SWAP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "AND"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "ISZERO"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "JUMPI"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP3"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SUB"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "MLOAD"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP4"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SUB"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "EXP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SUB"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "NOT"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "AND"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP2"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "MSTORE"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "ADD"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SWAP2"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "POP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "JUMPDEST"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "POP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SWAP3"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "POP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "POP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "POP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "MLOAD"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SWAP2"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SUB"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SWAP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "RETURN"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "JUMPDEST"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "POP"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "DUP1"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SUB"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "DUP2"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "ADD"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP1"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "DUP1"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "DUP1"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "AND"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP1"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "ADD"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP1"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP3"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP2"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP1"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "DUP1"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP1"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "ADD"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP1"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP3"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP2"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP1"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "POP"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "POP"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "POP"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "JUMP"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "JUMPDEST"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "MLOAD"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "DUP1"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "DUP3"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "ISZERO"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "ISZERO"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "ISZERO"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "ISZERO"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "DUP2"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "MSTORE"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "ADD"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP2"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "POP"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "POP"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "MLOAD"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "DUP1"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP2"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SUB"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP1"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "RETURN"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "JUMPDEST"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "POP"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "JUMP"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "JUMPDEST"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "MLOAD"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "DUP1"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "DUP3"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "DUP2"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "MSTORE"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "ADD"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "SWAP2"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "POP"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "POP"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "MLOAD"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "DUP1"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "SWAP2"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "SUB"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "SWAP1"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "RETURN"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "JUMPDEST"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "DUP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SUB"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "DUP2"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "ADD"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "DUP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "DUP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "AND"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "ADD"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP3"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP2"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "DUP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "AND"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "ADD"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP3"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP2"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "DUP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "ADD"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP3"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP2"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "JUMP"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "JUMPDEST"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "MLOAD"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "DUP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "DUP3"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "ISZERO"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "ISZERO"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "ISZERO"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "ISZERO"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "DUP2"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "MSTORE"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "ADD"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP2"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "MLOAD"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "DUP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP2"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SUB"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "RETURN"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMPDEST"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "POP"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMP"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMPDEST"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "MLOAD"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "DUP1"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "DUP3"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "DUP2"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "MSTORE"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "ADD"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "SWAP2"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "POP"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "POP"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "MLOAD"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "DUP1"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "SWAP2"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "SUB"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "SWAP1"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "RETURN"
										},
										{
											"begin": 9384,
											"end": 9521,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 9384,
											"end": 9521,
											"name": "JUMPDEST"
										},
										{
											"begin": 9384,
											"end": 9521,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9384,
											"end": 9521,
											"name": "POP"
										},
										{
											"begin": 9384,
											"end": 9521,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 9384,
											"end": 9521,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 9384,
											"end": 9521,
											"name": "JUMP"
										},
										{
											"begin": 9384,
											"end": 9521,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 9384,
											"end": 9521,
											"name": "JUMPDEST"
										},
										{
											"begin": 9384,
											"end": 9521,
											"name": "STOP"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "JUMPDEST"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "POP"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "JUMP"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "JUMPDEST"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "MLOAD"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "DUP1"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "DUP3"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "DUP2"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "MSTORE"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "ADD"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "SWAP2"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "POP"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "POP"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "MLOAD"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "DUP1"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "SWAP2"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "SUB"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "SWAP1"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "RETURN"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "JUMPDEST"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "POP"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "DUP1"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "SUB"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "DUP2"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "ADD"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "SWAP1"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "DUP1"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "DUP1"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "SWAP1"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "ADD"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "SWAP1"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "SWAP3"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "SWAP2"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "SWAP1"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "POP"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "POP"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "POP"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "JUMP"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "JUMPDEST"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "STOP"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "JUMPDEST"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "POP"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "DUP1"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "SUB"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "DUP2"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "ADD"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "SWAP1"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "DUP1"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "DUP1"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "AND"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "SWAP1"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "ADD"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "SWAP1"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "SWAP3"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "SWAP2"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "SWAP1"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "POP"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "POP"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "POP"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "JUMP"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "JUMPDEST"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "MLOAD"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "DUP1"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "DUP3"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "DUP2"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "MSTORE"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "ADD"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "SWAP2"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "POP"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "POP"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "MLOAD"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "DUP1"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "SWAP2"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "SUB"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "SWAP1"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "RETURN"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "JUMPDEST"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "JUMP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "JUMPDEST"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MLOAD"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ADD"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP3"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP2"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SUB"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP3"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MSTORE"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP4"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP2"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP2"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MLOAD"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP2"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MSTORE"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ADD"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SWAP2"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MLOAD"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SWAP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ADD"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SWAP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP4"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SWAP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SWAP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP2"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ADD"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SWAP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "AND"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ISZERO"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "JUMPI"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP3"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SUB"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MLOAD"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP4"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SUB"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "EXP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SUB"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "NOT"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "AND"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP2"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MSTORE"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ADD"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SWAP2"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "JUMPDEST"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SWAP3"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MLOAD"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SWAP2"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SUB"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SWAP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "RETURN"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "JUMPDEST"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "POP"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "JUMP"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "JUMPDEST"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "MLOAD"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "DUP1"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "DUP3"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "ISZERO"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "ISZERO"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "ISZERO"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "ISZERO"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "DUP2"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "MSTORE"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "ADD"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "SWAP2"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "POP"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "POP"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "MLOAD"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "DUP1"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "SWAP2"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "SUB"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "SWAP1"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "RETURN"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "JUMPDEST"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "POP"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "DUP1"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SUB"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "DUP2"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "ADD"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP1"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "DUP1"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "DUP1"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "AND"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP1"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "ADD"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP1"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP3"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP2"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP1"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "DUP1"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP1"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "ADD"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP1"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP3"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP2"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP1"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "POP"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "POP"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "POP"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "JUMP"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "JUMPDEST"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "MLOAD"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "DUP1"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "DUP3"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "ISZERO"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "ISZERO"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "ISZERO"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "ISZERO"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "DUP2"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "MSTORE"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "ADD"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP2"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "POP"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "POP"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "MLOAD"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "DUP1"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP2"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SUB"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP1"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "RETURN"
										},
										{
											"begin": 6932,
											"end": 7511,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 6932,
											"end": 7511,
											"name": "JUMPDEST"
										},
										{
											"begin": 6932,
											"end": 7511,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 6932,
											"end": 7511,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 6932,
											"end": 7511,
											"name": "JUMP"
										},
										{
											"begin": 6932,
											"end": 7511,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 6932,
											"end": 7511,
											"name": "JUMPDEST"
										},
										{
											"begin": 6932,
											"end": 7511,
											"name": "STOP"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "JUMPDEST"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "POP"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "JUMP"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "JUMPDEST"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "MLOAD"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "DUP1"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "DUP3"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "ISZERO"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "ISZERO"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "ISZERO"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "ISZERO"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "DUP2"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "MSTORE"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "ADD"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "SWAP2"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "POP"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "POP"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "MLOAD"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "DUP1"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "SWAP2"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "SUB"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "SWAP1"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "RETURN"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "JUMPDEST"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "POP"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "DUP1"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SUB"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "DUP2"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "ADD"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP1"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "DUP1"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "DUP1"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "AND"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP1"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "ADD"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP1"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP3"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP2"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP1"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "DUP1"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "AND"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP1"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "ADD"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP1"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP3"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP2"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP1"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "POP"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "POP"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "POP"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "JUMP"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "JUMPDEST"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "MLOAD"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "DUP1"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "DUP3"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "DUP2"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "MSTORE"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "ADD"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP2"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "POP"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "POP"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "MLOAD"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "DUP1"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP2"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SUB"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP1"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "RETURN"
										},
										{
											"begin": 6075,
											"end": 6189,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 6075,
											"end": 6189,
											"name": "JUMPDEST"
										},
										{
											"begin": 6075,
											"end": 6189,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6075,
											"end": 6189,
											"name": "POP"
										},
										{
											"begin": 6075,
											"end": 6189,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 6075,
											"end": 6189,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 6075,
											"end": 6189,
											"name": "JUMP"
										},
										{
											"begin": 6075,
											"end": 6189,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 6075,
											"end": 6189,
											"name": "JUMPDEST"
										},
										{
											"begin": 6075,
											"end": 6189,
											"name": "STOP"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "JUMPDEST"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "POP"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "JUMP"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "JUMPDEST"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "MLOAD"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "DUP1"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "DUP3"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "DUP2"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "MSTORE"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "ADD"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "SWAP2"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "POP"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "POP"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "MLOAD"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "DUP1"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "SWAP2"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "SUB"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "SWAP1"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "RETURN"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "JUMPDEST"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "POP"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "DUP1"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SUB"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "DUP2"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "ADD"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP1"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "DUP1"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "DUP1"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "AND"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP1"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "ADD"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP1"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP3"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP2"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP1"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "DUP1"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "AND"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP1"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "ADD"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP1"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP3"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP2"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP1"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "POP"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "POP"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "POP"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "JUMP"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "JUMPDEST"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "MLOAD"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "DUP1"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "DUP3"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "DUP2"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "MSTORE"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "ADD"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP2"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "POP"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "POP"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "MLOAD"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "DUP1"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP2"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SUB"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP1"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "RETURN"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "JUMPDEST"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "SUB"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "AND"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "SWAP3"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "SWAP2"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "JUMP"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "JUMPDEST"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "MLOAD"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "ISZERO"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "ISZERO"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "ISZERO"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "ISZERO"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "SWAP2"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "MLOAD"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "SWAP2"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "SUB"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "RETURN"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "JUMPDEST"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "POP"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "JUMP"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "JUMPDEST"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "MLOAD"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "DUP1"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "DUP3"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "DUP2"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "MSTORE"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "ADD"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "SWAP2"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "POP"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "POP"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "MLOAD"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "DUP1"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "SWAP2"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "SUB"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "SWAP1"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "RETURN"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "JUMPDEST"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "POP"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "DUP1"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SUB"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "DUP2"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "ADD"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SWAP1"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "DUP1"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "DUP1"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "AND"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SWAP1"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "ADD"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SWAP1"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SWAP3"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SWAP2"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SWAP1"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "POP"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "POP"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "POP"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "JUMP"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "JUMPDEST"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "MLOAD"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "DUP1"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "DUP3"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "ISZERO"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "ISZERO"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "ISZERO"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "ISZERO"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "DUP2"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "MSTORE"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "ADD"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SWAP2"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "POP"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "POP"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "MLOAD"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "DUP1"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SWAP2"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SUB"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SWAP1"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "RETURN"
										},
										{
											"begin": 6932,
											"end": 7511,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 6932,
											"end": 7511,
											"name": "JUMPDEST"
										},
										{
											"begin": 7150,
											"end": 7166,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7190,
											"end": 7204,
											"name": "DUP1"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "SWAP1"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "SLOAD"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "SWAP1"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "EXP"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "SWAP1"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "DIV"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "AND"
										},
										{
											"begin": 5828,
											"end": 5849,
											"name": "ISZERO"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "ISZERO"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "ISZERO"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "JUMPI"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "DUP1"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "REVERT"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "JUMPDEST"
										},
										{
											"begin": 6041,
											"end": 6046,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6016,
											"end": 6046,
											"name": "ISZERO"
										},
										{
											"begin": 6016,
											"end": 6046,
											"name": "ISZERO"
										},
										{
											"begin": 6016,
											"end": 6025,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6026,
											"end": 6036,
											"name": "CALLER"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "AND"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "AND"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "DUP2"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "MSTORE"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "ADD"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "SWAP1"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "DUP2"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "MSTORE"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "ADD"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "KECCAK256"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "SWAP1"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "SLOAD"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "SWAP1"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "EXP"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "SWAP1"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "DIV"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "AND"
										},
										{
											"begin": 6016,
											"end": 6046,
											"name": "ISZERO"
										},
										{
											"begin": 6016,
											"end": 6046,
											"name": "ISZERO"
										},
										{
											"begin": 6016,
											"end": 6046,
											"name": "EQ"
										},
										{
											"begin": 6008,
											"end": 6047,
											"name": "ISZERO"
										},
										{
											"begin": 6008,
											"end": 6047,
											"name": "ISZERO"
										},
										{
											"begin": 6008,
											"end": 6047,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 6008,
											"end": 6047,
											"name": "JUMPI"
										},
										{
											"begin": 6008,
											"end": 6047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6008,
											"end": 6047,
											"name": "DUP1"
										},
										{
											"begin": 6008,
											"end": 6047,
											"name": "REVERT"
										},
										{
											"begin": 6008,
											"end": 6047,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 6008,
											"end": 6047,
											"name": "JUMPDEST"
										},
										{
											"begin": 7014,
											"end": 7028,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 7014,
											"end": 7028,
											"name": "SLOAD"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "SLOAD"
										},
										{
											"begin": 7006,
											"end": 7028,
											"name": "GT"
										},
										{
											"begin": 7002,
											"end": 7079,
											"name": "ISZERO"
										},
										{
											"begin": 7002,
											"end": 7079,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 7002,
											"end": 7079,
											"name": "JUMPI"
										},
										{
											"begin": 7053,
											"end": 7067,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 7053,
											"end": 7067,
											"name": "SLOAD"
										},
										{
											"begin": 7045,
											"end": 7050,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "DUP2"
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "SWAP1"
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "SSTORE"
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "POP"
										},
										{
											"begin": 7002,
											"end": 7079,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 7002,
											"end": 7079,
											"name": "JUMPDEST"
										},
										{
											"begin": 7115,
											"end": 7129,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 7115,
											"end": 7129,
											"name": "SLOAD"
										},
										{
											"begin": 7106,
											"end": 7111,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7106,
											"end": 7111,
											"name": "SLOAD"
										},
										{
											"begin": 7106,
											"end": 7129,
											"name": "GT"
										},
										{
											"begin": 7106,
											"end": 7129,
											"name": "ISZERO"
										},
										{
											"begin": 7098,
											"end": 7130,
											"name": "ISZERO"
										},
										{
											"begin": 7098,
											"end": 7130,
											"name": "ISZERO"
										},
										{
											"begin": 7098,
											"end": 7130,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 7098,
											"end": 7130,
											"name": "JUMPI"
										},
										{
											"begin": 7098,
											"end": 7130,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7130,
											"name": "DUP1"
										},
										{
											"begin": 7098,
											"end": 7130,
											"name": "REVERT"
										},
										{
											"begin": 7098,
											"end": 7130,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 7098,
											"end": 7130,
											"name": "JUMPDEST"
										},
										{
											"begin": 7169,
											"end": 7179,
											"name": "CALLER"
										},
										{
											"begin": 7150,
											"end": 7179,
											"name": "SWAP2"
										},
										{
											"begin": 7150,
											"end": 7179,
											"name": "POP"
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "SLOAD"
										},
										{
											"begin": 7190,
											"end": 7212,
											"name": "SWAP1"
										},
										{
											"begin": 7190,
											"end": 7212,
											"name": "POP"
										},
										{
											"begin": 7232,
											"end": 7255,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 7238,
											"end": 7246,
											"name": "DUP3"
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "DUP3"
										},
										{
											"begin": 7232,
											"end": 7237,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 7232,
											"end": 7255,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7232,
											"end": 7255,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 7232,
											"end": 7255,
											"name": "JUMPDEST"
										},
										{
											"begin": 7232,
											"end": 7255,
											"name": "POP"
										},
										{
											"begin": 7288,
											"end": 7289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7279,
											"end": 7285,
											"name": "DUP2"
										},
										{
											"begin": 7279,
											"end": 7289,
											"name": "GT"
										},
										{
											"begin": 7275,
											"end": 7344,
											"name": "ISZERO"
										},
										{
											"begin": 7275,
											"end": 7344,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 7275,
											"end": 7344,
											"name": "JUMPI"
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7306,
											"end": 7315,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7316,
											"end": 7324,
											"name": "DUP5"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "AND"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "AND"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "DUP2"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "MSTORE"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "ADD"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "SWAP1"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "DUP2"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "MSTORE"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "ADD"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "KECCAK256"
										},
										{
											"begin": 7306,
											"end": 7325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "EXP"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "DUP2"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "SLOAD"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "DUP2"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "MUL"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "NOT"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "AND"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "SWAP1"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "DUP4"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "ISZERO"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "ISZERO"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "MUL"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "OR"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "SWAP1"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "SSTORE"
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "POP"
										},
										{
											"begin": 7275,
											"end": 7344,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 7275,
											"end": 7344,
											"name": "JUMPDEST"
										},
										{
											"begin": 7380,
											"end": 7391,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 7380,
											"end": 7391,
											"name": "SLOAD"
										},
										{
											"begin": 7360,
											"end": 7376,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 7360,
											"end": 7376,
											"name": "SLOAD"
										},
										{
											"begin": 7360,
											"end": 7391,
											"name": "LT"
										},
										{
											"begin": 7360,
											"end": 7391,
											"name": "ISZERO"
										},
										{
											"begin": 7356,
											"end": 7447,
											"name": "ISZERO"
										},
										{
											"begin": 7356,
											"end": 7447,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 7356,
											"end": 7447,
											"name": "JUMPI"
										},
										{
											"begin": 7431,
											"end": 7435,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7408,
											"end": 7428,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 7408,
											"end": 7428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "EXP"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "DUP2"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "SLOAD"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "DUP2"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "MUL"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "NOT"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "AND"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "SWAP1"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "DUP4"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "ISZERO"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "ISZERO"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "MUL"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "OR"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "SWAP1"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "SSTORE"
										},
										{
											"begin": 7408,
											"end": 7435,
											"name": "POP"
										},
										{
											"begin": 7356,
											"end": 7447,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 7356,
											"end": 7447,
											"name": "JUMPDEST"
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 7496,
											"end": 7502,
											"name": "PUSH",
											"value": "7A11F"
										},
										{
											"begin": 7474,
											"end": 7491,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 7484,
											"end": 7490,
											"name": "PUSH",
											"value": "7A120"
										},
										{
											"begin": 7474,
											"end": 7479,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7474,
											"end": 7479,
											"name": "SLOAD"
										},
										{
											"begin": 7474,
											"end": 7483,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 7474,
											"end": 7483,
											"name": "SWAP1"
										},
										{
											"begin": 7474,
											"end": 7491,
											"name": "SWAP2"
										},
										{
											"begin": 7474,
											"end": 7491,
											"name": "SWAP1"
										},
										{
											"begin": 7474,
											"end": 7491,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7474,
											"end": 7491,
											"name": "AND"
										},
										{
											"begin": 7474,
											"end": 7491,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7474,
											"end": 7491,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 7474,
											"end": 7491,
											"name": "JUMPDEST"
										},
										{
											"begin": 7474,
											"end": 7495,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 7474,
											"end": 7495,
											"name": "SWAP1"
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "SWAP2"
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "AND"
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "JUMPDEST"
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7466,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7466,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7466,
											"end": 7503,
											"name": "SSTORE"
										},
										{
											"begin": 7466,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 6932,
											"end": 7511,
											"name": "POP"
										},
										{
											"begin": 6932,
											"end": 7511,
											"name": "POP"
										},
										{
											"begin": 6932,
											"end": 7511,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "JUMPDEST"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "MLOAD"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "SWAP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP2"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "ADD"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "MSTORE"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP1"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP2"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "MSTORE"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "ADD"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "PUSH",
											"value": "4B6167692043727970746F000000000000000000000000000000000000000000"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP2"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "MSTORE"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "POP"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "DUP2"
										},
										{
											"begin": 5057,
											"end": 5100,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "JUMPDEST"
										},
										{
											"begin": 8773,
											"end": 8785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8812,
											"end": 8813,
											"name": "DUP1"
										},
										{
											"begin": 8802,
											"end": 8808,
											"name": "DUP3"
										},
										{
											"begin": 8802,
											"end": 8813,
											"name": "EQ"
										},
										{
											"begin": 8802,
											"end": 8813,
											"name": "ISZERO"
										},
										{
											"begin": 8802,
											"end": 8851,
											"name": "DUP1"
										},
										{
											"begin": 8802,
											"end": 8851,
											"name": "ISZERO"
										},
										{
											"begin": 8802,
											"end": 8851,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 8802,
											"end": 8851,
											"name": "JUMPI"
										},
										{
											"begin": 8802,
											"end": 8851,
											"name": "POP"
										},
										{
											"begin": 8850,
											"end": 8851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8824,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8825,
											"end": 8835,
											"name": "CALLER"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "AND"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "AND"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "DUP2"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "MSTORE"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "ADD"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "DUP2"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "MSTORE"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "ADD"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "KECCAK256"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8837,
											"end": 8845,
											"name": "DUP6"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "AND"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "AND"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "DUP2"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "MSTORE"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "ADD"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "DUP2"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "MSTORE"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "ADD"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "KECCAK256"
										},
										{
											"begin": 8817,
											"end": 8846,
											"name": "SLOAD"
										},
										{
											"begin": 8817,
											"end": 8851,
											"name": "EQ"
										},
										{
											"begin": 8817,
											"end": 8851,
											"name": "ISZERO"
										},
										{
											"begin": 8802,
											"end": 8851,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 8802,
											"end": 8851,
											"name": "JUMPDEST"
										},
										{
											"begin": 8798,
											"end": 8870,
											"name": "ISZERO"
										},
										{
											"begin": 8798,
											"end": 8870,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 8798,
											"end": 8870,
											"name": "JUMPI"
										},
										{
											"begin": 8862,
											"end": 8867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8855,
											"end": 8867,
											"name": "SWAP1"
										},
										{
											"begin": 8855,
											"end": 8867,
											"name": "POP"
										},
										{
											"begin": 8855,
											"end": 8867,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 8855,
											"end": 8867,
											"name": "JUMP"
										},
										{
											"begin": 8798,
											"end": 8870,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 8798,
											"end": 8870,
											"name": "JUMPDEST"
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "DUP2"
										},
										{
											"begin": 8880,
											"end": 8887,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8888,
											"end": 8898,
											"name": "CALLER"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "AND"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "AND"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "DUP2"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "MSTORE"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "ADD"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "SWAP1"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "DUP2"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "MSTORE"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "ADD"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "KECCAK256"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8900,
											"end": 8908,
											"name": "DUP6"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "AND"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "AND"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "DUP2"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "MSTORE"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "ADD"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "SWAP1"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "DUP2"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "MSTORE"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "ADD"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8880,
											"end": 8909,
											"name": "KECCAK256"
										},
										{
											"begin": 8880,
											"end": 8918,
											"name": "DUP2"
										},
										{
											"begin": 8880,
											"end": 8918,
											"name": "SWAP1"
										},
										{
											"begin": 8880,
											"end": 8918,
											"name": "SSTORE"
										},
										{
											"begin": 8880,
											"end": 8918,
											"name": "POP"
										},
										{
											"begin": 8955,
											"end": 8963,
											"name": "DUP3"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "AND"
										},
										{
											"begin": 8943,
											"end": 8953,
											"name": "CALLER"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "AND"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8965,
											"end": 8971,
											"name": "DUP5"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "MLOAD"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "DUP1"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "DUP3"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "DUP2"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "MSTORE"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "ADD"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "SWAP2"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "POP"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "POP"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "MLOAD"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "DUP1"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "SWAP2"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "SUB"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "SWAP1"
										},
										{
											"begin": 8934,
											"end": 8972,
											"name": "LOG3"
										},
										{
											"begin": 8990,
											"end": 8994,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8983,
											"end": 8994,
											"name": "SWAP1"
										},
										{
											"begin": 8983,
											"end": 8994,
											"name": "POP"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "JUMPDEST"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP3"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "SWAP2"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "POP"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "POP"
										},
										{
											"begin": 8706,
											"end": 9002,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "JUMPDEST"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "SLOAD"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "DUP2"
										},
										{
											"begin": 5193,
											"end": 5237,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "JUMPDEST"
										},
										{
											"begin": 8268,
											"end": 8280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8244,
											"end": 8250,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7718,
											"end": 7719,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7711,
											"end": 7715,
											"name": "DUP2"
										},
										{
											"begin": 7711,
											"end": 7719,
											"name": "ADD"
										},
										{
											"begin": 7692,
											"end": 7700,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7692,
											"end": 7700,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7692,
											"end": 7707,
											"name": "SWAP1"
										},
										{
											"begin": 7692,
											"end": 7707,
											"name": "POP"
										},
										{
											"begin": 7692,
											"end": 7719,
											"name": "LT"
										},
										{
											"begin": 7692,
											"end": 7719,
											"name": "ISZERO"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "ISZERO"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "ISZERO"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "JUMPI"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "INVALID"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "JUMPDEST"
										},
										{
											"begin": 8316,
											"end": 8317,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "AND"
										},
										{
											"begin": 8301,
											"end": 8304,
											"name": "DUP5"
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "AND"
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "EQ"
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "ISZERO"
										},
										{
											"begin": 8293,
											"end": 8319,
											"name": "ISZERO"
										},
										{
											"begin": 8293,
											"end": 8319,
											"name": "ISZERO"
										},
										{
											"begin": 8293,
											"end": 8319,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 8293,
											"end": 8319,
											"name": "JUMPI"
										},
										{
											"begin": 8293,
											"end": 8319,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8293,
											"end": 8319,
											"name": "DUP1"
										},
										{
											"begin": 8293,
											"end": 8319,
											"name": "REVERT"
										},
										{
											"begin": 8293,
											"end": 8319,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 8293,
											"end": 8319,
											"name": "JUMPDEST"
										},
										{
											"begin": 8349,
											"end": 8357,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8363,
											"name": "DUP7"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "AND"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "AND"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "DUP2"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "MSTORE"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "ADD"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "SWAP1"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "DUP2"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "MSTORE"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "ADD"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "KECCAK256"
										},
										{
											"begin": 8349,
											"end": 8364,
											"name": "SLOAD"
										},
										{
											"begin": 8338,
											"end": 8345,
											"name": "DUP4"
										},
										{
											"begin": 8338,
											"end": 8364,
											"name": "GT"
										},
										{
											"begin": 8338,
											"end": 8364,
											"name": "ISZERO"
										},
										{
											"begin": 8330,
											"end": 8365,
											"name": "ISZERO"
										},
										{
											"begin": 8330,
											"end": 8365,
											"name": "ISZERO"
										},
										{
											"begin": 8330,
											"end": 8365,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 8330,
											"end": 8365,
											"name": "JUMPI"
										},
										{
											"begin": 8330,
											"end": 8365,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8330,
											"end": 8365,
											"name": "DUP1"
										},
										{
											"begin": 8330,
											"end": 8365,
											"name": "REVERT"
										},
										{
											"begin": 8330,
											"end": 8365,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 8330,
											"end": 8365,
											"name": "JUMPDEST"
										},
										{
											"begin": 8395,
											"end": 8402,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8403,
											"end": 8408,
											"name": "DUP7"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "AND"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "AND"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "DUP2"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "MSTORE"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "ADD"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "SWAP1"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "DUP2"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "MSTORE"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "ADD"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "KECCAK256"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "CALLER"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "AND"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "AND"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "DUP2"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "MSTORE"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "ADD"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "SWAP1"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "DUP2"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "MSTORE"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "ADD"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "KECCAK256"
										},
										{
											"begin": 8395,
											"end": 8421,
											"name": "SLOAD"
										},
										{
											"begin": 8384,
											"end": 8391,
											"name": "DUP4"
										},
										{
											"begin": 8384,
											"end": 8421,
											"name": "GT"
										},
										{
											"begin": 8384,
											"end": 8421,
											"name": "ISZERO"
										},
										{
											"begin": 8376,
											"end": 8422,
											"name": "ISZERO"
										},
										{
											"begin": 8376,
											"end": 8422,
											"name": "ISZERO"
										},
										{
											"begin": 8376,
											"end": 8422,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 8376,
											"end": 8422,
											"name": "JUMPI"
										},
										{
											"begin": 8376,
											"end": 8422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8376,
											"end": 8422,
											"name": "DUP1"
										},
										{
											"begin": 8376,
											"end": 8422,
											"name": "REVERT"
										},
										{
											"begin": 8376,
											"end": 8422,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 8376,
											"end": 8422,
											"name": "JUMPDEST"
										},
										{
											"begin": 8460,
											"end": 8488,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 8480,
											"end": 8487,
											"name": "DUP4"
										},
										{
											"begin": 8460,
											"end": 8468,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8469,
											"end": 8474,
											"name": "DUP9"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "AND"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "AND"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "DUP2"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "MSTORE"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "ADD"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "SWAP1"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "DUP2"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "MSTORE"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "ADD"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "KECCAK256"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "SLOAD"
										},
										{
											"begin": 8460,
											"end": 8479,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 8460,
											"end": 8479,
											"name": "SWAP1"
										},
										{
											"begin": 8460,
											"end": 8488,
											"name": "SWAP2"
										},
										{
											"begin": 8460,
											"end": 8488,
											"name": "SWAP1"
										},
										{
											"begin": 8460,
											"end": 8488,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8460,
											"end": 8488,
											"name": "AND"
										},
										{
											"begin": 8460,
											"end": 8488,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8460,
											"end": 8488,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 8460,
											"end": 8488,
											"name": "JUMPDEST"
										},
										{
											"begin": 8442,
											"end": 8450,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8451,
											"end": 8456,
											"name": "DUP8"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "AND"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "AND"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "DUP2"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "MSTORE"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "ADD"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "SWAP1"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "DUP2"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "MSTORE"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "ADD"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "KECCAK256"
										},
										{
											"begin": 8442,
											"end": 8488,
											"name": "DUP2"
										},
										{
											"begin": 8442,
											"end": 8488,
											"name": "SWAP1"
										},
										{
											"begin": 8442,
											"end": 8488,
											"name": "SSTORE"
										},
										{
											"begin": 8442,
											"end": 8488,
											"name": "POP"
										},
										{
											"begin": 8528,
											"end": 8567,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 8559,
											"end": 8566,
											"name": "DUP4"
										},
										{
											"begin": 8528,
											"end": 8535,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP9"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "AND"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "AND"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "DUP2"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "MSTORE"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "ADD"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "SWAP1"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "DUP2"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "MSTORE"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "ADD"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8528,
											"end": 8542,
											"name": "KECCAK256"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8543,
											"end": 8553,
											"name": "CALLER"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "AND"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "AND"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "DUP2"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "MSTORE"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "ADD"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "SWAP1"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "DUP2"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "MSTORE"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "ADD"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "KECCAK256"
										},
										{
											"begin": 8528,
											"end": 8554,
											"name": "SLOAD"
										},
										{
											"begin": 8528,
											"end": 8558,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 8528,
											"end": 8558,
											"name": "SWAP1"
										},
										{
											"begin": 8528,
											"end": 8567,
											"name": "SWAP2"
										},
										{
											"begin": 8528,
											"end": 8567,
											"name": "SWAP1"
										},
										{
											"begin": 8528,
											"end": 8567,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8528,
											"end": 8567,
											"name": "AND"
										},
										{
											"begin": 8528,
											"end": 8567,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8528,
											"end": 8567,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 8528,
											"end": 8567,
											"name": "JUMPDEST"
										},
										{
											"begin": 8499,
											"end": 8506,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8512,
											"name": "DUP8"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "AND"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "AND"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "DUP2"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "MSTORE"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "ADD"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "SWAP1"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "DUP2"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "MSTORE"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "ADD"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8499,
											"end": 8513,
											"name": "KECCAK256"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8514,
											"end": 8524,
											"name": "CALLER"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "AND"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "AND"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "DUP2"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "MSTORE"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "ADD"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "SWAP1"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "DUP2"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "MSTORE"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "ADD"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "KECCAK256"
										},
										{
											"begin": 8499,
											"end": 8567,
											"name": "DUP2"
										},
										{
											"begin": 8499,
											"end": 8567,
											"name": "SWAP1"
										},
										{
											"begin": 8499,
											"end": 8567,
											"name": "SSTORE"
										},
										{
											"begin": 8499,
											"end": 8567,
											"name": "POP"
										},
										{
											"begin": 8594,
											"end": 8620,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 8612,
											"end": 8619,
											"name": "DUP4"
										},
										{
											"begin": 8594,
											"end": 8602,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8603,
											"end": 8606,
											"name": "DUP8"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "AND"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "AND"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "DUP2"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "MSTORE"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "ADD"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "SWAP1"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "DUP2"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "MSTORE"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "ADD"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "KECCAK256"
										},
										{
											"begin": 8594,
											"end": 8607,
											"name": "SLOAD"
										},
										{
											"begin": 8594,
											"end": 8611,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 8594,
											"end": 8611,
											"name": "SWAP1"
										},
										{
											"begin": 8594,
											"end": 8620,
											"name": "SWAP2"
										},
										{
											"begin": 8594,
											"end": 8620,
											"name": "SWAP1"
										},
										{
											"begin": 8594,
											"end": 8620,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8594,
											"end": 8620,
											"name": "AND"
										},
										{
											"begin": 8594,
											"end": 8620,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8594,
											"end": 8620,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 8594,
											"end": 8620,
											"name": "JUMPDEST"
										},
										{
											"begin": 8578,
											"end": 8586,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8587,
											"end": 8590,
											"name": "DUP7"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "AND"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "AND"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "DUP2"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "MSTORE"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "ADD"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "SWAP1"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "DUP2"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "MSTORE"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "ADD"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8591,
											"name": "KECCAK256"
										},
										{
											"begin": 8578,
											"end": 8620,
											"name": "DUP2"
										},
										{
											"begin": 8578,
											"end": 8620,
											"name": "SWAP1"
										},
										{
											"begin": 8578,
											"end": 8620,
											"name": "SSTORE"
										},
										{
											"begin": 8578,
											"end": 8620,
											"name": "POP"
										},
										{
											"begin": 8652,
											"end": 8655,
											"name": "DUP4"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "AND"
										},
										{
											"begin": 8645,
											"end": 8650,
											"name": "DUP6"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "AND"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8657,
											"end": 8664,
											"name": "DUP6"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "MLOAD"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "DUP1"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "DUP3"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "DUP2"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "MSTORE"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "ADD"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "SWAP2"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "POP"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "POP"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "MLOAD"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "DUP1"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "SWAP2"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "SUB"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "SWAP1"
										},
										{
											"begin": 8636,
											"end": 8665,
											"name": "LOG3"
										},
										{
											"begin": 8683,
											"end": 8687,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8676,
											"end": 8687,
											"name": "SWAP2"
										},
										{
											"begin": 8676,
											"end": 8687,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP4"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "SWAP3"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8695,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMPDEST"
										},
										{
											"begin": 5183,
											"end": 5185,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "DUP2"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9384,
											"end": 9521,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 9384,
											"end": 9521,
											"name": "JUMPDEST"
										},
										{
											"begin": 9432,
											"end": 9451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SLOAD"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "EXP"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "DIV"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "CALLER"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "EQ"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "ISZERO"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "ISZERO"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "JUMPI"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "DUP1"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "REVERT"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "JUMPDEST"
										},
										{
											"begin": 9462,
											"end": 9466,
											"name": "ADDRESS"
										},
										{
											"begin": 9454,
											"end": 9475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9454,
											"end": 9475,
											"name": "AND"
										},
										{
											"begin": 9454,
											"end": 9475,
											"name": "BALANCE"
										},
										{
											"begin": 9432,
											"end": 9475,
											"name": "SWAP1"
										},
										{
											"begin": 9432,
											"end": 9475,
											"name": "POP"
										},
										{
											"begin": 9486,
											"end": 9491,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9486,
											"end": 9491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9491,
											"name": "SWAP1"
										},
										{
											"begin": 9486,
											"end": 9491,
											"name": "SLOAD"
										},
										{
											"begin": 9486,
											"end": 9491,
											"name": "SWAP1"
										},
										{
											"begin": 9486,
											"end": 9491,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9486,
											"end": 9491,
											"name": "EXP"
										},
										{
											"begin": 9486,
											"end": 9491,
											"name": "SWAP1"
										},
										{
											"begin": 9486,
											"end": 9491,
											"name": "DIV"
										},
										{
											"begin": 9486,
											"end": 9491,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9486,
											"end": 9491,
											"name": "AND"
										},
										{
											"begin": 9486,
											"end": 9500,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9486,
											"end": 9500,
											"name": "AND"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 9501,
											"end": 9512,
											"name": "DUP3"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "SWAP1"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "DUP2"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "ISZERO"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "MUL"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "SWAP1"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "MLOAD"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "MLOAD"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "DUP1"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "DUP4"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "SUB"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "DUP2"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "DUP6"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "DUP9"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "DUP9"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "CALL"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "SWAP4"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "POP"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "POP"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "POP"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "POP"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9486,
											"end": 9513,
											"name": "POP"
										},
										{
											"begin": 9384,
											"end": 9521,
											"name": "POP"
										},
										{
											"begin": 9384,
											"end": 9521,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "JUMPDEST"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "SLOAD"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "DUP2"
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "JUMPDEST"
										},
										{
											"begin": 9642,
											"end": 9656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SLOAD"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "EXP"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "DIV"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "CALLER"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "EQ"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "ISZERO"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "ISZERO"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "JUMPI"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "DUP1"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "REVERT"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "JUMPDEST"
										},
										{
											"begin": 9608,
											"end": 9616,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9627,
											"name": "CALLER"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "AND"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "AND"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "DUP2"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "MSTORE"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "ADD"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "SWAP1"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "DUP2"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "MSTORE"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "ADD"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "KECCAK256"
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "SLOAD"
										},
										{
											"begin": 9598,
											"end": 9604,
											"name": "DUP3"
										},
										{
											"begin": 9598,
											"end": 9628,
											"name": "GT"
										},
										{
											"begin": 9598,
											"end": 9628,
											"name": "ISZERO"
										},
										{
											"begin": 9590,
											"end": 9629,
											"name": "ISZERO"
										},
										{
											"begin": 9590,
											"end": 9629,
											"name": "ISZERO"
										},
										{
											"begin": 9590,
											"end": 9629,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 9590,
											"end": 9629,
											"name": "JUMPI"
										},
										{
											"begin": 9590,
											"end": 9629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9590,
											"end": 9629,
											"name": "DUP1"
										},
										{
											"begin": 9590,
											"end": 9629,
											"name": "REVERT"
										},
										{
											"begin": 9590,
											"end": 9629,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 9590,
											"end": 9629,
											"name": "JUMPDEST"
										},
										{
											"begin": 9659,
											"end": 9669,
											"name": "CALLER"
										},
										{
											"begin": 9642,
											"end": 9669,
											"name": "SWAP1"
										},
										{
											"begin": 9642,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9699,
											"end": 9727,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 9720,
											"end": 9726,
											"name": "DUP3"
										},
										{
											"begin": 9699,
											"end": 9707,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9708,
											"end": 9714,
											"name": "DUP5"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "AND"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "AND"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "DUP2"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "MSTORE"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "ADD"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "SWAP1"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "DUP2"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "MSTORE"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "ADD"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "KECCAK256"
										},
										{
											"begin": 9699,
											"end": 9715,
											"name": "SLOAD"
										},
										{
											"begin": 9699,
											"end": 9719,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 9699,
											"end": 9719,
											"name": "SWAP1"
										},
										{
											"begin": 9699,
											"end": 9727,
											"name": "SWAP2"
										},
										{
											"begin": 9699,
											"end": 9727,
											"name": "SWAP1"
										},
										{
											"begin": 9699,
											"end": 9727,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9699,
											"end": 9727,
											"name": "AND"
										},
										{
											"begin": 9699,
											"end": 9727,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9699,
											"end": 9727,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 9699,
											"end": 9727,
											"name": "JUMPDEST"
										},
										{
											"begin": 9680,
											"end": 9688,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9689,
											"end": 9695,
											"name": "DUP4"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "AND"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "AND"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "DUP2"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "MSTORE"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "ADD"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "SWAP1"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "DUP2"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "MSTORE"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "ADD"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "KECCAK256"
										},
										{
											"begin": 9680,
											"end": 9727,
											"name": "DUP2"
										},
										{
											"begin": 9680,
											"end": 9727,
											"name": "SWAP1"
										},
										{
											"begin": 9680,
											"end": 9727,
											"name": "SSTORE"
										},
										{
											"begin": 9680,
											"end": 9727,
											"name": "POP"
										},
										{
											"begin": 9752,
											"end": 9775,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 9768,
											"end": 9774,
											"name": "DUP3"
										},
										{
											"begin": 9752,
											"end": 9763,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 9752,
											"end": 9763,
											"name": "SLOAD"
										},
										{
											"begin": 9752,
											"end": 9767,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 9752,
											"end": 9767,
											"name": "SWAP1"
										},
										{
											"begin": 9752,
											"end": 9775,
											"name": "SWAP2"
										},
										{
											"begin": 9752,
											"end": 9775,
											"name": "SWAP1"
										},
										{
											"begin": 9752,
											"end": 9775,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9752,
											"end": 9775,
											"name": "AND"
										},
										{
											"begin": 9752,
											"end": 9775,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9752,
											"end": 9775,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 9752,
											"end": 9775,
											"name": "JUMPDEST"
										},
										{
											"begin": 9738,
											"end": 9749,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 9738,
											"end": 9775,
											"name": "DUP2"
										},
										{
											"begin": 9738,
											"end": 9775,
											"name": "SWAP1"
										},
										{
											"begin": 9738,
											"end": 9775,
											"name": "SSTORE"
										},
										{
											"begin": 9738,
											"end": 9775,
											"name": "POP"
										},
										{
											"begin": 9805,
											"end": 9833,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 9826,
											"end": 9832,
											"name": "DUP3"
										},
										{
											"begin": 9805,
											"end": 9821,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9805,
											"end": 9821,
											"name": "SLOAD"
										},
										{
											"begin": 9805,
											"end": 9825,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 9805,
											"end": 9825,
											"name": "SWAP1"
										},
										{
											"begin": 9805,
											"end": 9833,
											"name": "SWAP2"
										},
										{
											"begin": 9805,
											"end": 9833,
											"name": "SWAP1"
										},
										{
											"begin": 9805,
											"end": 9833,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9805,
											"end": 9833,
											"name": "AND"
										},
										{
											"begin": 9805,
											"end": 9833,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9805,
											"end": 9833,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 9805,
											"end": 9833,
											"name": "JUMPDEST"
										},
										{
											"begin": 9786,
											"end": 9802,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9786,
											"end": 9833,
											"name": "DUP2"
										},
										{
											"begin": 9786,
											"end": 9833,
											"name": "SWAP1"
										},
										{
											"begin": 9786,
											"end": 9833,
											"name": "SSTORE"
										},
										{
											"begin": 9786,
											"end": 9833,
											"name": "POP"
										},
										{
											"begin": 9854,
											"end": 9860,
											"name": "DUP1"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "AND"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "PUSH",
											"value": "CC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
										},
										{
											"begin": 9862,
											"end": 9868,
											"name": "DUP4"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "MLOAD"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "DUP1"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "DUP3"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "DUP2"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "MSTORE"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "ADD"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "SWAP2"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "POP"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "POP"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "MLOAD"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "DUP1"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "SWAP2"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "SUB"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "SWAP1"
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "LOG2"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "POP"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "POP"
										},
										{
											"begin": 9532,
											"end": 9877,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "JUMPDEST"
										},
										{
											"begin": 7579,
											"end": 7586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7606,
											"end": 7614,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7615,
											"end": 7621,
											"name": "DUP4"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "AND"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "AND"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "DUP2"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "MSTORE"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "ADD"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "SWAP1"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "DUP2"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "MSTORE"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "ADD"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "KECCAK256"
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "SLOAD"
										},
										{
											"begin": 7599,
											"end": 7622,
											"name": "SWAP1"
										},
										{
											"begin": 7599,
											"end": 7622,
											"name": "POP"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "SWAP2"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "SWAP1"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "POP"
										},
										{
											"begin": 7519,
											"end": 7630,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "JUMPDEST"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MLOAD"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SWAP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP2"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ADD"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MSTORE"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP2"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MSTORE"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ADD"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"value": "4B47430000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP2"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MSTORE"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP2"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "JUMPDEST"
										},
										{
											"begin": 6265,
											"end": 6269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SLOAD"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "EXP"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "DIV"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "CALLER"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "EQ"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "ISZERO"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "ISZERO"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "JUMPI"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "DUP1"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "REVERT"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "JUMPDEST"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "SWAP1"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "SLOAD"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "SWAP1"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "EXP"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "SWAP1"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "DIV"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "AND"
										},
										{
											"begin": 5828,
											"end": 5849,
											"name": "ISZERO"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "ISZERO"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "ISZERO"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "JUMPI"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "DUP1"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "REVERT"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "JUMPDEST"
										},
										{
											"begin": 6305,
											"end": 6309,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "EXP"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "DUP2"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SLOAD"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "DUP2"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "MUL"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "NOT"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "AND"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP1"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "DUP4"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "ISZERO"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "ISZERO"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "MUL"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "OR"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP1"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SSTORE"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP"
										},
										{
											"begin": 6325,
											"end": 6340,
											"name": "PUSH",
											"value": "7F95D919E78BDEBE8A285E6E33357C2FCB65CCF66E72D7573F9F8F6CAAD0C4CC"
										},
										{
											"begin": 6325,
											"end": 6340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6325,
											"end": 6340,
											"name": "MLOAD"
										},
										{
											"begin": 6325,
											"end": 6340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6325,
											"end": 6340,
											"name": "MLOAD"
										},
										{
											"begin": 6325,
											"end": 6340,
											"name": "DUP1"
										},
										{
											"begin": 6325,
											"end": 6340,
											"name": "SWAP2"
										},
										{
											"begin": 6325,
											"end": 6340,
											"name": "SUB"
										},
										{
											"begin": 6325,
											"end": 6340,
											"name": "SWAP1"
										},
										{
											"begin": 6325,
											"end": 6340,
											"name": "LOG1"
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6351,
											"end": 6362,
											"name": "SWAP1"
										},
										{
											"begin": 6351,
											"end": 6362,
											"name": "POP"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "SWAP1"
										},
										{
											"begin": 6200,
											"end": 6370,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "JUMPDEST"
										},
										{
											"begin": 7839,
											"end": 7851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7821,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7718,
											"end": 7719,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7711,
											"end": 7715,
											"name": "DUP2"
										},
										{
											"begin": 7711,
											"end": 7719,
											"name": "ADD"
										},
										{
											"begin": 7692,
											"end": 7700,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7692,
											"end": 7700,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7692,
											"end": 7707,
											"name": "SWAP1"
										},
										{
											"begin": 7692,
											"end": 7707,
											"name": "POP"
										},
										{
											"begin": 7692,
											"end": 7719,
											"name": "LT"
										},
										{
											"begin": 7692,
											"end": 7719,
											"name": "ISZERO"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "ISZERO"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "ISZERO"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "JUMPI"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "INVALID"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "JUMPDEST"
										},
										{
											"begin": 7887,
											"end": 7888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7872,
											"end": 7889,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7872,
											"end": 7889,
											"name": "AND"
										},
										{
											"begin": 7872,
											"end": 7875,
											"name": "DUP5"
										},
										{
											"begin": 7872,
											"end": 7889,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7872,
											"end": 7889,
											"name": "AND"
										},
										{
											"begin": 7872,
											"end": 7889,
											"name": "EQ"
										},
										{
											"begin": 7872,
											"end": 7889,
											"name": "ISZERO"
										},
										{
											"begin": 7864,
											"end": 7890,
											"name": "ISZERO"
										},
										{
											"begin": 7864,
											"end": 7890,
											"name": "ISZERO"
										},
										{
											"begin": 7864,
											"end": 7890,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7864,
											"end": 7890,
											"name": "JUMPI"
										},
										{
											"begin": 7864,
											"end": 7890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7864,
											"end": 7890,
											"name": "DUP1"
										},
										{
											"begin": 7864,
											"end": 7890,
											"name": "REVERT"
										},
										{
											"begin": 7864,
											"end": 7890,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 7864,
											"end": 7890,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7928,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "CALLER"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "AND"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "AND"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "DUP2"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "MSTORE"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "ADD"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "SWAP1"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "DUP2"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "MSTORE"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "ADD"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "KECCAK256"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "SLOAD"
										},
										{
											"begin": 7909,
											"end": 7916,
											"name": "DUP4"
										},
										{
											"begin": 7909,
											"end": 7940,
											"name": "GT"
										},
										{
											"begin": 7909,
											"end": 7940,
											"name": "ISZERO"
										},
										{
											"begin": 7901,
											"end": 7941,
											"name": "ISZERO"
										},
										{
											"begin": 7901,
											"end": 7941,
											"name": "ISZERO"
										},
										{
											"begin": 7901,
											"end": 7941,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 7901,
											"end": 7941,
											"name": "JUMPI"
										},
										{
											"begin": 7901,
											"end": 7941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7901,
											"end": 7941,
											"name": "DUP1"
										},
										{
											"begin": 7901,
											"end": 7941,
											"name": "REVERT"
										},
										{
											"begin": 7901,
											"end": 7941,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 7901,
											"end": 7941,
											"name": "JUMPDEST"
										},
										{
											"begin": 7984,
											"end": 8017,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 8009,
											"end": 8016,
											"name": "DUP4"
										},
										{
											"begin": 7984,
											"end": 7992,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 8003,
											"name": "CALLER"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "AND"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "AND"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "DUP2"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "MSTORE"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "ADD"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "SWAP1"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "DUP2"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "MSTORE"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "ADD"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "KECCAK256"
										},
										{
											"begin": 7984,
											"end": 8004,
											"name": "SLOAD"
										},
										{
											"begin": 7984,
											"end": 8008,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 7984,
											"end": 8008,
											"name": "SWAP1"
										},
										{
											"begin": 7984,
											"end": 8017,
											"name": "SWAP2"
										},
										{
											"begin": 7984,
											"end": 8017,
											"name": "SWAP1"
										},
										{
											"begin": 7984,
											"end": 8017,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7984,
											"end": 8017,
											"name": "AND"
										},
										{
											"begin": 7984,
											"end": 8017,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7984,
											"end": 8017,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 7984,
											"end": 8017,
											"name": "JUMPDEST"
										},
										{
											"begin": 7961,
											"end": 7969,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7980,
											"name": "CALLER"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "AND"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "AND"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "DUP2"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "MSTORE"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "ADD"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "SWAP1"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "DUP2"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "MSTORE"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "ADD"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "KECCAK256"
										},
										{
											"begin": 7961,
											"end": 8017,
											"name": "DUP2"
										},
										{
											"begin": 7961,
											"end": 8017,
											"name": "SWAP1"
										},
										{
											"begin": 7961,
											"end": 8017,
											"name": "SSTORE"
										},
										{
											"begin": 7961,
											"end": 8017,
											"name": "POP"
										},
										{
											"begin": 8044,
											"end": 8070,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 8062,
											"end": 8069,
											"name": "DUP4"
										},
										{
											"begin": 8044,
											"end": 8052,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8056,
											"name": "DUP8"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "AND"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "AND"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "DUP2"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "MSTORE"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "ADD"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "SWAP1"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "DUP2"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "MSTORE"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "ADD"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "KECCAK256"
										},
										{
											"begin": 8044,
											"end": 8057,
											"name": "SLOAD"
										},
										{
											"begin": 8044,
											"end": 8061,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 8044,
											"end": 8061,
											"name": "SWAP1"
										},
										{
											"begin": 8044,
											"end": 8070,
											"name": "SWAP2"
										},
										{
											"begin": 8044,
											"end": 8070,
											"name": "SWAP1"
										},
										{
											"begin": 8044,
											"end": 8070,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8044,
											"end": 8070,
											"name": "AND"
										},
										{
											"begin": 8044,
											"end": 8070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8044,
											"end": 8070,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 8044,
											"end": 8070,
											"name": "JUMPDEST"
										},
										{
											"begin": 8028,
											"end": 8036,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8037,
											"end": 8040,
											"name": "DUP7"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "AND"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "AND"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "DUP2"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "MSTORE"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "ADD"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "SWAP1"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "DUP2"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "MSTORE"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "ADD"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "KECCAK256"
										},
										{
											"begin": 8028,
											"end": 8070,
											"name": "DUP2"
										},
										{
											"begin": 8028,
											"end": 8070,
											"name": "SWAP1"
										},
										{
											"begin": 8028,
											"end": 8070,
											"name": "SSTORE"
										},
										{
											"begin": 8028,
											"end": 8070,
											"name": "POP"
										},
										{
											"begin": 8107,
											"end": 8110,
											"name": "DUP4"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "AND"
										},
										{
											"begin": 8095,
											"end": 8105,
											"name": "CALLER"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "AND"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8112,
											"end": 8119,
											"name": "DUP6"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "MLOAD"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "DUP1"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "DUP3"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "DUP2"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "MSTORE"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "ADD"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "SWAP2"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "POP"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "POP"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "MLOAD"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "DUP1"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "SWAP2"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "SUB"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "SWAP1"
										},
										{
											"begin": 8086,
											"end": 8120,
											"name": "LOG3"
										},
										{
											"begin": 8138,
											"end": 8142,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8131,
											"end": 8142,
											"name": "SWAP2"
										},
										{
											"begin": 8131,
											"end": 8142,
											"name": "POP"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "POP"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP3"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "SWAP2"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "POP"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "POP"
										},
										{
											"begin": 7751,
											"end": 8150,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "JUMPDEST"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "SWAP1"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "SLOAD"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "SWAP1"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "EXP"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "SWAP1"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "DIV"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "AND"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "DUP2"
										},
										{
											"begin": 5737,
											"end": 5777,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "JUMPDEST"
										},
										{
											"begin": 9247,
											"end": 9251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9263,
											"end": 9277,
											"name": "DUP1"
										},
										{
											"begin": 9317,
											"end": 9325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9293,
											"end": 9305,
											"name": "DUP5"
										},
										{
											"begin": 9263,
											"end": 9306,
											"name": "SWAP2"
										},
										{
											"begin": 9263,
											"end": 9306,
											"name": "POP"
										},
										{
											"begin": 9328,
											"end": 9329,
											"name": "DUP2"
										},
										{
											"begin": 9328,
											"end": 9339,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9328,
											"end": 9339,
											"name": "AND"
										},
										{
											"begin": 9328,
											"end": 9339,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9340,
											"end": 9343,
											"name": "DUP6"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "MLOAD"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP3"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "AND"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "MUL"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP2"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "MSTORE"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "ADD"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP1"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP3"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "AND"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "AND"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP2"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "MSTORE"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "ADD"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "SWAP2"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "POP"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "POP"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "MLOAD"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP1"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP4"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "SUB"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP2"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP8"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP1"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "POP"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "GAS"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "CALL"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "POP"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "POP"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "POP"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "POP"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "MLOAD"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP2"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "ADD"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "SWAP1"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP1"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP1"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "MLOAD"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "SWAP1"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "ADD"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "SWAP1"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "SWAP3"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "SWAP2"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "SWAP1"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "POP"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "POP"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "POP"
										},
										{
											"begin": 9317,
											"end": 9344,
											"name": "SWAP1"
										},
										{
											"begin": 9317,
											"end": 9344,
											"name": "POP"
										},
										{
											"begin": 9362,
											"end": 9365,
											"name": "DUP1"
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "SWAP3"
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "POP"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "POP"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "POP"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP3"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "SWAP2"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "POP"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "POP"
										},
										{
											"begin": 9162,
											"end": 9373,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6075,
											"end": 6189,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 6075,
											"end": 6189,
											"name": "JUMPDEST"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SLOAD"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "EXP"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "DIV"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "CALLER"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "EQ"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "ISZERO"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "ISZERO"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "JUMPI"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "DUP1"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "REVERT"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "JUMPDEST"
										},
										{
											"begin": 6126,
											"end": 6136,
											"name": "CALLER"
										},
										{
											"begin": 6118,
											"end": 6123,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6118,
											"end": 6123,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "EXP"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "DUP2"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "SLOAD"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "DUP2"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "MUL"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "NOT"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "AND"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "SWAP1"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "DUP4"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "AND"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "MUL"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "OR"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "SWAP1"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "SSTORE"
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "POP"
										},
										{
											"begin": 6165,
											"end": 6181,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 6165,
											"end": 6181,
											"name": "SLOAD"
										},
										{
											"begin": 6147,
											"end": 6155,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "SWAP1"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "SLOAD"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "SWAP1"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "EXP"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "SWAP1"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "DIV"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "AND"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "AND"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "AND"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "DUP2"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "MSTORE"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "ADD"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "SWAP1"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "DUP2"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "MSTORE"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "ADD"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6162,
											"name": "KECCAK256"
										},
										{
											"begin": 6147,
											"end": 6181,
											"name": "DUP2"
										},
										{
											"begin": 6147,
											"end": 6181,
											"name": "SWAP1"
										},
										{
											"begin": 6147,
											"end": 6181,
											"name": "SSTORE"
										},
										{
											"begin": 6147,
											"end": 6181,
											"name": "POP"
										},
										{
											"begin": 6075,
											"end": 6189,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "JUMPDEST"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "SLOAD"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "DUP2"
										},
										{
											"begin": 5301,
											"end": 5366,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "JUMPDEST"
										},
										{
											"begin": 9091,
											"end": 9098,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9125,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9126,
											"end": 9132,
											"name": "DUP5"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "AND"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "AND"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "DUP2"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "MSTORE"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "ADD"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "SWAP1"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "DUP2"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "MSTORE"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "ADD"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "KECCAK256"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9134,
											"end": 9142,
											"name": "DUP4"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "AND"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "AND"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "DUP2"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "MSTORE"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "ADD"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "SWAP1"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "DUP2"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "MSTORE"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "ADD"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "KECCAK256"
										},
										{
											"begin": 9118,
											"end": 9143,
											"name": "SLOAD"
										},
										{
											"begin": 9111,
											"end": 9143,
											"name": "SWAP1"
										},
										{
											"begin": 9111,
											"end": 9143,
											"name": "POP"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP3"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "SWAP2"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "POP"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "POP"
										},
										{
											"begin": 9013,
											"end": 9151,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "JUMPDEST"
										},
										{
											"begin": 9969,
											"end": 9973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9986,
											"end": 10004,
											"name": "DUP1"
										},
										{
											"begin": 10046,
											"end": 10060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SLOAD"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "EXP"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "DIV"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "CALLER"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "EQ"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "ISZERO"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "ISZERO"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "JUMPI"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "DUP1"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "REVERT"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 5913,
											"end": 5941,
											"name": "JUMPDEST"
										},
										{
											"begin": 10020,
											"end": 10034,
											"name": "DUP4"
										},
										{
											"begin": 9986,
											"end": 10035,
											"name": "SWAP2"
										},
										{
											"begin": 9986,
											"end": 10035,
											"name": "POP"
										},
										{
											"begin": 10063,
											"end": 10068,
											"name": "DUP2"
										},
										{
											"begin": 10063,
											"end": 10078,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10063,
											"end": 10078,
											"name": "AND"
										},
										{
											"begin": 10063,
											"end": 10078,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 10087,
											"end": 10091,
											"name": "ADDRESS"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "MLOAD"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "DUP3"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "AND"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "MUL"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "DUP2"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "MSTORE"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "ADD"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "DUP1"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "DUP3"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "AND"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "AND"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "DUP2"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "MSTORE"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "ADD"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "SWAP2"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "POP"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "POP"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "MLOAD"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "DUP1"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "DUP4"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "SUB"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "DUP2"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "DUP8"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "DUP1"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "POP"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "GAS"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "CALL"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "POP"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "POP"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "POP"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "POP"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "MLOAD"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "DUP2"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "ADD"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "SWAP1"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "DUP1"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "DUP1"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "MLOAD"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "SWAP1"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "ADD"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "SWAP1"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "SWAP3"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "SWAP2"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "SWAP1"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "POP"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "POP"
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "POP"
										},
										{
											"begin": 10046,
											"end": 10093,
											"name": "SWAP1"
										},
										{
											"begin": 10046,
											"end": 10093,
											"name": "POP"
										},
										{
											"begin": 10111,
											"end": 10116,
											"name": "DUP2"
										},
										{
											"begin": 10111,
											"end": 10125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10111,
											"end": 10125,
											"name": "AND"
										},
										{
											"begin": 10111,
											"end": 10125,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 10126,
											"end": 10131,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10126,
											"end": 10131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10126,
											"end": 10131,
											"name": "SWAP1"
										},
										{
											"begin": 10126,
											"end": 10131,
											"name": "SLOAD"
										},
										{
											"begin": 10126,
											"end": 10131,
											"name": "SWAP1"
										},
										{
											"begin": 10126,
											"end": 10131,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10126,
											"end": 10131,
											"name": "EXP"
										},
										{
											"begin": 10126,
											"end": 10131,
											"name": "SWAP1"
										},
										{
											"begin": 10126,
											"end": 10131,
											"name": "DIV"
										},
										{
											"begin": 10126,
											"end": 10131,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10126,
											"end": 10131,
											"name": "AND"
										},
										{
											"begin": 10133,
											"end": 10139,
											"name": "DUP4"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "MLOAD"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP4"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "AND"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "MUL"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP2"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "MSTORE"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "ADD"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP1"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP4"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "AND"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "AND"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP2"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "MSTORE"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "ADD"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP3"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP2"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "MSTORE"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "ADD"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "SWAP3"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "POP"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "POP"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "POP"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "MLOAD"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP1"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP4"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "SUB"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP2"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP8"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP1"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "POP"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "GAS"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "CALL"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "POP"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "POP"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "POP"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "POP"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "MLOAD"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP2"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "ADD"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "SWAP1"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP1"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "DUP1"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "MLOAD"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "SWAP1"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "ADD"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "SWAP1"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "SWAP3"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "SWAP2"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "SWAP1"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "POP"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "POP"
										},
										{
											"begin": 10111,
											"end": 10140,
											"name": "POP"
										},
										{
											"begin": 10104,
											"end": 10140,
											"name": "SWAP3"
										},
										{
											"begin": 10104,
											"end": 10140,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "SWAP2"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 10148,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "JUMPDEST"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "SLOAD"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "DUP2"
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "JUMPDEST"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "MSTORE"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "DUP1"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "MSTORE"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "KECCAK256"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SWAP2"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "POP"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SLOAD"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SWAP1"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "EXP"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "SWAP1"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "DIV"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "AND"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "DUP2"
										},
										{
											"begin": 5006,
											"end": 5048,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6381,
											"end": 6850,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 6381,
											"end": 6850,
											"name": "JUMPDEST"
										},
										{
											"begin": 6452,
											"end": 6456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "SWAP1"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "SLOAD"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "SWAP1"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "EXP"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "SWAP1"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "DIV"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "AND"
										},
										{
											"begin": 5828,
											"end": 5849,
											"name": "ISZERO"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "ISZERO"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "ISZERO"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "JUMPI"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "DUP1"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "REVERT"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "JUMPDEST"
										},
										{
											"begin": 6488,
											"end": 6517,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 6509,
											"end": 6516,
											"name": "DUP3"
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "SLOAD"
										},
										{
											"begin": 6488,
											"end": 6508,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 6488,
											"end": 6508,
											"name": "SWAP1"
										},
										{
											"begin": 6488,
											"end": 6517,
											"name": "SWAP2"
										},
										{
											"begin": 6488,
											"end": 6517,
											"name": "SWAP1"
										},
										{
											"begin": 6488,
											"end": 6517,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6488,
											"end": 6517,
											"name": "AND"
										},
										{
											"begin": 6488,
											"end": 6517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6488,
											"end": 6517,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 6488,
											"end": 6517,
											"name": "JUMPDEST"
										},
										{
											"begin": 6469,
											"end": 6485,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 6469,
											"end": 6517,
											"name": "DUP2"
										},
										{
											"begin": 6469,
											"end": 6517,
											"name": "SWAP1"
										},
										{
											"begin": 6469,
											"end": 6517,
											"name": "SSTORE"
										},
										{
											"begin": 6469,
											"end": 6517,
											"name": "POP"
										},
										{
											"begin": 6545,
											"end": 6572,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP3"
										},
										{
											"begin": 6545,
											"end": 6559,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6545,
											"end": 6559,
											"name": "SLOAD"
										},
										{
											"begin": 6545,
											"end": 6563,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 6545,
											"end": 6563,
											"name": "SWAP1"
										},
										{
											"begin": 6545,
											"end": 6572,
											"name": "SWAP2"
										},
										{
											"begin": 6545,
											"end": 6572,
											"name": "SWAP1"
										},
										{
											"begin": 6545,
											"end": 6572,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6545,
											"end": 6572,
											"name": "AND"
										},
										{
											"begin": 6545,
											"end": 6572,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6545,
											"end": 6572,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 6545,
											"end": 6572,
											"name": "JUMPDEST"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6528,
											"end": 6572,
											"name": "DUP2"
										},
										{
											"begin": 6528,
											"end": 6572,
											"name": "SWAP1"
										},
										{
											"begin": 6528,
											"end": 6572,
											"name": "SSTORE"
										},
										{
											"begin": 6528,
											"end": 6572,
											"name": "POP"
										},
										{
											"begin": 6599,
											"end": 6625,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 6617,
											"end": 6624,
											"name": "DUP3"
										},
										{
											"begin": 6599,
											"end": 6607,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6608,
											"end": 6611,
											"name": "DUP7"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "AND"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "AND"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "DUP2"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "MSTORE"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "ADD"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "SWAP1"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "DUP2"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "MSTORE"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "ADD"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "KECCAK256"
										},
										{
											"begin": 6599,
											"end": 6612,
											"name": "SLOAD"
										},
										{
											"begin": 6599,
											"end": 6616,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 6599,
											"end": 6616,
											"name": "SWAP1"
										},
										{
											"begin": 6599,
											"end": 6625,
											"name": "SWAP2"
										},
										{
											"begin": 6599,
											"end": 6625,
											"name": "SWAP1"
										},
										{
											"begin": 6599,
											"end": 6625,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6599,
											"end": 6625,
											"name": "AND"
										},
										{
											"begin": 6599,
											"end": 6625,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6599,
											"end": 6625,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 6599,
											"end": 6625,
											"name": "JUMPDEST"
										},
										{
											"begin": 6583,
											"end": 6591,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6592,
											"end": 6595,
											"name": "DUP6"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "AND"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "AND"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "DUP2"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "MSTORE"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "ADD"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "SWAP1"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "DUP2"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "MSTORE"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "ADD"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "KECCAK256"
										},
										{
											"begin": 6583,
											"end": 6625,
											"name": "DUP2"
										},
										{
											"begin": 6583,
											"end": 6625,
											"name": "SWAP1"
										},
										{
											"begin": 6583,
											"end": 6625,
											"name": "SSTORE"
										},
										{
											"begin": 6583,
											"end": 6625,
											"name": "POP"
										},
										{
											"begin": 6647,
											"end": 6650,
											"name": "DUP3"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "AND"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "PUSH",
											"value": "8940C4B8E215F8822C5C8F0056C12652C746CBC57EEDBD2A440B175971D47A77"
										},
										{
											"begin": 6652,
											"end": 6659,
											"name": "DUP4"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "MLOAD"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "DUP1"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "DUP3"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "DUP2"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "MSTORE"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "ADD"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "SWAP2"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "POP"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "POP"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "MLOAD"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "DUP1"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "SWAP2"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "SUB"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "SWAP1"
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "LOG2"
										},
										{
											"begin": 6697,
											"end": 6700,
											"name": "DUP3"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "AND"
										},
										{
											"begin": 6693,
											"end": 6694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "AND"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6702,
											"end": 6709,
											"name": "DUP5"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "MLOAD"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "DUP1"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "DUP3"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "DUP2"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "MSTORE"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "ADD"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "SWAP2"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "POP"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "POP"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "MLOAD"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "DUP1"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "SWAP2"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "SUB"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "SWAP1"
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "LOG3"
										},
										{
											"begin": 6728,
											"end": 6732,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6721,
											"end": 6732,
											"name": "SWAP1"
										},
										{
											"begin": 6721,
											"end": 6732,
											"name": "POP"
										},
										{
											"begin": 6381,
											"end": 6850,
											"name": "SWAP3"
										},
										{
											"begin": 6381,
											"end": 6850,
											"name": "SWAP2"
										},
										{
											"begin": 6381,
											"end": 6850,
											"name": "POP"
										},
										{
											"begin": 6381,
											"end": 6850,
											"name": "POP"
										},
										{
											"begin": 6381,
											"end": 6850,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3223,
											"end": 3335,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 3223,
											"end": 3335,
											"name": "JUMPDEST"
										},
										{
											"begin": 3281,
											"end": 3288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3306,
											"name": "DUP1"
										},
										{
											"begin": 3313,
											"end": 3314,
											"name": "DUP3"
										},
										{
											"begin": 3309,
											"end": 3310,
											"name": "DUP5"
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "DUP2"
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "ISZERO"
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "ISZERO"
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "JUMPI"
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "INVALID"
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "JUMPDEST"
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "DIV"
										},
										{
											"begin": 3297,
											"end": 3314,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3314,
											"name": "POP"
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "DUP1"
										},
										{
											"begin": 3321,
											"end": 3329,
											"name": "SWAP2"
										},
										{
											"begin": 3321,
											"end": 3329,
											"name": "POP"
										},
										{
											"begin": 3223,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3223,
											"end": 3335,
											"name": "SWAP3"
										},
										{
											"begin": 3223,
											"end": 3335,
											"name": "SWAP2"
										},
										{
											"begin": 3223,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3223,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3223,
											"end": 3335,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3070,
											"end": 3217,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 3070,
											"end": 3217,
											"name": "JUMPDEST"
										},
										{
											"begin": 3128,
											"end": 3135,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP1"
										},
										{
											"begin": 3160,
											"end": 3161,
											"name": "DUP3"
										},
										{
											"begin": 3156,
											"end": 3157,
											"name": "DUP5"
										},
										{
											"begin": 3156,
											"end": 3161,
											"name": "MUL"
										},
										{
											"begin": 3144,
											"end": 3161,
											"name": "SWAP1"
										},
										{
											"begin": 3144,
											"end": 3161,
											"name": "POP"
										},
										{
											"begin": 3180,
											"end": 3181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3176,
											"name": "DUP5"
										},
										{
											"begin": 3175,
											"end": 3181,
											"name": "EQ"
										},
										{
											"begin": 3175,
											"end": 3195,
											"name": "DUP1"
										},
										{
											"begin": 3175,
											"end": 3195,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 3175,
											"end": 3195,
											"name": "JUMPI"
										},
										{
											"begin": 3175,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP3"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP5"
										},
										{
											"begin": 3185,
											"end": 3186,
											"name": "DUP3"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "ISZERO"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "ISZERO"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "JUMPI"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "INVALID"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "JUMPDEST"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DIV"
										},
										{
											"begin": 3185,
											"end": 3195,
											"name": "EQ"
										},
										{
											"begin": 3175,
											"end": 3195,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 3175,
											"end": 3195,
											"name": "JUMPDEST"
										},
										{
											"begin": 3168,
											"end": 3196,
											"name": "ISZERO"
										},
										{
											"begin": 3168,
											"end": 3196,
											"name": "ISZERO"
										},
										{
											"begin": 3168,
											"end": 3196,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 3168,
											"end": 3196,
											"name": "JUMPI"
										},
										{
											"begin": 3168,
											"end": 3196,
											"name": "INVALID"
										},
										{
											"begin": 3168,
											"end": 3196,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 3168,
											"end": 3196,
											"name": "JUMPDEST"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP1"
										},
										{
											"begin": 3203,
											"end": 3211,
											"name": "SWAP2"
										},
										{
											"begin": 3203,
											"end": 3211,
											"name": "POP"
										},
										{
											"begin": 3070,
											"end": 3217,
											"name": "POP"
										},
										{
											"begin": 3070,
											"end": 3217,
											"name": "SWAP3"
										},
										{
											"begin": 3070,
											"end": 3217,
											"name": "SWAP2"
										},
										{
											"begin": 3070,
											"end": 3217,
											"name": "POP"
										},
										{
											"begin": 3070,
											"end": 3217,
											"name": "POP"
										},
										{
											"begin": 3070,
											"end": 3217,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3341,
											"end": 3454,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 3341,
											"end": 3454,
											"name": "JUMPDEST"
										},
										{
											"begin": 3399,
											"end": 3406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3428,
											"name": "DUP3"
										},
										{
											"begin": 3422,
											"end": 3423,
											"name": "DUP3"
										},
										{
											"begin": 3422,
											"end": 3428,
											"name": "GT"
										},
										{
											"begin": 3422,
											"end": 3428,
											"name": "ISZERO"
										},
										{
											"begin": 3415,
											"end": 3429,
											"name": "ISZERO"
										},
										{
											"begin": 3415,
											"end": 3429,
											"name": "ISZERO"
										},
										{
											"begin": 3415,
											"end": 3429,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 3415,
											"end": 3429,
											"name": "JUMPI"
										},
										{
											"begin": 3415,
											"end": 3429,
											"name": "INVALID"
										},
										{
											"begin": 3415,
											"end": 3429,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 3415,
											"end": 3429,
											"name": "JUMPDEST"
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "DUP2"
										},
										{
											"begin": 3443,
											"end": 3444,
											"name": "DUP4"
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "SUB"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "POP"
										},
										{
											"begin": 3341,
											"end": 3454,
											"name": "SWAP3"
										},
										{
											"begin": 3341,
											"end": 3454,
											"name": "SWAP2"
										},
										{
											"begin": 3341,
											"end": 3454,
											"name": "POP"
										},
										{
											"begin": 3341,
											"end": 3454,
											"name": "POP"
										},
										{
											"begin": 3341,
											"end": 3454,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3460,
											"end": 3593,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 3460,
											"end": 3593,
											"name": "JUMPDEST"
										},
										{
											"begin": 3518,
											"end": 3525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3543,
											"name": "DUP1"
										},
										{
											"begin": 3550,
											"end": 3551,
											"name": "DUP3"
										},
										{
											"begin": 3546,
											"end": 3547,
											"name": "DUP5"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "ADD"
										},
										{
											"begin": 3534,
											"end": 3551,
											"name": "SWAP1"
										},
										{
											"begin": 3534,
											"end": 3551,
											"name": "POP"
										},
										{
											"begin": 3570,
											"end": 3571,
											"name": "DUP4"
										},
										{
											"begin": 3565,
											"end": 3566,
											"name": "DUP2"
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "LT"
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "ISZERO"
										},
										{
											"begin": 3558,
											"end": 3572,
											"name": "ISZERO"
										},
										{
											"begin": 3558,
											"end": 3572,
											"name": "ISZERO"
										},
										{
											"begin": 3558,
											"end": 3572,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 3558,
											"end": 3572,
											"name": "JUMPI"
										},
										{
											"begin": 3558,
											"end": 3572,
											"name": "INVALID"
										},
										{
											"begin": 3558,
											"end": 3572,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 3558,
											"end": 3572,
											"name": "JUMPDEST"
										},
										{
											"begin": 3586,
											"end": 3587,
											"name": "DUP1"
										},
										{
											"begin": 3579,
											"end": 3587,
											"name": "SWAP2"
										},
										{
											"begin": 3579,
											"end": 3587,
											"name": "POP"
										},
										{
											"begin": 3460,
											"end": 3593,
											"name": "POP"
										},
										{
											"begin": 3460,
											"end": 3593,
											"name": "SWAP3"
										},
										{
											"begin": 3460,
											"end": 3593,
											"name": "SWAP2"
										},
										{
											"begin": 3460,
											"end": 3593,
											"name": "POP"
										},
										{
											"begin": 3460,
											"end": 3593,
											"name": "POP"
										},
										{
											"begin": 3460,
											"end": 3593,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"KGC()": "c63e6171",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blacklist(address)": "f9f92be4",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"distributionFinished()": "c108d542",
							"finishDistribution()": "9b1cbccc",
							"getTokenBalance(address,address)": "c489744b",
							"getTokens()": "aa6ca808",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalDistributed()": "efca2eed",
							"totalRemaining()": "d8a54360",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"value()": "3fa4f245",
							"withdraw()": "3ccfd60b",
							"withdrawForeignTokens(address)": "e58fc54c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishDistribution\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distributionFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"KGC\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRemaining\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawForeignTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Distr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DistrFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Kagi Crypto.sol\":\"KagiCrypto\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Kagi Crypto.sol\":{\"keccak256\":\"0xe836826110a4b0f2c2806ba8604efabb9c83e89150e6295aefa45790704833f7\",\"urls\":[\"bzzr://62e0435f099da3dd0fbd468a3b7dc92a561d7c4cb6cf6547b518e4d7e6973c41\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Owned": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "newOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Kagi Crypto.sol\":3600:3678  contract Owned {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Kagi Crypto.sol\":3600:3678  contract Owned {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Kagi Crypto.sol\":3600:3678  contract Owned {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xd4ee1d90\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Kagi Crypto.sol\":3622:3642  address public owner */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_4:\n        /* \"Kagi Crypto.sol\":3622:3642  address public owner */\n      pop\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":3649:3672  address public newOwner */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"Kagi Crypto.sol\":3649:3672  address public newOwner */\n      pop\n      tag_8\n      jump(tag_9)\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Kagi Crypto.sol\":3622:3642  address public owner */\n    tag_6:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Kagi Crypto.sol\":3649:3672  address public newOwner */\n    tag_9:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582017e2e6cfbe25716f9652d28120e7b9abb90a7b0cf5fc4256d278d7771e79c39b0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610176806100206000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610051578063d4ee1d90146100a8575b600080fd5b34801561005d57600080fd5b506100666100ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100b457600080fd5b506100bd610124565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a7230582017e2e6cfbe25716f9652d28120e7b9abb90a7b0cf5fc4256d278d7771e79c39b0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 OR 0xe2 0xe6 0xcf 0xbe 0x25 PUSH18 0x6F9652D28120E7B9ABB90A7B0CF5FC4256D2 PUSH25 0xD7771E79C39B00290000000000000000000000000000000000 ",
							"sourceMap": "3600:78:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3600:78:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610051578063d4ee1d90146100a8575b600080fd5b34801561005d57600080fd5b506100666100ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100b457600080fd5b506100bd610124565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a7230582017e2e6cfbe25716f9652d28120e7b9abb90a7b0cf5fc4256d278d7771e79c39b0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 OR 0xe2 0xe6 0xcf 0xbe 0x25 PUSH18 0x6F9652D28120E7B9ABB90A7B0CF5FC4256D2 PUSH25 0xD7771E79C39B00290000000000000000000000000000000000 ",
							"sourceMap": "3600:78:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3622:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3622:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;3649:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3649:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;3622:20;;;;;;;;;;;;;:::o;3649:23::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "74800",
								"executionCost": "123",
								"totalCost": "74923"
							},
							"external": {
								"newOwner()": "464",
								"owner()": "442"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3600,
									"end": 3678,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 3600,
									"end": 3678,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3600,
									"end": 3678,
									"name": "MSTORE"
								},
								{
									"begin": 3600,
									"end": 3678,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 3600,
									"end": 3678,
									"name": "POP"
								},
								{
									"begin": 3600,
									"end": 3678,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3600,
									"end": 3678,
									"name": "DUP1"
								},
								{
									"begin": 3600,
									"end": 3678,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3600,
									"end": 3678,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3600,
									"end": 3678,
									"name": "CODECOPY"
								},
								{
									"begin": 3600,
									"end": 3678,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3600,
									"end": 3678,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582017e2e6cfbe25716f9652d28120e7b9abb90a7b0cf5fc4256d278d7771e79c39b0029",
									".code": [
										{
											"begin": 3600,
											"end": 3678,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "MSTORE"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "LT"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "JUMPI"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "SWAP1"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "DIV"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "AND"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "DUP1"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "EQ"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "JUMPI"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "DUP1"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "PUSH",
											"value": "D4EE1D90"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "EQ"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "JUMPI"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "JUMPDEST"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "DUP1"
										},
										{
											"begin": 3600,
											"end": 3678,
											"name": "REVERT"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "JUMPDEST"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "POP"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "JUMP"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "JUMPDEST"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "MLOAD"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "DUP3"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "AND"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "AND"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "DUP2"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "MSTORE"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "ADD"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SWAP2"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "POP"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "POP"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "MLOAD"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SWAP2"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SUB"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SWAP1"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "RETURN"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "JUMPDEST"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "POP"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "JUMP"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "JUMPDEST"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "MLOAD"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "DUP1"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "DUP3"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "AND"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "AND"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "DUP2"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "MSTORE"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "ADD"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "SWAP2"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "POP"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "POP"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "MLOAD"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "DUP1"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "SWAP2"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "SUB"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "SWAP1"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "RETURN"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "JUMPDEST"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SWAP1"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SLOAD"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SWAP1"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "EXP"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SWAP1"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "DIV"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "AND"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "DUP2"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "JUMPDEST"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "SWAP1"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "SLOAD"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "SWAP1"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "EXP"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "SWAP1"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "DIV"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "AND"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "DUP2"
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"newOwner()": "d4ee1d90",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Kagi Crypto.sol\":\"Owned\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Kagi Crypto.sol\":{\"keccak256\":\"0xe836826110a4b0f2c2806ba8604efabb9c83e89150e6295aefa45790704833f7\",\"urls\":[\"bzzr://62e0435f099da3dd0fbd468a3b7dc92a561d7c4cb6cf6547b518e4d7e6973c41\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Kagi Crypto.sol\":3048:3596  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Kagi Crypto.sol\":3048:3596  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820b50d2aa17323960b298756200b66d6171eb2f972dd98ad884233dabb6c74fee60029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820b50d2aa17323960b298756200b66d6171eb2f972dd98ad884233dabb6c74fee60029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb5 0xd 0x2a LOG1 PUSH20 0x23960B298756200B66D6171EB2F972DD98AD8842 CALLER 0xda 0xbb PUSH13 0x74FEE600290000000000000000 ",
							"sourceMap": "3048:548:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820b50d2aa17323960b298756200b66d6171eb2f972dd98ad884233dabb6c74fee60029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb5 0xd 0x2a LOG1 PUSH20 0x23960B298756200B66D6171EB2F972DD98AD8842 CALLER 0xda 0xbb PUSH13 0x74FEE600290000000000000000 ",
							"sourceMap": "3048:548:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3048,
									"end": 3596,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3048,
									"end": 3596,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820b50d2aa17323960b298756200b66d6171eb2f972dd98ad884233dabb6c74fee60029",
									".code": [
										{
											"begin": 3048,
											"end": 3596,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 3048,
											"end": 3596,
											"name": "ADDRESS"
										},
										{
											"begin": 3048,
											"end": 3596,
											"name": "EQ"
										},
										{
											"begin": 3048,
											"end": 3596,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3048,
											"end": 3596,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3048,
											"end": 3596,
											"name": "MSTORE"
										},
										{
											"begin": 3048,
											"end": 3596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3596,
											"name": "DUP1"
										},
										{
											"begin": 3048,
											"end": 3596,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Kagi Crypto.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Kagi Crypto.sol\":{\"keccak256\":\"0xe836826110a4b0f2c2806ba8604efabb9c83e89150e6295aefa45790704833f7\",\"urls\":[\"bzzr://62e0435f099da3dd0fbd468a3b7dc92a561d7c4cb6cf6547b518e4d7e6973c41\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Token": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "supply",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "distr",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"distr(address,uint256)": "34e24640",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Kagi Crypto.sol": {
				"ast": {
					"absolutePath": "Kagi Crypto.sol",
					"exportedSymbols": {
						"ERC20": [
							183
						],
						"ERC20Basic": [
							143
						],
						"ForeignToken": [
							116
						],
						"KagiCrypto": [
							861
						],
						"Owned": [
							99
						],
						"SafeMath": [
							94
						],
						"Token": [
							205
						]
					},
					"id": 862,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "3020:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 94,
							"linearizedBaseContracts": [
								94
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "3137:80:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 31,
														"src": "3144:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3144:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 15,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 12,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "3156:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 13,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "3160:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3156:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3144:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 17,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "3175:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3180:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3175:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 22,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 20,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "3185:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 21,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "3189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3185:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 23,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "3194:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3185:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3175:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 16,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "3168:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "3168:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "3210:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 29,
												"nodeType": "Return",
												"src": "3203:8:0"
											}
										]
									},
									"documentation": null,
									"id": 31,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "3083:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "3094:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3082:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "3128:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3127:9:0"
									},
									"scope": 94,
									"src": "3070:147:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "3290:45:0",
										"statements": [
											{
												"assignments": [
													41
												],
												"declarations": [
													{
														"constant": false,
														"id": 41,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 49,
														"src": "3297:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 40,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 45,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 42,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "3309:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 43,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "3313:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3309:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3297:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 46,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 41,
													"src": "3328:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 39,
												"id": 47,
												"nodeType": "Return",
												"src": "3321:8:0"
											}
										]
									},
									"documentation": null,
									"id": 49,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "3236:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "3247:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3235:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "3281:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3280:9:0"
									},
									"scope": 94,
									"src": "3223:112:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3408:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 59,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "3422:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 60,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "3427:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3422:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 58,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "3415:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3415:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "3415:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 64,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "3443:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 65,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "3447:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3443:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 57,
												"id": 67,
												"nodeType": "Return",
												"src": "3436:12:0"
											}
										]
									},
									"documentation": null,
									"id": 69,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3354:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3365:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3353:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3399:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3398:9:0"
									},
									"scope": 94,
									"src": "3341:113:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3527:66:0",
										"statements": [
											{
												"assignments": [
													79
												],
												"declarations": [
													{
														"constant": false,
														"id": 79,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 93,
														"src": "3534:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 78,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3534:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 83,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 80,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "3546:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 81,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "3550:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3546:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3534:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 85,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "3565:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 86,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "3570:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3565:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 84,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "3558:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3558:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "3558:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 90,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 79,
													"src": "3586:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 77,
												"id": 91,
												"nodeType": "Return",
												"src": "3579:8:0"
											}
										]
									},
									"documentation": null,
									"id": 93,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3473:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3484:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3472:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3518:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3517:9:0"
									},
									"scope": 94,
									"src": "3460:133:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 862,
							"src": "3048:548:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 99,
							"linearizedBaseContracts": [
								99
							],
							"name": "Owned",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 96,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 99,
									"src": "3622:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 95,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3622:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 98,
									"name": "newOwner",
									"nodeType": "VariableDeclaration",
									"scope": 99,
									"src": "3649:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 97,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3649:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								}
							],
							"scope": 862,
							"src": "3600:78:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 116,
							"linearizedBaseContracts": [
								116
							],
							"name": "ForeignToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 106,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3733:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3732:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3774:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3773:9:0"
									},
									"scope": 116,
									"src": "3714:69:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 115,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3807:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3820:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3806:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3852:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3851:6:0"
									},
									"scope": 116,
									"src": "3789:69:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 862,
							"src": "3685:176:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 143,
							"linearizedBaseContracts": [
								143
							],
							"name": "ERC20Basic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 118,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 143,
									"src": "3892:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 117,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3892:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 125,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3944:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3944:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3943:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3982:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3981:9:0"
									},
									"scope": 143,
									"src": "3925:66:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 134,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4015:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4027:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4014:27:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4058:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4058:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4057:6:0"
									},
									"scope": 143,
									"src": "3997:67:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 142,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "4085:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "4107:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "4127:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4084:57:0"
									},
									"src": "4070:72:0"
								}
							],
							"scope": 862,
							"src": "3865:280:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 144,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 143,
										"src": "4167:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$143",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 145,
									"nodeType": "InheritanceSpecifier",
									"src": "4167:10:0"
								}
							],
							"contractDependencies": [
								143
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 183,
							"linearizedBaseContracts": [
								183,
								143
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 154,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "4204:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "4219:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4203:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "4261:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4260:9:0"
									},
									"scope": 183,
									"src": "4185:85:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 165,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "4298:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4298:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "4312:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "4324:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4297:41:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "4355:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4355:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4354:6:0"
									},
									"scope": 183,
									"src": "4276:85:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 174,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4384:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4401:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4383:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4432:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 171,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4432:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4431:6:0"
									},
									"scope": 183,
									"src": "4367:71:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 182,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "4459:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "4482:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "4507:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4458:63:0"
									},
									"src": "4444:78:0"
								}
							],
							"scope": 862,
							"src": "4149:376:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 205,
							"linearizedBaseContracts": [
								205
							],
							"name": "Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 192,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "distr",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4567:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4580:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4566:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4614:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4614:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4613:6:0"
									},
									"scope": 205,
									"src": "4552:68:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 197,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4646:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"name": "supply",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "4676:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4675:16:0"
									},
									"scope": 205,
									"src": "4626:66:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 204,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "4717:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4716:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "4760:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4759:17:0"
									},
									"scope": 205,
									"src": "4698:79:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 862,
							"src": "4529:251:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 206,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 183,
										"src": "4807:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$183",
											"typeString": "contract ERC20"
										}
									},
									"id": 207,
									"nodeType": "InheritanceSpecifier",
									"src": "4807:5:0"
								}
							],
							"contractDependencies": [
								143,
								183
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 861,
							"linearizedBaseContracts": [
								861,
								183,
								143
							],
							"name": "KagiCrypto",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 210,
									"libraryName": {
										"contractScope": null,
										"id": 208,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 94,
										"src": "4836:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$94",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "4830:27:0",
									"typeName": {
										"id": 209,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4849:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 214,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "4863:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 211,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4863:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 212,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 876,
											"src": "4879:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 213,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberName": "sender",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "4879:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 218,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "4898:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 217,
										"keyType": {
											"id": 215,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4907:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4898:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 216,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4918:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 224,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "4942:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 223,
										"keyType": {
											"id": 219,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4951:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4942:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 222,
											"keyType": {
												"id": 220,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4971:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4962:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 221,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4982:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 228,
									"name": "blacklist",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "5006:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 227,
										"keyType": {
											"id": 225,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5015:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5006:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 226,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "5026:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 231,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "5057:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 229,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5057:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4b6167692043727970746f",
										"id": 230,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5087:13:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2a37e05a0cca867c8b454c3cc39fba05102b2f0f872b2c8451052b0d181fd074",
											"typeString": "literal_string \"Kagi Crypto\""
										},
										"value": "Kagi Crypto"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 234,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "5107:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 232,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5107:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4b4743",
										"id": 233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5139:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9707904f395302ec59dc6d1ddb130f507bef2e8403e430824db42643691583ca",
											"typeString": "literal_string \"KGC\""
										},
										"value": "KGC"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 237,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "5151:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 235,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "5151:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 236,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5183:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 240,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "5193:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 238,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5193:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "313030303030303030303030653138",
										"id": 239,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5222:15:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000000"
										},
										"value": "100000000000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 243,
									"name": "totalDistributed",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "5245:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5245:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3330303030303030303030653138",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5279:14:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30000000000000000000000000000_by_1",
											"typeString": "int_const 30000000000000000000000000000"
										},
										"value": "30000000000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 249,
									"name": "totalRemaining",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "5301:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5301:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 247,
												"name": "totalDistributed",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 243,
												"src": "5349:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"argumentTypes": null,
												"id": 245,
												"name": "totalSupply",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "5333:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 246,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "sub",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 69,
											"src": "5333:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
												"typeString": "function (uint256,uint256) pure returns (uint256)"
											}
										},
										"id": 248,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5333:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 252,
									"name": "value",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "5374:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 250,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5374:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "353030303030653138",
										"id": 251,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5397:9:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										},
										"value": "500000e18"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 260,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5434:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": true,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5457:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"indexed": false,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5478:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5433:60:0"
									},
									"src": "5419:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 268,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "5515:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "5539:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "5565:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5514:66:0"
									},
									"src": "5500:81:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 274,
									"name": "Distr",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5604:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5624:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5603:36:0"
									},
									"src": "5592:48:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 276,
									"name": "DistrFinished",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5665:2:0"
									},
									"src": "5646:22:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 282,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"indexed": true,
												"name": "burner",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "5690:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "5714:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5689:39:0"
									},
									"src": "5679:50:0"
								},
								{
									"constant": false,
									"id": 285,
									"name": "distributionFinished",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "5737:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 283,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "5737:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 284,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5772:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "5809:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5828:21:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 288,
																"name": "distributionFinished",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "5829:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															879,
															880
														],
														"referencedDeclaration": 879,
														"src": "5820:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5820:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "5820:30:0"
											},
											{
												"id": 292,
												"nodeType": "PlaceholderStatement",
												"src": "5861:1:0"
											}
										]
									},
									"documentation": null,
									"id": 294,
									"name": "canDistr",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5806:2:0"
									},
									"src": "5789:81:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "5902:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 297,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "5921:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5921:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 299,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "5935:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5921:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 296,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															879,
															880
														],
														"referencedDeclaration": 879,
														"src": "5913:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5913:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "5913:28:0"
											},
											{
												"id": 303,
												"nodeType": "PlaceholderStatement",
												"src": "5952:1:0"
											}
										]
									},
									"documentation": null,
									"id": 305,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5899:2:0"
									},
									"src": "5881:80:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "5997:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 308,
																	"name": "blacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "6016:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 311,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 309,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "6026:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6026:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6016:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6041:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "6016:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															879,
															880
														],
														"referencedDeclaration": 879,
														"src": "6008:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6008:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "6008:39:0"
											},
											{
												"id": 316,
												"nodeType": "PlaceholderStatement",
												"src": "6058:1:0"
											}
										]
									},
									"documentation": null,
									"id": 318,
									"name": "onlyWhitelist",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5994:2:0"
									},
									"src": "5972:95:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "6107:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 323,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "6118:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 324,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "6126:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6126:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6118:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "6118:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 328,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6147:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 330,
														"indexExpression": {
															"argumentTypes": null,
															"id": 329,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6156:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6147:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 331,
														"name": "totalDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "6165:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6147:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "6147:34:0"
											}
										]
									},
									"documentation": null,
									"id": 335,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 321,
											"modifierName": {
												"argumentTypes": null,
												"id": 320,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 305,
												"src": "6090:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6090:9:0"
										}
									],
									"name": "KGC",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6087:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6107:0:0"
									},
									"scope": 861,
									"src": "6075:114:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "6271:99:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 344,
														"name": "distributionFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "6282:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6305:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6282:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "6282:27:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 348,
														"name": "DistrFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "6325:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6325:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "EmitStatement",
												"src": "6320:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6358:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 343,
												"id": 352,
												"nodeType": "Return",
												"src": "6351:11:0"
											}
										]
									},
									"documentation": null,
									"id": 354,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 338,
											"modifierName": {
												"argumentTypes": null,
												"id": 337,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 305,
												"src": "6230:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6230:9:0"
										},
										{
											"arguments": null,
											"id": 340,
											"modifierName": {
												"argumentTypes": null,
												"id": 339,
												"name": "canDistr",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 294,
												"src": "6240:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6240:8:0"
										}
									],
									"name": "finishDistribution",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6227:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "6265:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6265:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:6:0"
									},
									"scope": 861,
									"src": "6200:170:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "6458:392:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 365,
														"name": "totalDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "6469:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 368,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "6509:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 366,
																"name": "totalDistributed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "6488:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "6488:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6488:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6469:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "6469:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 372,
														"name": "totalRemaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "6528:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 375,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "6564:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 373,
																"name": "totalRemaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "6545:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 69,
															"src": "6545:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6545:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6528:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "6528:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 379,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6583:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 381,
														"indexExpression": {
															"argumentTypes": null,
															"id": 380,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "6592:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6583:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 386,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "6617:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 382,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "6599:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 384,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 383,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "6608:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6599:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "6599:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6599:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6583:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "6583:42:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 391,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "6647:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 392,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "6652:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 390,
														"name": "Distr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "6641:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6641:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "EmitStatement",
												"src": "6636:24:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6693:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6685:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6685:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 399,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "6697:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 400,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "6702:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 395,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															260
														],
														"referencedDeclaration": 260,
														"src": "6676:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6676:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "EmitStatement",
												"src": "6671:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6728:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 364,
												"id": 404,
												"nodeType": "Return",
												"src": "6721:11:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 405,
														"name": "totalDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "6756:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 406,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "6776:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6756:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 413,
												"nodeType": "IfStatement",
												"src": "6752:91:0",
												"trueBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "6789:54:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 408,
																	"name": "distributionFinished",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "6804:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6827:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6804:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 411,
															"nodeType": "ExpressionStatement",
															"src": "6804:27:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 415,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 361,
											"modifierName": {
												"argumentTypes": null,
												"id": 360,
												"name": "canDistr",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 294,
												"src": "6426:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6426:8:0"
										}
									],
									"name": "distr",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "6396:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "6409:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6395:30:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "6452:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6452:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6451:6:0"
									},
									"scope": 861,
									"src": "6381:469:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "6890:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 418,
														"name": "getTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "6901:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6901:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "6901:11:0"
											}
										]
									},
									"documentation": null,
									"id": 422,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6870:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6890:0:0"
									},
									"scope": 861,
									"src": "6861:60:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "6991:520:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 429,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7006:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 430,
														"name": "totalRemaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "7014:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7006:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 437,
												"nodeType": "IfStatement",
												"src": "7002:77:0",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "7030:49:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 432,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 252,
																	"src": "7045:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 433,
																	"name": "totalRemaining",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "7053:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7045:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 435,
															"nodeType": "ExpressionStatement",
															"src": "7045:22:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 439,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "7106:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 440,
																"name": "totalRemaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "7115:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7106:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															879,
															880
														],
														"referencedDeclaration": 879,
														"src": "7098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7098:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "7098:32:0"
											},
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"name": "investor",
														"nodeType": "VariableDeclaration",
														"scope": 489,
														"src": "7150:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 444,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7150:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 446,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7169:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "7169:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7150:29:0"
											},
											{
												"assignments": [
													450
												],
												"declarations": [
													{
														"constant": false,
														"id": 450,
														"name": "toGive",
														"nodeType": "VariableDeclaration",
														"scope": 489,
														"src": "7190:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 449,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7190:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"argumentTypes": null,
													"id": 451,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 252,
													"src": "7207:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7190:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 454,
															"name": "investor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7238:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 455,
															"name": "toGive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "7248:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "distr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "7232:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7232:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "7232:23:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 458,
														"name": "toGive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "7279:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7288:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7279:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 468,
												"nodeType": "IfStatement",
												"src": "7275:69:0",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "7291:53:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 461,
																		"name": "blacklist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 228,
																		"src": "7306:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 463,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 462,
																		"name": "investor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "7316:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7306:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7328:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7306:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 466,
															"nodeType": "ExpressionStatement",
															"src": "7306:26:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 469,
														"name": "totalDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "7360:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 470,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "7380:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7360:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 477,
												"nodeType": "IfStatement",
												"src": "7356:91:0",
												"trueBody": {
													"id": 476,
													"nodeType": "Block",
													"src": "7393:54:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 472,
																	"name": "distributionFinished",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "7408:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7431:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7408:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 475,
															"nodeType": "ExpressionStatement",
															"src": "7408:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 478,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7466:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "343939393939",
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7496:6:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_499999_by_1",
																	"typeString": "int_const 499999"
																},
																"value": "499999"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_499999_by_1",
																	"typeString": "int_const 499999"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "353030303030",
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7484:6:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_500000_by_1",
																			"typeString": "int_const 500000"
																		},
																		"value": "500000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_500000_by_1",
																			"typeString": "int_const 500000"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 479,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "7474:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 49,
																	"src": "7474:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7474:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 31,
															"src": "7474:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7474:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7466:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "7466:37:0"
											}
										]
									},
									"documentation": null,
									"id": 489,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 425,
											"modifierName": {
												"argumentTypes": null,
												"id": 424,
												"name": "canDistr",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 294,
												"src": "6961:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6961:8:0"
										},
										{
											"arguments": null,
											"id": 427,
											"modifierName": {
												"argumentTypes": null,
												"id": 426,
												"name": "onlyWhitelist",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 318,
												"src": "6970:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6970:13:0"
										}
									],
									"name": "getTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6950:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6991:0:0"
									},
									"scope": 861,
									"src": "6932:579:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "7588:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 496,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "7606:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 498,
													"indexExpression": {
														"argumentTypes": null,
														"id": 497,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "7615:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7606:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 495,
												"id": 499,
												"nodeType": "Return",
												"src": "7599:23:0"
											}
										]
									},
									"documentation": null,
									"id": 501,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "7538:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7537:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "7579:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7578:9:0"
									},
									"scope": 861,
									"src": "7519:111:0",
									"stateMutability": "view",
									"superFunction": 125,
									"visibility": "public"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "7674:66:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 506,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "7692:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7692:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7692:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 509,
																	"name": "size",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "7711:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "34",
																	"id": 510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7718:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7711:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7692:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 505,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "7685:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7685:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "7685:35:0"
											},
											{
												"id": 515,
												"nodeType": "PlaceholderStatement",
												"src": "7731:1:0"
											}
										]
									},
									"documentation": null,
									"id": 517,
									"name": "onlyPayloadSize",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"name": "size",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "7663:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7663:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7662:11:0"
									},
									"src": "7638:102:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "7853:297:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 532,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "7872:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7887:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7879:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7879:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7872:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															879,
															880
														],
														"referencedDeclaration": 879,
														"src": "7864:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7864:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "7864:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 540,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "7909:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 541,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "7920:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 544,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 542,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "7929:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7929:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7920:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7909:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															879,
															880
														],
														"referencedDeclaration": 879,
														"src": "7901:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7901:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "7901:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 548,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "7961:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 551,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 549,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "7970:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7970:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7961:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 557,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "8009:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 552,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "7984:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 555,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 553,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "7993:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7993:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7984:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 69,
															"src": "7984:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7984:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7961:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "7961:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 561,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "8028:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 563,
														"indexExpression": {
															"argumentTypes": null,
															"id": 562,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "8037:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8028:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 568,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "8062:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 564,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "8044:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 566,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 565,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "8053:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8044:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "8044:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8044:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8028:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "8028:42:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 573,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "8095:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8095:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 575,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "8107:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 576,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "8112:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 572,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															260
														],
														"referencedDeclaration": 260,
														"src": "8086:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8086:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "EmitStatement",
												"src": "8081:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8138:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 530,
												"id": 580,
												"nodeType": "Return",
												"src": "8131:11:0"
											}
										]
									},
									"documentation": null,
									"id": 582,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7815:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7819:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "7815:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 527,
											"modifierName": {
												"argumentTypes": null,
												"id": 523,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 517,
												"src": "7799:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7799:23:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "7769:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "7782:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7768:30:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "7839:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7839:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7838:14:0"
									},
									"scope": 861,
									"src": "7751:399:0",
									"stateMutability": "nonpayable",
									"superFunction": 134,
									"visibility": "public"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "8282:413:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 599,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "8301:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8316:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8308:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8308:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8301:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															879,
															880
														],
														"referencedDeclaration": 879,
														"src": "8293:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8293:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "8293:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 607,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "8338:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 608,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "8349:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 610,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 609,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "8358:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8349:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8338:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 606,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															879,
															880
														],
														"referencedDeclaration": 879,
														"src": "8330:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8330:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "8330:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 615,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "8384:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 616,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "8395:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 618,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 617,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "8403:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8395:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 621,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 619,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "8410:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8410:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8395:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8384:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															879,
															880
														],
														"referencedDeclaration": 879,
														"src": "8376:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8376:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "8376:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 625,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "8442:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 627,
														"indexExpression": {
															"argumentTypes": null,
															"id": 626,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "8451:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8442:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 632,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "8480:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 628,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "8460:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 630,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 629,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "8469:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8460:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 69,
															"src": "8460:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8460:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8442:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "8442:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 636,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "8499:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 640,
															"indexExpression": {
																"argumentTypes": null,
																"id": 637,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "8507:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8499:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 641,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 638,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "8514:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8514:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8499:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 649,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "8559:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 642,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "8528:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 644,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 643,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "8536:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8528:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 647,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 645,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "8543:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8543:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8528:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 69,
															"src": "8528:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8528:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8499:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "8499:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 653,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "8578:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 655,
														"indexExpression": {
															"argumentTypes": null,
															"id": 654,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "8587:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8578:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 660,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "8612:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 656,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "8594:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 658,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 657,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "8603:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8594:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "8594:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8594:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8578:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "8578:42:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 665,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "8645:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 666,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "8652:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 667,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "8657:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															260
														],
														"referencedDeclaration": 260,
														"src": "8636:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8636:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "8631:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8683:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 597,
												"id": 671,
												"nodeType": "Return",
												"src": "8676:11:0"
											}
										]
									},
									"documentation": null,
									"id": 673,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8244:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8248:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "8244:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													}
												}
											],
											"id": 594,
											"modifierName": {
												"argumentTypes": null,
												"id": 590,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 517,
												"src": "8228:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8228:23:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "8183:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "8198:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "8211:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8182:45:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "8268:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8268:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8267:14:0"
									},
									"scope": 861,
									"src": "8161:534:0",
									"stateMutability": "nonpayable",
									"superFunction": 165,
									"visibility": "public"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "8787:215:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 682,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8802:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8812:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8802:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 685,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "8817:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 688,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 686,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "8825:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8825:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8817:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 690,
															"indexExpression": {
																"argumentTypes": null,
																"id": 689,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 675,
																"src": "8837:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8817:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8850:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8817:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8802:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 697,
												"nodeType": "IfStatement",
												"src": "8798:72:0",
												"trueBody": {
													"id": 696,
													"nodeType": "Block",
													"src": "8853:17:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8862:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 681,
															"id": 695,
															"nodeType": "Return",
															"src": "8855:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 698,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "8880:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 702,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 699,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "8888:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8888:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8880:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 703,
														"indexExpression": {
															"argumentTypes": null,
															"id": 701,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8900:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8880:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 704,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "8912:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8880:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "8880:38:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 708,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "8943:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8943:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 710,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8955:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 711,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8965:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															268
														],
														"referencedDeclaration": 268,
														"src": "8934:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8934:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "EmitStatement",
												"src": "8929:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8990:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 681,
												"id": 715,
												"nodeType": "Return",
												"src": "8983:11:0"
											}
										]
									},
									"documentation": null,
									"id": 717,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "8723:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "8741:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8722:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "8773:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8773:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8772:14:0"
									},
									"scope": 861,
									"src": "8706:296:0",
									"stateMutability": "nonpayable",
									"superFunction": 174,
									"visibility": "public"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "9100:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 726,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "9118:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 728,
														"indexExpression": {
															"argumentTypes": null,
															"id": 727,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "9126:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9118:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 730,
													"indexExpression": {
														"argumentTypes": null,
														"id": 729,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "9134:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9118:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 725,
												"id": 731,
												"nodeType": "Return",
												"src": "9111:32:0"
											}
										]
									},
									"documentation": null,
									"id": 733,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "9032:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "9048:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9031:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "9091:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9090:9:0"
									},
									"scope": 861,
									"src": "9013:138:0",
									"stateMutability": "view",
									"superFunction": 154,
									"visibility": "public"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "9252:121:0",
										"statements": [
											{
												"assignments": [
													743
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"name": "t",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "9263:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ForeignToken_$116",
															"typeString": "contract ForeignToken"
														},
														"typeName": {
															"contractScope": null,
															"id": 742,
															"name": "ForeignToken",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 116,
															"src": "9263:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ForeignToken_$116",
																"typeString": "contract ForeignToken"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 747,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 745,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "9293:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 744,
														"name": "ForeignToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "9280:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ForeignToken_$116_$",
															"typeString": "type(contract ForeignToken)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9280:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ForeignToken_$116",
														"typeString": "contract ForeignToken"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9263:43:0"
											},
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"name": "bal",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "9317:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 748,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 754,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 752,
															"name": "who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "9340:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 750,
															"name": "t",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "9328:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ForeignToken_$116",
																"typeString": "contract ForeignToken"
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "9328:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9328:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9317:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 755,
													"name": "bal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 749,
													"src": "9362:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 741,
												"id": 756,
												"nodeType": "Return",
												"src": "9355:10:0"
											}
										]
									},
									"documentation": null,
									"id": 758,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getTokenBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "9187:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "9209:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9186:35:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "9247:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9247:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9246:6:0"
									},
									"scope": 861,
									"src": "9162:211:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "9421:100:0",
										"statements": [
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"name": "GLMRBalance",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9432:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9432:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 766,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "9462:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_KagiCrypto_$861",
																	"typeString": "contract KagiCrypto"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_KagiCrypto_$861",
																	"typeString": "contract KagiCrypto"
																}
															],
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9454:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "9454:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9432:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 773,
															"name": "GLMRBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "9501:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 770,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "9486:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "9486:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9486:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "9486:27:0"
											}
										]
									},
									"documentation": null,
									"id": 777,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 761,
											"modifierName": {
												"argumentTypes": null,
												"id": 760,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 305,
												"src": "9404:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9404:9:0"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9401:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9421:0:0"
									},
									"scope": 861,
									"src": "9384:137:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "9579:298:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 785,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "9598:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 786,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "9608:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 789,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 787,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "9617:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "9617:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9608:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9598:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															879,
															880
														],
														"referencedDeclaration": 879,
														"src": "9590:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9590:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "9590:39:0"
											},
											{
												"assignments": [
													794
												],
												"declarations": [
													{
														"constant": false,
														"id": 794,
														"name": "burner",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "9642:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 793,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9642:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 797,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 795,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "9659:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "9659:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9642:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 798,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "9680:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 800,
														"indexExpression": {
															"argumentTypes": null,
															"id": 799,
															"name": "burner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "9689:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9680:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 805,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "9720:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 801,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "9699:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 803,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 802,
																	"name": "burner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "9708:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9699:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 69,
															"src": "9699:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9699:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9680:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "9680:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 809,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "9738:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 812,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "9768:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 810,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "9752:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 69,
															"src": "9752:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9752:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9738:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "9738:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 816,
														"name": "totalDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "9786:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 819,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "9826:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 817,
																"name": "totalDistributed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "9805:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 69,
															"src": "9805:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9805:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9786:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "9786:47:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 824,
															"name": "burner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "9854:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 825,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "9862:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 823,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "9849:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9849:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "EmitStatement",
												"src": "9844:25:0"
											}
										]
									},
									"documentation": null,
									"id": 829,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 782,
											"modifierName": {
												"argumentTypes": null,
												"id": 781,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 305,
												"src": "9562:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9562:9:0"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "9546:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9545:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9579:0:0"
									},
									"scope": 861,
									"src": "9532:345:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "9975:173:0",
										"statements": [
											{
												"assignments": [
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"name": "token",
														"nodeType": "VariableDeclaration",
														"scope": 860,
														"src": "9986:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ForeignToken_$116",
															"typeString": "contract ForeignToken"
														},
														"typeName": {
															"contractScope": null,
															"id": 838,
															"name": "ForeignToken",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 116,
															"src": "9986:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ForeignToken_$116",
																"typeString": "contract ForeignToken"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 841,
															"name": "_tokenContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "10020:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 840,
														"name": "ForeignToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "10007:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ForeignToken_$116_$",
															"typeString": "type(contract ForeignToken)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10007:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ForeignToken_$116",
														"typeString": "contract ForeignToken"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9986:49:0"
											},
											{
												"assignments": [
													845
												],
												"declarations": [
													{
														"constant": false,
														"id": 845,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 860,
														"src": "10046:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 844,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10046:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 852,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 849,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "10087:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KagiCrypto_$861",
																		"typeString": "contract KagiCrypto"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KagiCrypto_$861",
																		"typeString": "contract KagiCrypto"
																	}
																],
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10079:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10079:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 846,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "10063:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ForeignToken_$116",
																"typeString": "contract ForeignToken"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "10063:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10063:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10046:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 855,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "10126:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 856,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "10133:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 853,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "10111:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ForeignToken_$116",
																"typeString": "contract ForeignToken"
															}
														},
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "10111:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10111:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 837,
												"id": 858,
												"nodeType": "Return",
												"src": "10104:36:0"
											}
										]
									},
									"documentation": null,
									"id": 860,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 834,
											"modifierName": {
												"argumentTypes": null,
												"id": 833,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 305,
												"src": "9943:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9943:9:0"
										}
									],
									"name": "withdrawForeignTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"name": "_tokenContract",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "9919:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9918:24:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "9969:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9969:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9968:6:0"
									},
									"scope": 861,
									"src": "9888:260:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 862,
							"src": "4784:5367:0"
						}
					],
					"src": "3020:7131:0"
				},
				"id": 0
			}
		}
	}
}